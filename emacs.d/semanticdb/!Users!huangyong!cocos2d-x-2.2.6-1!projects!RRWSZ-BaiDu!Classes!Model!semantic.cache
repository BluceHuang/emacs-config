;; Object Model/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Model/"
  :tables
  (list
    (semanticdb-table "BuzzModel.h"
      :major-mode 'c++-mode
      :tags 
        '( ("JMZJH_BuzzModel_h" variable (:constant-flag t) nil [109 126])
            ("cstdlib" include (:system-flag t) nil [128 146])
            ("iostream" include (:system-flag t) nil [147 166])
            ("iomanip" include (:system-flag t) nil [167 185])
            ("vector" include (:system-flag t) nil [186 203])
            ("stdexcept" include (:system-flag t) nil [204 224])
            ("cocos2d.h" include nil nil [225 245])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [247 267])
            ("cocos2d" using (:type ("cocos2d" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [268 292])
            ("CircularQueue" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("private" label nil (reparse-symbol classsubparts) [448 456])
                    ("_pQueue" variable
                       (:pointer 1
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [461 472])
                    ("_front" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [477 505])
                    ("_rear" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [477 505])
                    ("_size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [477 505])
                    ("_MAX_QUEUE_SIZE" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "20"
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [510 551])
                    ("public" label nil (reparse-symbol classsubparts) [557 564])
                    ("CircularQueue" function
                       (:constructor-flag t
                        :arguments 
                          ( ("size" variable
                               (:constant-flag t
                                :default-value "_MAX_QUEUE_SIZE"
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [583 618]))                          
                        :type ("CircularQueue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [569 704])
                    ("CircularQueue" function
                       (:destructor-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [734 739]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [719 765])
                    ("getSize" function
                       (:arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [795 800]))                          
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [780 832])
                    ("getFront" function
                       (:arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [858 863]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [847 1007])
                    ("isEmpty" function
                       (:arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1035 1040]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1022 1078])
                    ("isFull" function
                       (:arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1105 1110]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1093 1162])
                    ("enqueue" function
                       (:arguments 
                          ( ("val" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1190 1203]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1177 1327])
                    ("enqueue2" function
                       (:arguments 
                          ( ("val" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1351 1364]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1337 1491])
                    ("dequeue" function
                       (:arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1511 1516]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1501 1756])
                    ("getList" function
                       (:arguments 
                          ( ("list" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1779 1800]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1766 2095]))                  )
                nil [404 2098])
            ("BuzzModel" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [2119 2126])
                    ("uid" variable (:type "int") (reparse-symbol classsubparts) [2131 2139])
                    ("type" variable (:type "int") (reparse-symbol classsubparts) [2144 2153])
                    ("vlevel" variable (:type "int") (reparse-symbol classsubparts) [2158 2169])
                    ("sex" variable (:type "int") (reparse-symbol classsubparts) [2174 2182])
                    ("name" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2187 2205])
                    ("content" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2210 2231]))                  
                :type "class")
                nil [2101 2234])
            ("online_time" type
               (:members 
                  ( ("btime" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2261 2274])
                    ("etime" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2279 2292]))                  
                :type "struct")
                nil [2236 2295]))          
      :file "BuzzModel.h"
      :pointmax 2303
      :fsize 2448
      :lastmodtime '(21859 7393 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("JMZJH_BuzzModel_h")
          )
)
    (semanticdb-table "LonghuPlayerModel.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("LonghuPlayerModel.h" include nil nil [83 113])
            ("LonghuPlayerModel" function
               (:constructor-flag t
                :parent "LonghuPlayerModel"
                :type ("LonghuPlayerModel" type (:type "class") nil nil))
                nil [116 171])
            ("reset" function
               (:parent "LonghuPlayerModel"
                :type "void")
                nil [174 314]))          
      :file "LonghuPlayerModel.cpp"
      :pointmax 314
      :fsize 313
      :lastmodtime '(22000 18820 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "PlayerModel.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("PlayerModel.h" include nil nil [74 98])
            ("PlayerModel" function
               (:constructor-flag t
                :parent "PlayerModel"
                :type ("PlayerModel" type (:type "class") nil nil))
                nil [100 143])
            ("reset" function
               (:parent "PlayerModel"
                :type "void")
                nil [145 1115]))          
      :file "PlayerModel.cpp"
      :pointmax 1116
      :fsize 1115
      :lastmodtime '(21994 24064 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "GameModel.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("GameModel.h" include nil nil [74 96])
            ("JMGame.h" include nil nil [97 116])
            ("gameModel" variable
               (:pointer 1
                :type ("GameModel" type (:type "class") nil nil))
                nil [118 139])
            ("levelStr" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :default-value "{
	\"土鳖\", // 1
	\"穷二代\", // 2
	\"挖煤工\", // 3
	\"穷挫矮\", // 4
	\"极品屌丝\", // 5
	\"犀利哥\", // 6
	\"临时工\", // 7
	\"文艺青年\", // 8
	\"悲催网管\", // 9
	\"断供房奴\", // 10
	\"苦逼白领\", // 11
	\"黑心工头\", // 12
	\"发廊老板\", // 13
	\"宅男女神\", // 14
	\"高富帅\", // 15
	\"白富美\", // 16
	\"超级金领\", // 17
	\"暴发户\", // 18
	\"煤老板\", // 19
	\"炒房客\", // 20
	\"表哥房姐\", // 21
	\"赌霸\", // 22
	\"赌王\", // 23
	\"赌神\", // 24
	\"赌圣\" // 25
}"
                :type "char")
                nil [141 515])
            ("levelVal" variable
               (:dereference 1
                :default-value "{
	0, // 0
    100, // 1
    300, // 2
    400, // 3
    600, // 4
    1000, // 5
    2000, // 6
    4000, // 7
    6000, // 8
    10000, // 9
    20000, // 10
    50000, // 11
    100000, // 12
    200000, // 13
    500000, // 14
    1000000, // 15
	2000000, // 16;
	5000000, // 17;
	10000000, // 18;
	20000000, // 19;
	50000000, // 20;
	100000000, // 21;
	200000000, // 22;
	500000000, // 23;
	800000000, // 24;
	900000000 // 25
}"
                :type "int")
                nil [518 968])
            ("chatText" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :default-value "{
    \"闷到底，看牌是小狗！\",
    \"你怎么那么爱看牌啊？\",
    \"什么烂牌啊！\",
    \"哟，你牌也太好了吧？\",
    \"快点出牌撒，真墨迹！\",
    \"老天爷赐我一副好牌吧！\",
    \"你敢加我就敢跟，别以为我怕你哦！\",
    \"做人不要太嚣张，小心钱袋输光光！\",
    \"我全压了，敢跟吗?怂货。\",
    \"牌小早点弃牌啊!\",
    \"你等着，我马上充钱虐你。\",
    \"素质房，不看牌不道具。\"
}"
                :type "char")
                nil [970 1226])
            ("tipText" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :default-value "{
    \"小提示：在游戏中完成每局奖励的任务，可以获取到兑换券哦！！！\",
    \"小提示：每局游戏开始后，必须达到可比轮数后，才可进行比牌哦^_^\",
    \"明牌怕暗牌，睁眼怕闭眼，碰上世人独醒我偏睡的主儿，可能会遭大殃！\",
    \"“豹子”是大贵，“同花”是顺势，“顺子”是小康\",
    \"开头几把很重要，都想摸摸对方的牌路，一定要稳住，尽量给人个“好印象”\",
    \"来了大牌不管是蒙的还是明着看的，尽量别先加码，一定把握好火候\",
    \"有人爱闷，有人爱诈，一定要摸好脾气，这样应付起来会很自然的\",
    \"“同花”只是一重天，或许陪伴“同花”的那个“诈”字，才是九重天\",
    \"偶尔诈一次，肯定是没人会看你的，把那些牌点不大不小都吓跑\",
    \"“好印象”是刚开始小牌别上，大家知道你不爱诈，好印象能带来大收获哦\",
    \"尽量掩盖你有一付好牌的痕迹，下注不要太大，尽量多跟注。\",
    \"闷到差牌时使用一张“禁比卡”有时会有意想不到的效果哦！\",
    \"“换牌卡”对于在下注很大时有很明显的效果，请酌情使用！\",
    \"“翻倍卡”的作用不仅能帮你赢钱，还能够起到足够的震慑作用！\",
    \"小提示：“禁比卡”只能限制5轮无法比牌，你也不能与别人比牌\",
    \"小提示：“比牌”的时候请尽量挑选没有使用8倍卡的玩家。\",
    \"小提示：当牌一样的时候，谁先比牌算谁输哦^_^\",
    \"小提示：金币不足时，不能进行下注或跟注，只能比牌哦^_^\"
}"
                :type "char")
                nil [1228 1918])
            ("GameModel" function
               (:constructor-flag t
                :parent "GameModel"
                :type ("GameModel" type (:type "class") nil nil))
                nil [1920 1951])
            ("GameModel" function
               (:destructor-flag t
                :parent "GameModel"
                :type "void")
                nil [1953 1985])
            ("getInstance" function
               (:pointer 1
                :parent "GameModel"
                :type ("GameModel" type (:type "class") nil nil))
                nil [1987 2152])
            ("init" function
               (:parent "GameModel"
                :type "int")
                nil [2154 5873])
            ("isMyself" function
               (:parent "GameModel"
                :arguments 
                  ( ("u" variable (:type "int") (reparse-symbol arg-sub-list) [5900 5906]))                  
                :type "bool")
                nil [5875 5984])
            ("getBetting" function
               (:parent "GameModel"
                :type "int")
                nil [5986 6209])
            ("reset" function
               (:parent "GameModel"
                :type "int")
                nil [6211 6550])
            ("getLevel" function
               (:parent "GameModel"
                :arguments 
                  ( ("exp" variable (:type "int") (reparse-symbol arg-sub-list) [6592 6600]))                  
                :type "int")
                nil [6568 8382])
            ("getLevelString" function
               (:pointer 1
                :parent "GameModel"
                :constant-flag t
                :arguments 
                  ( ("level" variable (:type "int") (reparse-symbol arg-sub-list) [8422 8432]))                  
                :type "char")
                nil [8384 8468])
            ("getLevelMax" function
               (:parent "GameModel"
                :arguments 
                  ( ("myexp" variable (:type "int") (reparse-symbol arg-sub-list) [8540 8550]))                  
                :type "int")
                nil [8513 8688])
            ("getLevelCur" function
               (:parent "GameModel"
                :arguments 
                  ( ("myexp" variable (:type "int") (reparse-symbol arg-sub-list) [8717 8727]))                  
                :type "int")
                nil [8690 8877])
            ("getVipLevel" function
               (:parent "GameModel"
                :arguments 
                  ( ("vlevel" variable (:type "int") (reparse-symbol arg-sub-list) [8906 8917]))                  
                :type "int")
                nil [8879 9349]))          
      :file "GameModel.cpp"
      :pointmax 9349
      :fsize 10946
      :lastmodtime '(22028 51643 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "WanrenPlayerModel.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("WanrenPlayerModel.h" include nil nil [83 113])
            ("WanrenPlayerModel" function
               (:constructor-flag t
                :parent "WanrenPlayerModel"
                :type ("WanrenPlayerModel" type (:type "class") nil nil))
                nil [116 171])
            ("reset" function
               (:parent "WanrenPlayerModel"
                :type "void")
                nil [174 314]))          
      :file "WanrenPlayerModel.cpp"
      :pointmax 314
      :fsize 313
      :lastmodtime '(21874 57648 0 0)
      :unmatched-syntax nil))
  :file "!Users!huangyong!cocos2d-x-2.2.6-1!projects!RRWSZ-BaiDu!Classes!Model!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
