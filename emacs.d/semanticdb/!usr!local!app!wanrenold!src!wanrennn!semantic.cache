;; Object wanrennn/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "wanrennn/"
  :tables
  (list
    (semanticdb-table "logic.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("stdio.h" include (:system-flag t) nil [1 19])
            ("stdlib.h" include (:system-flag t) nil [20 39])
            ("stdarg.h" include (:system-flag t) nil [40 59])
            ("string.h" include (:system-flag t) nil [60 79])
            ("unistd.h" include (:system-flag t) nil [80 99])
            ("fcntl.h" include (:system-flag t) nil [100 118])
            ("sys/types.h" include (:system-flag t) nil [119 141])
            ("sys/stat.h" include (:system-flag t) nil [142 163])
            ("time.h" include (:system-flag t) nil [164 181])
            ("errno.h" include (:system-flag t) nil [182 200])
            ("algorithm" include (:system-flag t) nil [201 221])
            ("assert.h" include (:system-flag t) nil [222 241])
            ("game.h" include nil nil [243 260])
            ("log.h" include nil nil [261 277])
            ("client.h" include nil nil [278 297])
            ("player.h" include nil nil [298 317])
            ("proto.h" include nil nil [318 336])
            ("card.h" include nil nil [337 354])
            ("logic.h" include nil nil [355 373])
            ("log_agent.h" include nil nil [374 396])
            ("wanren.h" include nil nil [397 416])
            ("wanren" variable
               (:typemodifiers ("extern")
                :type ("WanRen" type (:type "class") nil nil))
                nil [418 439])
            ("log" variable
               (:typemodifiers ("extern")
                :type ("Log" type (:type "class") nil nil))
                nil [440 455])
            ("Logic" function
               (:constructor-flag t
                :parent "Logic"
                :type ("Logic" type (:type "class") nil nil))
                nil [457 1029])
            ("Logic" function
               (:destructor-flag t
                :parent "Logic"
                :type "void")
                nil [1031 1178])
            ("init" function
               (:parent "Logic"
                :arguments 
                  ( ("my_type" variable (:type "int") (reparse-symbol arg-sub-list) [1196 1208])
                    ("my_fee" variable (:type "float") (reparse-symbol arg-sub-list) [1209 1222])
                    ("my_min_money" variable (:type "int") (reparse-symbol arg-sub-list) [1223 1240])
                    ("my_max_money" variable (:type "int") (reparse-symbol arg-sub-list) [1241 1258])
                    ("my_base_money" variable (:type "int") (reparse-symbol arg-sub-list) [1259 1277])
                    ("my_max_bet" variable (:type "int") (reparse-symbol arg-sub-list) [1280 1295])
                    ("my_banker_min_money" variable (:type "int") (reparse-symbol arg-sub-list) [1296 1320])
                    ("my_banker_down_money" variable (:type "int") (reparse-symbol arg-sub-list) [1321 1346])
                    ("my_banker_round" variable (:type "int") (reparse-symbol arg-sub-list) [1347 1367])
                    ("my_fanbei" variable (:type "int") (reparse-symbol arg-sub-list) [1370 1384])
                    ("my_type_id_begin" variable (:type "int") (reparse-symbol arg-sub-list) [1385 1406])
                    ("my_type_id_end" variable (:type "int") (reparse-symbol arg-sub-list) [1407 1426])
                    ("my_laba_win" variable (:type "int") (reparse-symbol arg-sub-list) [1427 1443])
                    ("my_laba_lose" variable (:type "int") (reparse-symbol arg-sub-list) [1444 1461]))                  
                :type "int")
                nil [1180 2416])
            ("broadcast" function
               (:parent "Logic"
                :arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2439 2449])
                    ("jpacket" variable
                       (:reference 1
                        :type ("Jpacket" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2450 2467]))                  
                :type "int")
                nil [2418 3133])
            ("broadcast" function
               (:parent "Logic"
                :arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3156 3166])
                    ("packet" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3167 3193]))                  
                :type "int")
                nil [3135 3446])
            ("unicast" function
               (:parent "Logic"
                :arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3467 3477])
                    ("packet" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3478 3504]))                  
                :type "int")
                nil [3448 3576])
            ("random" function
               (:parent "Logic"
                :arguments 
                  ( ("start" variable (:type "int") (reparse-symbol arg-sub-list) [3596 3606])
                    ("end" variable (:type "int") (reparse-symbol arg-sub-list) [3607 3615]))                  
                :type "int")
                nil [3578 3696])
            ("random" function
               (:parent "Logic"
                :arguments 
                  ( ("start" variable (:type "int") (reparse-symbol arg-sub-list) [3716 3726])
                    ("end" variable (:type "int") (reparse-symbol arg-sub-list) [3727 3735])
                    ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [3736 3745]))                  
                :type "int")
                nil [3698 3831])
            ("set_sys_mode" function
               (:parent "Logic"
                :arguments 
                  ( ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [3858 3867]))                  
                :type "void")
                nil [3833 3889])
            ("reset" function
               (:parent "Logic"
                :type "void")
                nil [3891 4608])
            ("vector_to_json_array" function
               (:parent "Logic"
                :arguments 
                  ( ("cards" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4643 4668])
                    ("packet" variable
                       (:reference 1
                        :type ("Jpacket" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4669 4685])
                    ("key" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4688 4699]))                  
                :type "void")
                nil [4610 4860])
            ("vector_to_json_array_three" function
               (:parent "Logic"
                :arguments 
                  ( ("cards" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4901 4926])
                    ("packet" variable
                       (:reference 1
                        :type ("Jpacket" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4927 4943])
                    ("key" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4946 4957]))                  
                :type "void")
                nil [4862 5163])
            ("map_to_json_array" function
               (:parent "Logic"
                :arguments 
                  ( ("cards" variable
                       (:reference 1
                        :type ("std::map" type
                             (:template-specifier 
                                ( ("int" type nil nil nil)
                                  ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5195 5222])
                    ("packet" variable
                       (:reference 1
                        :type ("Jpacket" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5223 5239])
                    ("key" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5242 5253]))                  
                :type "void")
                nil [5165 5414])
            ("json_array_to_vector" function
               (:parent "Logic"
                :arguments 
                  ( ("cards" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5449 5474])
                    ("packet" variable
                       (:reference 1
                        :type ("Jpacket" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5475 5491])
                    ("key" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5494 5505]))                  
                :type "void")
                nil [5416 5665])
            ("handler_login" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5692 5707]))                  
                :type "int")
                nil [5667 5968])
            ("del_player" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5992 6007]))                  
                :type "int")
                nil [5970 6213])
            ("handler_login_succ_uc" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6248 6263]))                  
                :type "int")
                nil [6215 6390])
            ("ready_timer_cb" function
               (:parent "Logic"
                :arguments 
                  ( ("loop" variable
                       (:pointer 1
                        :type ("ev_loop" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6419 6440])
                    ("w" variable
                       (:pointer 1
                        :type ("ev_timer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6441 6460])
                    ("revents" variable (:type "int") (reparse-symbol arg-sub-list) [6463 6475]))                  
                :type "void")
                nil [6392 6586])
            ("clear_zombie_players" function
               (:parent "Logic"
                :type "void")
                nil [6588 7216])
            ("get_cards_normal_mode1" function
               (:parent "Logic"
                :type "void")
                nil [7218 11630])
            ("adjust_cards_normal" function
               (:parent "Logic"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11664 11685]))                  
                :type "void")
                nil [11632 12253])
            ("get_cards_normal_mode3" function
               (:parent "Logic"
                :type "void")
                nil [12255 14097])
            ("get_cards_normal_mode2" function
               (:parent "Logic"
                :type "void")
                nil [14099 18347])
            ("get_cards_special" function
               (:parent "Logic"
                :type "void")
                nil [18349 20115])
            ("game_start" function
               (:parent "Logic"
                :type "int")
                nil [20117 21800])
            ("bet_timer_cb" function
               (:parent "Logic"
                :arguments 
                  ( ("loop" variable
                       (:pointer 1
                        :type ("ev_loop" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [21827 21848])
                    ("w" variable
                       (:pointer 1
                        :type ("ev_timer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [21849 21868])
                    ("revents" variable (:type "int") (reparse-symbol arg-sub-list) [21869 21881]))                  
                :type "void")
                nil [21802 22017])
            ("handler_bet" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22042 22057]))                  
                :type "int")
                nil [22019 24614])
            ("handler_info" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24640 24655]))                  
                :type "int")
                nil [24616 24763])
            ("handler_info" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24789 24804])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [24805 24814]))                  
                :type "int")
                nil [24765 25787])
            ("game_end" function
               (:parent "Logic"
                :type "int")
                nil [25789 36161])
            ("win_add" function
               (:parent "Logic"
                :arguments 
                  ( ("ori" variable (:type "int") (reparse-symbol arg-sub-list) [36182 36190])
                    ("left" variable (:type "int") (reparse-symbol arg-sub-list) [36191 36200])
                    ("total_bet" variable (:type "int") (reparse-symbol arg-sub-list) [36201 36215]))                  
                :type "int")
                nil [36163 36628])
            ("lose_add" function
               (:parent "Logic"
                :arguments 
                  ( ("ori" variable (:type "int") (reparse-symbol arg-sub-list) [36650 36658])
                    ("left" variable (:type "int") (reparse-symbol arg-sub-list) [36659 36668])
                    ("total_bet" variable (:type "int") (reparse-symbol arg-sub-list) [36669 36683]))                  
                :type "int")
                nil [36630 37381])
            ("dump_player_info" function
               (:parent "Logic"
                :arguments 
                  ( ("type" variable (:type "int") (reparse-symbol arg-sub-list) [37412 37421])
                    ("uid" variable (:type "int") (reparse-symbol arg-sub-list) [37422 37430])
                    ("player_win" variable (:type "int") (reparse-symbol arg-sub-list) [37431 37446]))                  
                :type "void")
                nil [37383 38122])
            ("handler_player_info" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [38155 38170]))                  
                :type "int")
                nil [38124 38735])
            ("handler_chat" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [38761 38776]))                  
                :type "int")
                nil [38737 39167])
            ("handler_chat_noplayer" function
               (:parent "Logic"
                :arguments 
                  ( ("client" variable
                       (:pointer 1
                        :type ("Client" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [39202 39217]))                  
                :type "int")
                nil [39169 39700])
            ("get_max_list" function
               (:parent "Logic"
                :type "int")
                nil [39702 39819])
            ("handler_up" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [39843 39858]))                  
                :type "int")
                nil [39821 41128])
            ("handler_up_err" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [41156 41171])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [41172 41181]))                  
                :type "int")
                nil [41130 41333])
            ("handler_down" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [41359 41374]))                  
                :type "int")
                nil [41335 41783])
            ("handler_show_up_list" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [41817 41832]))                  
                :type "int")
                nil [41785 42582])
            ("change_banker" function
               (:parent "Logic"
                :type "void")
                nil [42584 43268])
            ("exec_change_banker" function
               (:parent "Logic"
                :arguments 
                  ( ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [43301 43310]))                  
                :type "void")
                nil [43270 44858])
            ("banker_info" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44884 44899]))                  
                :type "void")
                nil [44860 45602])
            ("clear_low_money_blankers" function
               (:parent "Logic"
                :type "void")
                nil [45604 46095])
            ("dump_holes" function
               (:parent "Logic"
                :arguments 
                  ( ("packet" variable
                       (:reference 1
                        :type ("Jpacket" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [46120 46136]))                  
                :type "void")
                nil [46097 46625])
            ("dump_holes_three" function
               (:parent "Logic"
                :arguments 
                  ( ("packet" variable
                       (:reference 1
                        :type ("Jpacket" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [46656 46672]))                  
                :type "void")
                nil [46627 46997])
            ("get_ratio" function
               (:parent "Logic"
                :arguments 
                  ( ("card_type" variable (:type "int") (reparse-symbol arg-sub-list) [47020 47034]))                  
                :type "int")
                nil [46999 47233])
            ("add_player_count" function
               (:parent "Logic"
                :arguments 
                  ( ("index" variable (:type "int") (reparse-symbol arg-sub-list) [47263 47273])
                    ("uid" variable (:type "int") (reparse-symbol arg-sub-list) [47274 47282])
                    ("count" variable (:type "int") (reparse-symbol arg-sub-list) [47283 47293]))                  
                :type "int")
                nil [47235 47578])
            ("get_player_count" function
               (:parent "Logic"
                :arguments 
                  ( ("index" variable (:type "int") (reparse-symbol arg-sub-list) [47608 47618])
                    ("uid" variable (:type "int") (reparse-symbol arg-sub-list) [47619 47627]))                  
                :type "int")
                nil [47580 47815])
            ("dump_info" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [47839 47854]))                  
                :type "void")
                nil [47817 47859])
            ("send_laba_msg" function
               (:parent "Logic"
                :arguments 
                  ( ("player" variable
                       (:pointer 1
                        :type ("Player" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [47887 47902])
                    ("type" variable (:type "int") (reparse-symbol arg-sub-list) [47903 47912])
                    ("money" variable (:type "int") (reparse-symbol arg-sub-list) [47913 47923]))                  
                :type "void")
                nil [47861 49424])
            ("update_timer_cb" function
               (:parent "Logic"
                :arguments 
                  ( ("loop" variable
                       (:pointer 1
                        :type ("ev_loop" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [49454 49475])
                    ("w" variable
                       (:pointer 1
                        :type ("ev_timer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [49476 49495])
                    ("revents" variable (:type "int") (reparse-symbol arg-sub-list) [49496 49508]))                  
                :type "void")
                nil [49426 49616])
            ("update" function
               (:parent "Logic"
                :type "void")
                nil [49618 50440])
            ("update_last_wins" function
               (:parent "Logic"
                :arguments 
                  ( ("a" variable (:type "int") (reparse-symbol arg-sub-list) [50471 50477])
                    ("b" variable (:type "int") (reparse-symbol arg-sub-list) [50478 50484])
                    ("c" variable (:type "int") (reparse-symbol arg-sub-list) [50485 50491])
                    ("d" variable (:type "int") (reparse-symbol arg-sub-list) [50492 50498]))                  
                :type "void")
                nil [50442 50892])
            ("last_wins_to_json_array" function
               (:parent "Logic"
                :arguments 
                  ( ("packet" variable
                       (:reference 1
                        :type ("Jpacket" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50930 50946]))                  
                :type "void")
                nil [50894 51079])
            ("insert_flow_log" function
               (:parent "Logic"
                :arguments 
                  ( ("ts" variable (:type "int") (reparse-symbol arg-sub-list) [51345 51352])
                    ("uid" variable (:type "int") (reparse-symbol arg-sub-list) [51353 51361])
                    ("ip" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51362 51372])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [51373 51381])
                    ("vid" variable (:type "int") (reparse-symbol arg-sub-list) [51382 51390])
                    ("zid" variable (:type "int") (reparse-symbol arg-sub-list) [51391 51399])
                    ("tid" variable (:type "int") (reparse-symbol arg-sub-list) [51400 51408])
                    ("type" variable (:type "int") (reparse-symbol arg-sub-list) [51409 51418])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [51419 51428])
                    ("num" variable (:type "int") (reparse-symbol arg-sub-list) [51429 51437])
                    ("anum" variable (:type "int") (reparse-symbol arg-sub-list) [51438 51447]))                  
                :type "int")
                nil [51318 51950])
            ("set_banker_flag" function
               (:parent "Logic"
                :arguments 
                  ( ("uid" variable (:type "int") (reparse-symbol arg-sub-list) [51979 51987]))                  
                :type "void")
                nil [51951 52138])
            ("set_up_list_flag" function
               (:parent "Logic"
                :arguments 
                  ( ("uid" variable (:type "int") (reparse-symbol arg-sub-list) [52169 52177])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [52178 52187]))                  
                :type "void")
                nil [52140 52642]))          
      :file "logic.cc"
      :pointmax 52643
      :fsize 53186
      :lastmodtime '(22242 28013 0 0)
      :unmatched-syntax nil))
  :file "!usr!local!app!wanrenold!src!wanrennn!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
