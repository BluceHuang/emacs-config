;; Object src/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "src/"
  :tables
  (list
    (semanticdb-table "db.c"
      :major-mode 'c-mode
      :tags 
        '( ("redis.h" include nil nil [1612 1630])
            ("signal.h" include (:system-flag t) nil [1632 1651])
            ("ctype.h" include (:system-flag t) nil [1652 1670])
            ("SlotToKeyAdd" function
               (:prototype-flag t
                :arguments 
                  ( ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1690 1700]))                  
                :type "void")
                nil [1672 1701])
            ("SlotToKeyDel" function
               (:prototype-flag t
                :arguments 
                  ( ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1720 1730]))                  
                :type "void")
                nil [1702 1731])
            ("lookupKey" function
               (:pointer 1
                :arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1929 1941])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1942 1952]))                  
                :type ("robj" type (:type "class") nil nil))
                nil [1913 2396])
            ("lookupKeyRead" function
               (:pointer 1
                :arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2418 2430])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2431 2441]))                  
                :type ("robj" type (:type "class") nil nil))
                nil [2398 2640])
            ("lookupKeyWrite" function
               (:pointer 1
                :arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2663 2675])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2676 2686]))                  
                :type ("robj" type (:type "class") nil nil))
                nil [2642 2748])
            ("lookupKeyReadOrReply" function
               (:pointer 1
                :arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2777 2792])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2793 2803])
                    ("reply" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2804 2816]))                  
                :type ("robj" type (:type "class") nil nil))
                nil [2750 2906])
            ("lookupKeyWriteOrReply" function
               (:pointer 1
                :arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2936 2951])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2952 2962])
                    ("reply" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2963 2975]))                  
                :type ("robj" type (:type "class") nil nil))
                nil [2908 3066])
            ("dbAdd" function
               (:arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3248 3260])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3261 3271])
                    ("val" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3272 3282]))                  
                :type "void")
                nil [3237 3422])
            ("dbOverwrite" function
               (:arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3700 3712])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3713 3723])
                    ("val" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3724 3734]))                  
                :type "void")
                nil [3683 3887])
            ("setKey" function
               (:arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4223 4235])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4236 4246])
                    ("val" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4247 4257]))                  
                :type "void")
                nil [4211 4462])
            ("dbExists" function
               (:arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4477 4489])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4490 4500]))                  
                :type "int")
                nil [4464 4552])
            ("dbRandomKey" function
               (:pointer 1
                :arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4735 4747]))                  
                :type ("robj" type (:type "class") nil nil))
                nil [4717 5243])
            ("dbDelete" function
               (:arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5337 5349])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5350 5360]))                  
                :type "int")
                nil [5324 5678])
            ("emptyDb" function (:type "long long") nil [5680 5936])
            ("selectDb" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5951 5966])
                    ("id" variable (:type "int") (reparse-symbol arg-sub-list) [5967 5974]))                  
                :type "int")
                nil [5938 6091])
            ("signalModifiedKey" function
               (:arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6481 6493])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6494 6504]))                  
                :type "void")
                nil [6458 6537])
            ("signalFlushedDb" function
               (:arguments 
                  ( ("dbid" variable (:type "int") (reparse-symbol arg-sub-list) [6560 6569]))                  
                :type "void")
                nil [6539 6608])
            ("flushdbCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6845 6860]))                  
                :type "void")
                nil [6825 7025])
            ("flushallCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7048 7063]))                  
                :type "void")
                nil [7027 7620])
            ("delCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7638 7653]))                  
                :type "void")
                nil [7622 7909])
            ("existsCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7930 7945]))                  
                :type "void")
                nil [7911 8113])
            ("selectCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8134 8149]))                  
                :type "void")
                nil [8115 8412])
            ("randomkeyCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8436 8451]))                  
                :type "void")
                nil [8414 8625])
            ("keysCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8644 8659]))                  
                :type "void")
                nil [8627 9458])
            ("dbsizeCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9479 9494]))                  
                :type "void")
                nil [9460 9545])
            ("lastsaveCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9568 9583]))                  
                :type "void")
                nil [9547 9628])
            ("typeCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9647 9662]))                  
                :type "void")
                nil [9630 10143])
            ("shutdownCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10166 10181]))                  
                :type "void")
                nil [10145 10724])
            ("renameGenericCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10752 10767])
                    ("nx" variable (:type "int") (reparse-symbol arg-sub-list) [10768 10775]))                  
                :type "void")
                nil [10726 11727])
            ("renameCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11748 11763]))                  
                :type "void")
                nil [11729 11798])
            ("renamenxCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11821 11836]))                  
                :type "void")
                nil [11800 11871])
            ("moveCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11890 11905]))                  
                :type "void")
                nil [11873 12965])
            ("removeExpire" function
               (:arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13161 13173])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13174 13184]))                  
                :type "int")
                nil [13144 13454])
            ("setExpire" function
               (:arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13471 13483])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13484 13494])
                    ("when" variable (:type "long long") (reparse-symbol arg-sub-list) [13495 13510]))                  
                :type "void")
                nil [13456 13780])
            ("getExpire" function
               (:arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13934 13946])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13947 13957]))                  
                :type "long long")
                nil [13914 14356])
            ("propagateExpire" function
               (:arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14788 14800])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14801 14811]))                  
                :type "void")
                nil [14767 15189])
            ("expireIfNeeded" function
               (:arguments 
                  ( ("db" variable
                       (:pointer 1
                        :type ("redisDb" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15210 15222])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15223 15233]))                  
                :type "int")
                nil [15191 16103])
            ("expireGenericCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16782 16797])
                    ("basetime" variable (:type "long long") (reparse-symbol arg-sub-list) [16798 16817])
                    ("unit" variable (:type "int") (reparse-symbol arg-sub-list) [16818 16827]))                  
                :type "void")
                nil [16756 18188])
            ("expireCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18209 18224]))                  
                :type "void")
                nil [18190 18279])
            ("expireatCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18302 18317]))                  
                :type "void")
                nil [18281 18365])
            ("pexpireCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18387 18402]))                  
                :type "void")
                nil [18367 18462])
            ("pexpireatCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18486 18501]))                  
                :type "void")
                nil [18464 18554])
            ("ttlGenericCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18579 18594])
                    ("output_ms" variable (:type "int") (reparse-symbol arg-sub-list) [18595 18609]))                  
                :type "void")
                nil [18556 18916])
            ("ttlCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18934 18949]))                  
                :type "void")
                nil [18918 18982])
            ("pttlCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19001 19016]))                  
                :type "void")
                nil [18984 19049])
            ("persistCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19071 19086]))                  
                :type "void")
                nil [19051 19409])
            ("getKeysUsingCommandTable" function
               (:pointer 1
                :arguments 
                  ( ("cmd" variable
                       (:pointer 1
                        :type ("redisCommand" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [19646 19671])
                    ("argv" variable
                       (:pointer 2
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19671 19683])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [19684 19693])
                    ("numkeys" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [19694 19707]))                  
                :type "int")
                nil [19616 20123])
            ("getKeysFromCommand" function
               (:pointer 1
                :arguments 
                  ( ("cmd" variable
                       (:pointer 1
                        :type ("redisCommand" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [20149 20174])
                    ("argv" variable
                       (:pointer 2
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20174 20186])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [20187 20196])
                    ("numkeys" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [20197 20210])
                    ("flags" variable (:type "int") (reparse-symbol arg-sub-list) [20211 20221]))                  
                :type "int")
                nil [20125 20400])
            ("getKeysFreeResult" function
               (:arguments 
                  ( ("result" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [20425 20437]))                  
                :type "void")
                nil [20402 20460])
            ("noPreloadGetKeys" function
               (:pointer 1
                :arguments 
                  ( ("cmd" variable
                       (:pointer 1
                        :type ("redisCommand" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [20484 20509])
                    ("argv" variable
                       (:pointer 2
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20509 20521])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [20522 20531])
                    ("numkeys" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [20532 20545])
                    ("flags" variable (:type "int") (reparse-symbol arg-sub-list) [20546 20556]))                  
                :type "int")
                nil [20462 20727])
            ("renameGetKeys" function
               (:pointer 1
                :arguments 
                  ( ("cmd" variable
                       (:pointer 1
                        :type ("redisCommand" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [20748 20773])
                    ("argv" variable
                       (:pointer 2
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20773 20785])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [20786 20795])
                    ("numkeys" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [20796 20809])
                    ("flags" variable (:type "int") (reparse-symbol arg-sub-list) [20810 20820]))                  
                :type "int")
                nil [20729 21054])
            ("zunionInterGetKeys" function
               (:pointer 1
                :arguments 
                  ( ("cmd" variable
                       (:pointer 1
                        :type ("redisCommand" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [21080 21105])
                    ("argv" variable
                       (:pointer 2
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21105 21117])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [21118 21127])
                    ("numkeys" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [21128 21141])
                    ("flags" variable (:type "int") (reparse-symbol arg-sub-list) [21142 21152]))                  
                :type "int")
                nil [21056 21558]))          
      :file "db.c"
      :pointmax 21559
      :fsize 21558
      :lastmodtime '(20863 50188 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "config.c"
      :major-mode 'c-mode
      :tags 
        '( ("redis.h" include nil nil [1687 1705])
            ("yesnotoi" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [1905 1913]))                  
                :type "int")
                nil [1892 2021])
            ("appendServerSaveParams" function
               (:arguments 
                  ( ("seconds" variable (:type ("time_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2051 2066])
                    ("changes" variable (:type "int") (reparse-symbol arg-sub-list) [2067 2079]))                  
                :type "void")
                nil [2023 2340])
            ("resetServerSaveParams" function (:type "void") nil [2342 2464])
            ("loadServerConfigFromString" function
               (:arguments 
                  ( ("config" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [2498 2511]))                  
                :type "void")
                nil [2466 20140])
            ("loadServerConfig" function
               (:arguments 
                  ( ("filename" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [20531 20546])
                    ("options" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [20547 20561]))                  
                :type "void")
                nil [20509 21369])
            ("configSetCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21598 21613]))                  
                :type "void")
                nil [21576 33972])
            ("config_get_string_field" variable (:constant-flag t) nil [33982 34005])
            ("config_get_bool_field" variable (:constant-flag t) nil [34208 34229])
            ("config_get_numerical_field" variable (:constant-flag t) nil [34435 34461])
            ("configGetCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [34708 34723]))                  
                :type "void")
                nil [34686 42304])
            ("configCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [42325 42340]))                  
                :type "void")
                nil [42306 43293]))          
      :file "config.c"
      :pointmax 43294
      :fsize 43293
      :lastmodtime '(20863 50188 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("config_get_numerical_field" (spp-arg-list ("_name" "_var") 34461 . 34473) . 
              ((DO "do" 34474 . 34476) (semantic-list "{ \\
    if (stringmatch(pattern,_name,0)) { \\
        ll2string(buf,sizeof(buf),_var); \\
        addReplyBulkCString(c,_name); \\
        addReplyBulkCString(c,buf); \\
        matches++; \\
    } \\
}" 34477 . 34674) (WHILE "while" 34675 . 34680) (semantic-list "(0)" 34680 . 34683) (punctuation ";" 34683 . 34684)))
          ("config_get_string_field" (spp-arg-list ("_name" "_var") 34005 . 34017) . 
              ((DO "do" 34018 . 34020) (semantic-list "{ \\
    if (stringmatch(pattern,_name,0)) { \\
        addReplyBulkCString(c,_name); \\
        addReplyBulkCString(c,_var ? _var : \"\"); \\
        matches++; \\
    } \\
}" 34021 . 34188) (WHILE "while" 34189 . 34194) (semantic-list "(0)" 34194 . 34197) (punctuation ";" 34197 . 34198)))
          ("config_get_bool_field" (spp-arg-list ("_name" "_var") 34229 . 34241) . 
              ((DO "do" 34242 . 34244) (semantic-list "{ \\
    if (stringmatch(pattern,_name,0)) { \\
        addReplyBulkCString(c,_name); \\
        addReplyBulkCString(c,_var ? \"yes\" : \"no\"); \\
        matches++; \\
    } \\
}" 34245 . 34415) (WHILE "while" 34416 . 34421) (semantic-list "(0)" 34421 . 34424) (punctuation ";" 34424 . 34425)))
          )
)
    (semanticdb-table "redis.h"
      :major-mode 'c-mode
      :tags 
        '( ("__REDIS_H" variable (:constant-flag t) nil [1638 1647])
            ("fmacros.h" include nil nil [1649 1669])
            ("config.h" include nil nil [1670 1689])
            ("stdio.h" include (:system-flag t) nil [1744 1762])
            ("stdlib.h" include (:system-flag t) nil [1763 1782])
            ("string.h" include (:system-flag t) nil [1783 1802])
            ("time.h" include (:system-flag t) nil [1803 1820])
            ("limits.h" include (:system-flag t) nil [1821 1840])
            ("unistd.h" include (:system-flag t) nil [1841 1860])
            ("errno.h" include (:system-flag t) nil [1861 1879])
            ("inttypes.h" include (:system-flag t) nil [1880 1901])
            ("pthread.h" include (:system-flag t) nil [1902 1922])
            ("syslog.h" include (:system-flag t) nil [1923 1942])
            ("netinet/in.h" include (:system-flag t) nil [1943 1966])
            ("lua.h" include (:system-flag t) nil [1967 1983])
            ("signal.h" include (:system-flag t) nil [1984 2003])
            ("ae.h" include nil nil [2005 2020])
            ("sds.h" include nil nil [2065 2081])
            ("dict.h" include nil nil [2113 2130])
            ("adlist.h" include nil nil [2152 2171])
            ("zmalloc.h" include nil nil [2192 2212])
            ("anet.h" include nil nil [2267 2284])
            ("ziplist.h" include nil nil [2318 2338])
            ("intset.h" include nil nil [2373 2392])
            ("version.h" include nil nil [2430 2450])
            ("util.h" include nil nil [2471 2488])
            ("REDIS_OK" variable (:constant-flag t) nil [2562 2570])
            ("REDIS_ERR" variable (:constant-flag t) nil [2596 2605])
            ("REDIS_DEFAULT_HZ" variable (:constant-flag t) nil [2666 2682])
            ("REDIS_MIN_HZ" variable (:constant-flag t) nil [2738 2750])
            ("REDIS_MAX_HZ" variable (:constant-flag t) nil [2772 2784])
            ("REDIS_SERVERPORT" variable (:constant-flag t) nil [2809 2825])
            ("REDIS_MAXIDLETIME" variable (:constant-flag t) nil [2864 2881])
            ("REDIS_DEFAULT_DBNUM" variable (:constant-flag t) nil [2943 2962])
            ("REDIS_CONFIGLINE_MAX" variable (:constant-flag t) nil [2978 2998])
            ("REDIS_EXPIRELOOKUPS_PER_CRON" variable (:constant-flag t) nil [3015 3043])
            ("REDIS_EXPIRELOOKUPS_TIME_PERC" variable (:constant-flag t) nil [3091 3120])
            ("REDIS_DBCRON_DBS_PER_CALL" variable (:constant-flag t) nil [3170 3195])
            ("REDIS_MAX_WRITE_PER_EVENT" variable (:constant-flag t) nil [3207 3232])
            ("REDIS_SHARED_SELECT_CMDS" variable (:constant-flag t) nil [3251 3275])
            ("REDIS_SHARED_INTEGERS" variable (:constant-flag t) nil [3287 3308])
            ("REDIS_SHARED_BULKHDR_LEN" variable (:constant-flag t) nil [3323 3347])
            ("REDIS_MAX_LOGMSG_LEN" variable (:constant-flag t) nil [3359 3379])
            ("REDIS_AOF_REWRITE_PERC" variable (:constant-flag t) nil [3444 3466])
            ("REDIS_AOF_REWRITE_MIN_SIZE" variable (:constant-flag t) nil [3480 3506])
            ("REDIS_AOF_REWRITE_ITEMS_PER_CMD" variable (:constant-flag t) nil [3527 3558])
            ("REDIS_SLOWLOG_LOG_SLOWER_THAN" variable (:constant-flag t) nil [3570 3599])
            ("REDIS_SLOWLOG_MAX_LEN" variable (:constant-flag t) nil [3614 3635])
            ("REDIS_MAX_CLIENTS" variable (:constant-flag t) nil [3648 3665])
            ("REDIS_AUTHPASS_MAX_LEN" variable (:constant-flag t) nil [3680 3702])
            ("REDIS_DEFAULT_SLAVE_PRIORITY" variable (:constant-flag t) nil [3715 3743])
            ("REDIS_REPL_TIMEOUT" variable (:constant-flag t) nil [3756 3774])
            ("REDIS_REPL_PING_SLAVE_PERIOD" variable (:constant-flag t) nil [3786 3814])
            ("REDIS_RUN_ID_SIZE" variable (:constant-flag t) nil [3826 3843])
            ("REDIS_OPS_SEC_SAMPLES" variable (:constant-flag t) nil [3855 3876])
            ("REDIS_BGSAVE_RETRY_DELAY" variable (:constant-flag t) nil [3888 3912])
            ("REDIS_MAX_QUERYBUF_LEN" variable (:constant-flag t) nil [4006 4028])
            ("REDIS_IOBUF_LEN" variable (:constant-flag t) nil [4083 4098])
            ("REDIS_REPLY_CHUNK_BYTES" variable (:constant-flag t) nil [4156 4179])
            ("REDIS_INLINE_MAX_SIZE" variable (:constant-flag t) nil [4222 4243])
            ("REDIS_MBULK_BIG_ARG" variable (:constant-flag t) nil [4295 4314])
            ("REDIS_AOF_AUTOSYNC_BYTES" variable (:constant-flag t) nil [4337 4361])
            ("REDIS_HT_MINFILL" variable (:constant-flag t) nil [4441 4457])
            ("REDIS_CMD_WRITE" variable (:constant-flag t) nil [4653 4668])
            ("REDIS_CMD_READONLY" variable (:constant-flag t) nil [4712 4730])
            ("REDIS_CMD_DENYOOM" variable (:constant-flag t) nil [4771 4788])
            ("REDIS_CMD_FORCE_REPLICATION" variable (:constant-flag t) nil [4830 4857])
            ("REDIS_CMD_ADMIN" variable (:constant-flag t) nil [4889 4904])
            ("REDIS_CMD_PUBSUB" variable (:constant-flag t) nil [4948 4964])
            ("REDIS_CMD_NOSCRIPT" variable (:constant-flag t) nil [5007 5025])
            ("REDIS_CMD_RANDOM" variable (:constant-flag t) nil [5066 5082])
            ("REDIS_CMD_SORT_FOR_SCRIPT" variable (:constant-flag t) nil [5125 5150])
            ("REDIS_CMD_LOADING" variable (:constant-flag t) nil [5184 5201])
            ("REDIS_CMD_STALE" variable (:constant-flag t) nil [5243 5258])
            ("REDIS_CMD_SKIP_MONITOR" variable (:constant-flag t) nil [5302 5324])
            ("REDIS_STRING" variable (:constant-flag t) nil [5381 5393])
            ("REDIS_LIST" variable (:constant-flag t) nil [5404 5414])
            ("REDIS_SET" variable (:constant-flag t) nil [5425 5434])
            ("REDIS_ZSET" variable (:constant-flag t) nil [5445 5455])
            ("REDIS_HASH" variable (:constant-flag t) nil [5466 5476])
            ("REDIS_ENCODING_RAW" variable (:constant-flag t) nil [5692 5710])
            ("REDIS_ENCODING_INT" variable (:constant-flag t) nil [5750 5768])
            ("REDIS_ENCODING_HT" variable (:constant-flag t) nil [5808 5825])
            ("REDIS_ENCODING_ZIPMAP" variable (:constant-flag t) nil [5869 5890])
            ("REDIS_ENCODING_LINKEDLIST" variable (:constant-flag t) nil [5926 5951])
            ("REDIS_ENCODING_ZIPLIST" variable (:constant-flag t) nil [5999 6021])
            ("REDIS_ENCODING_INTSET" variable (:constant-flag t) nil [6057 6078])
            ("REDIS_ENCODING_SKIPLIST" variable (:constant-flag t) nil [6114 6137])
            ("REDIS_RDB_6BITLEN" variable (:constant-flag t) nil [6897 6914])
            ("REDIS_RDB_14BITLEN" variable (:constant-flag t) nil [6925 6943])
            ("REDIS_RDB_32BITLEN" variable (:constant-flag t) nil [6954 6972])
            ("REDIS_RDB_ENCVAL" variable (:constant-flag t) nil [6983 6999])
            ("REDIS_RDB_LENERR" variable (:constant-flag t) nil [7010 7026])
            ("REDIS_RDB_ENC_INT8" variable (:constant-flag t) nil [7236 7254])
            ("REDIS_RDB_ENC_INT16" variable (:constant-flag t) nil [7299 7318])
            ("REDIS_RDB_ENC_INT32" variable (:constant-flag t) nil [7363 7382])
            ("REDIS_RDB_ENC_LZF" variable (:constant-flag t) nil [7427 7444])
            ("REDIS_AOF_OFF" variable (:constant-flag t) nil [7517 7530])
            ("REDIS_AOF_ON" variable (:constant-flag t) nil [7570 7582])
            ("REDIS_AOF_WAIT_REWRITE" variable (:constant-flag t) nil [7622 7644])
            ("REDIS_SLAVE" variable (:constant-flag t) nil [7721 7732])
            ("REDIS_MASTER" variable (:constant-flag t) nil [7786 7798])
            ("REDIS_MONITOR" variable (:constant-flag t) nil [7852 7865])
            ("REDIS_MULTI" variable (:constant-flag t) nil [7931 7942])
            ("REDIS_BLOCKED" variable (:constant-flag t) nil [8000 8013])
            ("REDIS_DIRTY_CAS" variable (:constant-flag t) nil [8081 8096])
            ("REDIS_CLOSE_AFTER_REPLY" variable (:constant-flag t) nil [8157 8180])
            ("REDIS_UNBLOCKED" variable (:constant-flag t) nil [8236 8251])
            ("REDIS_LUA_CLIENT" variable (:constant-flag t) nil [8375 8391])
            ("REDIS_ASKING" variable (:constant-flag t) nil [8456 8468])
            ("REDIS_CLOSE_ASAP" variable (:constant-flag t) nil [8527 8543])
            ("REDIS_UNIX_SOCKET" variable (:constant-flag t) nil [8588 8605])
            ("REDIS_DIRTY_EXEC" variable (:constant-flag t) nil [8668 8684])
            ("REDIS_REQ_INLINE" variable (:constant-flag t) nil [8777 8793])
            ("REDIS_REQ_MULTIBULK" variable (:constant-flag t) nil [8804 8823])
            ("REDIS_CLIENT_LIMIT_CLASS_NORMAL" variable (:constant-flag t) nil [8953 8984])
            ("REDIS_CLIENT_LIMIT_CLASS_SLAVE" variable (:constant-flag t) nil [8995 9025])
            ("REDIS_CLIENT_LIMIT_CLASS_PUBSUB" variable (:constant-flag t) nil [9036 9067])
            ("REDIS_CLIENT_LIMIT_NUM_CLASSES" variable (:constant-flag t) nil [9078 9108])
            ("REDIS_REPL_NONE" variable (:constant-flag t) nil [9163 9178])
            ("REDIS_REPL_CONNECT" variable (:constant-flag t) nil [9217 9235])
            ("REDIS_REPL_CONNECTING" variable (:constant-flag t) nil [9275 9296])
            ("REDIS_REPL_RECEIVE_PONG" variable (:constant-flag t) nil [9334 9357])
            ("REDIS_REPL_TRANSFER" variable (:constant-flag t) nil [9394 9413])
            ("REDIS_REPL_CONNECTED" variable (:constant-flag t) nil [9457 9477])
            ("REDIS_REPL_SYNCIO_TIMEOUT" variable (:constant-flag t) nil [9559 9584])
            ("REDIS_REPL_WAIT_BGSAVE_START" variable (:constant-flag t) nil [9885 9913])
            ("REDIS_REPL_WAIT_BGSAVE_END" variable (:constant-flag t) nil [9970 9996])
            ("REDIS_REPL_SEND_BULK" variable (:constant-flag t) nil [10063 10083])
            ("REDIS_REPL_ONLINE" variable (:constant-flag t) nil [10130 10147])
            ("REDIS_HEAD" variable (:constant-flag t) nil [10235 10245])
            ("REDIS_TAIL" variable (:constant-flag t) nil [10256 10266])
            ("REDIS_SORT_GET" variable (:constant-flag t) nil [10300 10314])
            ("REDIS_SORT_ASC" variable (:constant-flag t) nil [10325 10339])
            ("REDIS_SORT_DESC" variable (:constant-flag t) nil [10350 10365])
            ("REDIS_SORTKEY_MAX" variable (:constant-flag t) nil [10376 10393])
            ("REDIS_DEBUG" variable (:constant-flag t) nil [10425 10436])
            ("REDIS_VERBOSE" variable (:constant-flag t) nil [10447 10460])
            ("REDIS_NOTICE" variable (:constant-flag t) nil [10471 10483])
            ("REDIS_WARNING" variable (:constant-flag t) nil [10494 10507])
            ("REDIS_LOG_RAW" variable (:constant-flag t) nil [10518 10531])
            ("REDIS_NOTUSED" variable (:constant-flag t) nil [10617 10630])
            ("ZSKIPLIST_MAXLEVEL" variable (:constant-flag t) nil [10654 10672])
            ("ZSKIPLIST_P" variable (:constant-flag t) nil [10725 10736])
            ("AOF_FSYNC_NO" variable (:constant-flag t) nil [10805 10817])
            ("AOF_FSYNC_ALWAYS" variable (:constant-flag t) nil [10828 10844])
            ("AOF_FSYNC_EVERYSEC" variable (:constant-flag t) nil [10855 10873])
            ("REDIS_HASH_MAX_ZIPLIST_ENTRIES" variable (:constant-flag t) nil [10922 10952])
            ("REDIS_HASH_MAX_ZIPLIST_VALUE" variable (:constant-flag t) nil [10965 10993])
            ("REDIS_LIST_MAX_ZIPLIST_ENTRIES" variable (:constant-flag t) nil [11005 11035])
            ("REDIS_LIST_MAX_ZIPLIST_VALUE" variable (:constant-flag t) nil [11048 11076])
            ("REDIS_SET_MAX_INTSET_ENTRIES" variable (:constant-flag t) nil [11088 11116])
            ("REDIS_ZSET_MAX_ZIPLIST_ENTRIES" variable (:constant-flag t) nil [11129 11159])
            ("REDIS_ZSET_MAX_ZIPLIST_VALUE" variable (:constant-flag t) nil [11172 11200])
            ("REDIS_OP_UNION" variable (:constant-flag t) nil [11241 11255])
            ("REDIS_OP_DIFF" variable (:constant-flag t) nil [11266 11279])
            ("REDIS_OP_INTER" variable (:constant-flag t) nil [11290 11304])
            ("REDIS_MAXMEMORY_VOLATILE_LRU" variable (:constant-flag t) nil [11349 11377])
            ("REDIS_MAXMEMORY_VOLATILE_TTL" variable (:constant-flag t) nil [11388 11416])
            ("REDIS_MAXMEMORY_VOLATILE_RANDOM" variable (:constant-flag t) nil [11427 11458])
            ("REDIS_MAXMEMORY_ALLKEYS_LRU" variable (:constant-flag t) nil [11469 11496])
            ("REDIS_MAXMEMORY_ALLKEYS_RANDOM" variable (:constant-flag t) nil [11507 11537])
            ("REDIS_MAXMEMORY_NO_EVICTION" variable (:constant-flag t) nil [11548 11575])
            ("REDIS_LUA_TIME_LIMIT" variable (:constant-flag t) nil [11603 11623])
            ("UNIT_SECONDS" variable (:constant-flag t) nil [11669 11681])
            ("UNIT_MILLISECONDS" variable (:constant-flag t) nil [11692 11709])
            ("REDIS_SHUTDOWN_SAVE" variable (:constant-flag t) nil [11742 11761])
            ("REDIS_SHUTDOWN_NOSAVE" variable (:constant-flag t) nil [11885 11906])
            ("REDIS_CALL_NONE" variable (:constant-flag t) nil [11998 12013])
            ("REDIS_CALL_SLOWLOG" variable (:constant-flag t) nil [12024 12042])
            ("REDIS_CALL_STATS" variable (:constant-flag t) nil [12053 12069])
            ("REDIS_CALL_PROPAGATE" variable (:constant-flag t) nil [12080 12100])
            ("REDIS_CALL_FULL" variable (:constant-flag t) nil [12111 12126])
            ("REDIS_PROPAGATE_NONE" variable (:constant-flag t) nil [12257 12277])
            ("REDIS_PROPAGATE_AOF" variable (:constant-flag t) nil [12288 12307])
            ("REDIS_PROPAGATE_REPL" variable (:constant-flag t) nil [12318 12338])
            ("run_with_period" variable (:constant-flag t) nil [12523 12538])
            ("redisAssertWithInfo" variable (:constant-flag t) nil [12703 12722])
            ("redisAssert" variable (:constant-flag t) nil [12819 12830])
            ("redisPanic" variable (:constant-flag t) nil [12907 12917])
            ("REDIS_LRU_CLOCK_MAX" variable (:constant-flag t) nil [13254 13273])
            ("REDIS_LRU_CLOCK_RESOLUTION" variable (:constant-flag t) nil [13322 13348])
            ("type" variable
               (:suffix ":4"
                :type "unsigned int")
                nil [13423 13439])
            ("notused" variable
               (:suffix ":2"
                :type "unsigned int")
                nil [13444 13463])
            ("encoding" variable
               (:suffix ":4"
                :type "unsigned int")
                nil [13487 13507])
            ("lru" variable
               (:suffix ":22"
                :type "unsigned int")
                nil [13512 13528])
            ("refcount" variable (:type "int") nil [13585 13598])
            ("ptr" variable
               (:pointer 1
                :type "void")
                nil [13603 13613])
            ("robj" variable (:type "int") nil [13616 13621])
            ("initStaticStringObject" variable (:constant-flag t) nil [13889 13911])
            ("dict" variable
               (:pointer 1
                :type ("dict" type (:type "class") nil nil))
                nil [14094 14105])
            ("expires" variable
               (:pointer 1
                :type ("dict" type (:type "class") nil nil))
                nil [14157 14171])
            ("blocking_keys" variable
               (:pointer 1
                :type ("dict" type (:type "class") nil nil))
                nil [14230 14250])
            ("ready_keys" variable
               (:pointer 1
                :type ("dict" type (:type "class") nil nil))
                nil [14311 14328])
            ("watched_keys" variable
               (:pointer 1
                :type ("dict" type (:type "class") nil nil))
                nil [14383 14402])
            ("id" variable (:type "int") nil [14453 14460])
            ("redisDb" variable (:type "int") nil [14463 14471])
            ("argv" variable
               (:pointer 2
                :type ("robj" type (:type "class") nil nil))
                nil [14533 14545])
            ("argc" variable (:type "int") nil [14550 14559])
            ("cmd" variable
               (:pointer 1
                :type ("redisCommand" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [14564 14589])
            ("multiCmd" variable (:type "int") nil [14592 14601])
            ("commands" variable
               (:pointer 1
                :type ("multiCmd" type (:type "class") nil nil))
                nil [14635 14654])
            ("count" variable (:type "int") nil [14693 14703])
            ("multiState" variable (:type "int") nil [14756 14767])
            ("keys" variable
               (:pointer 1
                :type ("dict" type (:type "class") nil nil))
                nil [14804 14815])
            ("timeout" variable (:type ("time_t" type (:type "class") nil nil)) nil [14958 14973])
            ("target" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [15116 15129])
            ("blockingState" variable (:type "int") nil [15236 15250])
            ("db" variable
               (:pointer 1
                :type ("redisDb" type (:type "class") nil nil))
                nil [15949 15961])
            ("key" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [15966 15976])
            ("readyList" variable (:type "int") nil [15979 15989])
            ("fd" variable (:type "int") nil [16120 16127])
            ("db" variable
               (:pointer 1
                :type ("redisDb" type (:type "class") nil nil))
                nil [16132 16144])
            ("dictid" variable (:type "int") nil [16149 16160])
            ("name" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [16165 16176])
            ("querybuf" variable (:type ("sds" type (:type "class") nil nil)) nil [16224 16237])
            ("querybuf_peak" variable (:type ("size_t" type (:type "class") nil nil)) nil [16242 16263])
            ("argc" variable (:type "int") nil [16321 16330])
            ("argv" variable
               (:pointer 2
                :type ("robj" type (:type "class") nil nil))
                nil [16335 16347])
            ("cmd" variable
               (:pointer 1
                :type ("redisCommand" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [16352 16387])
            ("lastcmd" variable
               (:pointer 1
                :type ("redisCommand" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [16352 16387])
            ("reqtype" variable (:type "int") nil [16392 16404])
            ("multibulklen" variable (:type "int") nil [16409 16426])
            ("bulklen" variable (:type "long") nil [16487 16500])
            ("reply" variable
               (:pointer 1
                :type ("list" type (:type "class") nil nil))
                nil [16567 16579])
            ("reply_bytes" variable (:type "unsigned long") nil [16584 16610])
            ("sentlen" variable (:type "int") nil [16656 16668])
            ("ctime" variable (:type ("time_t" type (:type "class") nil nil)) nil [16673 16686])
            ("lastinteraction" variable (:type ("time_t" type (:type "class") nil nil)) nil [16728 16751])
            ("obuf_soft_limit_reached_time" variable (:type ("time_t" type (:type "class") nil nil)) nil [16809 16845])
            ("flags" variable (:type "int") nil [16850 16860])
            ("slaveseldb" variable (:type "int") nil [16930 16945])
            ("authenticated" variable (:type "int") nil [17009 17027])
            ("replstate" variable (:type "int") nil [17072 17086])
            ("repldbfd" variable (:type "int") nil [17143 17156])
            ("repldboff" variable (:type "long") nil [17208 17223])
            ("repldbsize" variable (:type ("off_t" type (:type "class") nil nil)) nil [17269 17286])
            ("slave_listening_port" variable (:type "int") nil [17328 17353])
            ("mstate" variable (:type ("multiState" type (:type "class") nil nil)) nil [17409 17427])
            ("bpop" variable (:type ("blockingState" type (:type "class") nil nil)) nil [17460 17479])
            ("io_keys" variable
               (:pointer 1
                :type ("list" type (:type "class") nil nil))
                nil [17507 17521])
            ("watched_keys" variable
               (:pointer 1
                :type ("list" type (:type "class") nil nil))
                nil [17654 17673])
            ("pubsub_channels" variable
               (:pointer 1
                :type ("dict" type (:type "class") nil nil))
                nil [17720 17742])
            ("pubsub_patterns" variable
               (:pointer 1
                :type ("list" type (:type "class") nil nil))
                nil [17801 17823])
            ("bufpos" variable (:type "int") nil [17909 17920])
            ("buf" variable
               (:dereference 1
                :type "char")
                nil [17925 17959])
            ("redisClient" variable (:type "int") nil [17962 17974])
            ("seconds" variable (:type ("time_t" type (:type "class") nil nil)) nil [17999 18014])
            ("changes" variable (:type "int") nil [18019 18031])
            ("crlf" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("ok" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("err" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("emptybulk" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("czero" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("cone" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("cnegone" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("pong" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("space" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("colon" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("nullbulk" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("nullmultibulk" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("queued" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("emptymultibulk" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("wrongtypeerr" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("nokeyerr" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("syntaxerr" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("sameobjecterr" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("outofrangeerr" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("noscripterr" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("loadingerr" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("slowscripterr" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("bgsaveerr" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("masterdownerr" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("roslaveerr" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("execaborterr" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("oomerr" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("plus" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("messagebulk" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("pmessagebulk" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("subscribebulk" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("unsubscribebulk" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("psubscribebulk" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("punsubscribebulk" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("del" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("rpop" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("lpop" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("lpush" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("select" variable
               (:pointer 1
                :dereference 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("integers" variable
               (:pointer 1
                :dereference 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("mbulkhdr" variable
               (:pointer 1
                :dereference 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("bulkhdr" variable
               (:pointer 1
                :dereference 1
                :type ("robj" type (:type "class") nil nil))
                nil [18069 18723])
            ("obj" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [18836 18846])
            ("score" variable (:type "double") nil [18851 18864])
            ("backward" variable
               (:pointer 1
                :type ("zskiplistNode" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [18869 18900])
            ("level" variable
               (:dereference 1
                :type ("zskiplistLevel" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [18905 19009])
            ("zskiplistLevel" type
               (:members 
                  ( ("forward" variable
                       (:pointer 1
                        :type ("zskiplistNode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [18937 18967])
                    ("span" variable (:type "unsigned int") (reparse-symbol classsubparts) [18976 18994]))                  
                :type "struct")
                nil [18905 19009])
            ("zskiplistNode" variable (:type "int") nil [19012 19026])
            ("header" variable
               (:pointer 1
                :type ("zskiplistNode" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [19059 19095])
            ("tail" variable
               (:pointer 1
                :type ("zskiplistNode" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [19059 19095])
            ("length" variable (:type "unsigned long") nil [19100 19121])
            ("level" variable (:type "int") nil [19126 19136])
            ("zskiplist" variable (:type "int") nil [19139 19149])
            ("dict" variable
               (:pointer 1
                :type ("dict" type (:type "class") nil nil))
                nil [19177 19188])
            ("zsl" variable
               (:pointer 1
                :type ("zskiplist" type (:type "class") nil nil))
                nil [19193 19208])
            ("zset" variable (:type "int") nil [19211 19216])
            ("hard_limit_bytes" variable (:type "unsigned long long") nil [19264 19300])
            ("soft_limit_bytes" variable (:type "unsigned long long") nil [19305 19341])
            ("soft_limit_seconds" variable (:type ("time_t" type (:type "class") nil nil)) nil [19346 19372])
            ("clientBufferLimitsConfig" variable (:type "int") nil [19375 19400])
            ("argv" variable
               (:pointer 2
                :type ("robj" type (:type "class") nil nil))
                nil [19759 19771])
            ("argc" variable (:type "int") nil [19776 19799])
            ("dbid" variable (:type "int") nil [19776 19799])
            ("target" variable (:type "int") nil [19776 19799])
            ("cmd" variable
               (:pointer 1
                :type ("redisCommand" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [19804 19829])
            ("redisOp" variable (:type "int") nil [19832 19840])
            ("ops" variable
               (:pointer 1
                :type ("redisOp" type (:type "class") nil nil))
                nil [20054 20067])
            ("numops" variable (:type "int") nil [20072 20083])
            ("redisOpArray" variable (:type "int") nil [20086 20099])
            ("hz" variable (:type "int") nil [20329 20336])
            ("db" variable
               (:pointer 1
                :type ("redisDb" type (:type "class") nil nil))
                nil [20405 20417])
            ("commands" variable
               (:pointer 1
                :type ("dict" type (:type "class") nil nil))
                nil [20422 20437])
            ("orig_commands" variable
               (:pointer 1
                :type ("dict" type (:type "class") nil nil))
                nil [20474 20494])
            ("el" variable
               (:pointer 1
                :type ("aeEventLoop" type (:type "class") nil nil))
                nil [20551 20567])
            ("lruclock" variable
               (:suffix ":22"
                :type "unsigned int")
                nil [20572 20593])
            ("lruclock_padding" variable
               (:suffix ":10"
                :type "unsigned int")
                nil [20651 20680])
            ("shutdown_asap" variable (:type "int") nil [20685 20703])
            ("activerehashing" variable (:type "int") nil [20744 20764])
            ("requirepass" variable
               (:pointer 1
                :type "char")
                nil [20817 20835])
            ("pidfile" variable
               (:pointer 1
                :type "char")
                nil [20886 20900])
            ("arch_bits" variable (:type "int") nil [20938 20952])
            ("cronloops" variable (:type "int") nil [21011 21025])
            ("runid" variable
               (:dereference 1
                :type "char")
                nil [21087 21119])
            ("sentinel_mode" variable (:type "int") nil [21166 21184])
            ("port" variable (:type "int") nil [21262 21271])
            ("bindaddr" variable
               (:pointer 1
                :type "char")
                nil [21319 21334])
            ("unixsocket" variable
               (:pointer 1
                :type "char")
                nil [21378 21395])
            ("unixsocketperm" variable (:type ("mode_t" type (:type "class") nil nil)) nil [21433 21455])
            ("ipfd" variable (:type "int") nil [21494 21503])
            ("sofd" variable (:type "int") nil [21559 21568])
            ("clients" variable
               (:pointer 1
                :type ("list" type (:type "class") nil nil))
                nil [21625 21639])
            ("clients_to_close" variable
               (:pointer 1
                :type ("list" type (:type "class") nil nil))
                nil [21686 21709])
            ("slaves" variable
               (:pointer 1
                :type ("list" type (:type "class") nil nil))
                nil [21756 21780])
            ("monitors" variable
               (:pointer 1
                :type ("list" type (:type "class") nil nil))
                nil [21756 21780])
            ("current_client" variable
               (:pointer 1
                :type ("redisClient" type (:type "class") nil nil))
                nil [21822 21850])
            ("neterr" variable
               (:dereference 1
                :type "char")
                nil [21903 21929])
            ("loading" variable (:type "int") nil [22005 22017])
            ("loading_total_bytes" variable (:type ("off_t" type (:type "class") nil nil)) nil [22081 22107])
            ("loading_loaded_bytes" variable (:type ("off_t" type (:type "class") nil nil)) nil [22112 22139])
            ("loading_start_time" variable (:type ("time_t" type (:type "class") nil nil)) nil [22144 22170])
            ("delCommand" variable
               (:pointer 1
                :type ("redisCommand" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [22226 22340])
            ("multiCommand" variable
               (:pointer 1
                :type ("redisCommand" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [22226 22340])
            ("lpushCommand" variable
               (:pointer 1
                :type ("redisCommand" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [22226 22340])
            ("lpopCommand" variable
               (:pointer 1
                :type ("redisCommand" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [22226 22340])
            ("rpopCommand" variable
               (:pointer 1
                :type ("redisCommand" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [22226 22340])
            ("stat_starttime" variable (:type ("time_t" type (:type "class") nil nil)) nil [22382 22404])
            ("stat_numcommands" variable (:type "long long") nil [22442 22469])
            ("stat_numconnections" variable (:type "long long") nil [22513 22543])
            ("stat_expiredkeys" variable (:type "long long") nil [22586 22613])
            ("stat_evictedkeys" variable (:type "long long") nil [22651 22678])
            ("stat_keyspace_hits" variable (:type "long long") nil [22728 22757])
            ("stat_keyspace_misses" variable (:type "long long") nil [22807 22838])
            ("stat_peak_memory" variable (:type ("size_t" type (:type "class") nil nil)) nil [22882 22906])
            ("stat_fork_time" variable (:type "long long") nil [22947 22972])
            ("stat_rejected_conn" variable (:type "long long") nil [23026 23055])
            ("slowlog" variable
               (:pointer 1
                :type ("list" type (:type "class") nil nil))
                nil [23107 23121])
            ("slowlog_entry_id" variable (:type "long long") nil [23174 23201])
            ("slowlog_log_slower_than" variable (:type "long long") nil [23241 23275])
            ("slowlog_max_len" variable (:type "unsigned long") nil [23321 23351])
            ("ops_sec_last_sample_time" variable (:type "long long") nil [23510 23545])
            ("ops_sec_last_sample_ops" variable (:type "long long") nil [23589 23623])
            ("ops_sec_samples" variable
               (:dereference 1
                :type "long long")
                nil [23662 23711])
            ("ops_sec_idx" variable (:type "int") nil [23716 23732])
            ("verbosity" variable (:type "int") nil [23761 23775])
            ("maxidletime" variable (:type "int") nil [23826 23842])
            ("tcpkeepalive" variable (:type "int") nil [23894 23911])
            ("active_expire_enabled" variable (:type "int") nil [23966 23992])
            ("client_max_querybuf_len" variable (:type ("size_t" type (:type "class") nil nil)) nil [24046 24077])
            ("dbnum" variable (:type "int") nil [24125 24135])
            ("daemonize" variable (:type "int") nil [24198 24212])
            ("client_obuf_limits" variable
               (:dereference 1
                :type ("clientBufferLimitsConfig" type (:type "class") nil nil))
                nil [24268 24344])
            ("aof_state" variable (:type "int") nil [24375 24389])
            ("aof_fsync" variable (:type "int") nil [24449 24463])
            ("aof_filename" variable
               (:pointer 1
                :type "char")
                nil [24514 24533])
            ("aof_no_fsync_on_rewrite" variable (:type "int") nil [24577 24605])
            ("aof_rewrite_perc" variable (:type "int") nil [24656 24677])
            ("aof_rewrite_min_size" variable (:type ("off_t" type (:type "class") nil nil)) nil [24736 24763])
            ("aof_rewrite_base_size" variable (:type ("off_t" type (:type "class") nil nil)) nil [24812 24840])
            ("aof_current_size" variable (:type ("off_t" type (:type "class") nil nil)) nil [24893 24916])
            ("aof_rewrite_scheduled" variable (:type "int") nil [24953 24979])
            ("aof_child_pid" variable (:type ("pid_t" type (:type "class") nil nil)) nil [25027 25047])
            ("aof_rewrite_buf_blocks" variable
               (:pointer 1
                :type ("list" type (:type "class") nil nil))
                nil [25094 25123])
            ("aof_buf" variable (:type ("sds" type (:type "class") nil nil)) nil [25172 25184])
            ("aof_fd" variable (:type "int") nil [25251 25262])
            ("aof_selected_db" variable (:type "int") nil [25326 25346])
            ("aof_flush_postponed_start" variable (:type ("time_t" type (:type "class") nil nil)) nil [25386 25419])
            ("aof_last_fsync" variable (:type ("time_t" type (:type "class") nil nil)) nil [25463 25485])
            ("aof_rewrite_time_last" variable (:type ("time_t" type (:type "class") nil nil)) nil [25533 25562])
            ("aof_rewrite_time_start" variable (:type ("time_t" type (:type "class") nil nil)) nil [25610 25640])
            ("aof_lastbgrewrite_status" variable (:type "int") nil [25684 25713])
            ("aof_delayed_fsync" variable (:type "unsigned long") nil [25748 25780])
            ("aof_rewrite_incremental_fsync" variable (:type "int") nil [25820 25854])
            ("dirty" variable (:type "long long") nil [25927 25943])
            ("dirty_before_bgsave" variable (:type "long long") nil [26002 26032])
            ("rdb_child_pid" variable (:type ("pid_t" type (:type "class") nil nil)) nil [26083 26103])
            ("saveparams" variable
               (:pointer 1
                :type ("saveparam" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [26149 26178])
            ("saveparamslen" variable (:type "int") nil [26217 26235])
            ("rdb_filename" variable
               (:pointer 1
                :type "char")
                nil [26283 26302])
            ("rdb_compression" variable (:type "int") nil [26342 26362])
            ("rdb_checksum" variable (:type "int") nil [26408 26425])
            ("lastsave" variable (:type ("time_t" type (:type "class") nil nil)) nil [26468 26484])
            ("lastbgsave_try" variable (:type ("time_t" type (:type "class") nil nil)) nil [26544 26566])
            ("rdb_save_time_last" variable (:type ("time_t" type (:type "class") nil nil)) nil [26621 26647])
            ("rdb_save_time_start" variable (:type ("time_t" type (:type "class") nil nil)) nil [26695 26722])
            ("lastbgsave_status" variable (:type "int") nil [26766 26788])
            ("stop_writes_on_bgsave_err" variable (:type "int") nil [26830 26860])
            ("also_propagate" variable (:type ("redisOpArray" type (:type "class") nil nil)) nil [26962 26990])
            ("logfile" variable
               (:pointer 1
                :type "char")
                nil [27055 27069])
            ("syslog_enabled" variable (:type "int") nil [27114 27133])
            ("syslog_ident" variable
               (:pointer 1
                :type "char")
                nil [27175 27194])
            ("syslog_facility" variable (:type "int") nil [27230 27250])
            ("masterauth" variable
               (:pointer 1
                :type "char")
                nil [27320 27337])
            ("masterhost" variable
               (:pointer 1
                :type "char")
                nil [27398 27415])
            ("masterport" variable (:type "int") nil [27459 27474])
            ("repl_ping_slave_period" variable (:type "int") nil [27516 27543])
            ("repl_timeout" variable (:type "int") nil [27597 27614])
            ("master" variable
               (:pointer 1
                :type ("redisClient" type (:type "class") nil nil))
                nil [27678 27698])
            ("repl_syncio_timeout" variable (:type "int") nil [27750 27774])
            ("repl_state" variable (:type "int") nil [27819 27834])
            ("repl_transfer_size" variable (:type ("off_t" type (:type "class") nil nil)) nil [27900 27925])
            ("repl_transfer_read" variable (:type ("off_t" type (:type "class") nil nil)) nil [27981 28006])
            ("repl_transfer_last_fsync_off" variable (:type ("off_t" type (:type "class") nil nil)) nil [28061 28096])
            ("repl_transfer_s" variable (:type "int") nil [28142 28162])
            ("repl_transfer_fd" variable (:type "int") nil [28205 28226])
            ("repl_transfer_tmpfile" variable
               (:pointer 1
                :type "char")
                nil [28282 28310])
            ("repl_transfer_lastio" variable (:type ("time_t" type (:type "class") nil nil)) nil [28356 28384])
            ("repl_serve_stale_data" variable (:type "int") nil [28437 28463])
            ("repl_slave_ro" variable (:type "int") nil [28510 28528])
            ("repl_down_since" variable (:type ("time_t" type (:type "class") nil nil)) nil [28568 28591])
            ("repl_disable_tcp_nodelay" variable (:type "int") nil [28648 28677])
            ("slave_priority" variable (:type "int") nil [28722 28741])
            ("maxclients" variable (:type "unsigned int") nil [28820 28844])
            ("maxmemory" variable (:type "unsigned long long") nil [28897 28926])
            ("maxmemory_policy" variable (:type "int") nil [28973 28994])
            ("maxmemory_samples" variable (:type "int") nil [29039 29061])
            ("bpop_blocked_clients" variable (:type "unsigned int") nil [29136 29170])
            ("unblocked_clients" variable
               (:pointer 1
                :type ("list" type (:type "class") nil nil))
                nil [29216 29240])
            ("ready_keys" variable
               (:pointer 1
                :type ("list" type (:type "class") nil nil))
                nil [29295 29312])
            ("sort_desc" variable (:type "int") nil [29522 29536])
            ("sort_alpha" variable (:type "int") nil [29541 29556])
            ("sort_bypattern" variable (:type "int") nil [29561 29580])
            ("hash_max_ziplist_entries" variable (:type ("size_t" type (:type "class") nil nil)) nil [29654 29686])
            ("hash_max_ziplist_value" variable (:type ("size_t" type (:type "class") nil nil)) nil [29691 29721])
            ("list_max_ziplist_entries" variable (:type ("size_t" type (:type "class") nil nil)) nil [29726 29758])
            ("list_max_ziplist_value" variable (:type ("size_t" type (:type "class") nil nil)) nil [29763 29793])
            ("set_max_intset_entries" variable (:type ("size_t" type (:type "class") nil nil)) nil [29798 29828])
            ("zset_max_ziplist_entries" variable (:type ("size_t" type (:type "class") nil nil)) nil [29833 29865])
            ("zset_max_ziplist_value" variable (:type ("size_t" type (:type "class") nil nil)) nil [29870 29900])
            ("unixtime" variable (:type ("time_t" type (:type "class") nil nil)) nil [29905 29921])
            ("pubsub_channels" variable
               (:pointer 1
                :type ("dict" type (:type "class") nil nil))
                nil [29988 30010])
            ("pubsub_patterns" variable
               (:pointer 1
                :type ("list" type (:type "class") nil nil))
                nil [30065 30087])
            ("lua" variable
               (:pointer 1
                :type ("lua_State" type (:type "class") nil nil))
                nil [30145 30160])
            ("lua_client" variable
               (:pointer 1
                :type ("redisClient" type (:type "class") nil nil))
                nil [30224 30248])
            ("lua_caller" variable
               (:pointer 1
                :type ("redisClient" type (:type "class") nil nil))
                nil [30303 30327])
            ("lua_scripts" variable
               (:pointer 1
                :type ("dict" type (:type "class") nil nil))
                nil [30383 30401])
            ("lua_time_limit" variable (:type "long long") nil [30456 30481])
            ("lua_time_start" variable (:type "long long") nil [30519 30544])
            ("lua_write_dirty" variable (:type "int") nil [30577 30597])
            ("lua_random_dirty" variable (:type "int") nil [30717 30738])
            ("lua_timedout" variable (:type "int") nil [30858 30875])
            ("lua_kill" variable (:type "int") nil [30975 30988])
            ("assert_failed" variable
               (:pointer 1
                :type "char")
                nil [31065 31085])
            ("assert_file" variable
               (:pointer 1
                :type "char")
                nil [31090 31108])
            ("assert_line" variable (:type "int") nil [31113 31129])
            ("bug_report_start" variable (:type "int") nil [31134 31155])
            ("watchdog_period" variable (:type "int") nil [31212 31232])
            ("client" variable
               (:pointer 1
                :type ("redisClient" type (:type "class") nil nil))
                nil [31319 31339])
            ("pattern" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [31344 31358])
            ("pubsubPattern" variable (:type "int") nil [31361 31375])
            ("name" variable
               (:pointer 1
                :type "char")
                nil [31555 31566])
            ("proc" variable
               (:pointer 1
                :type ("redisCommandProc" type (:type "class") nil nil))
                nil [31571 31594])
            ("arity" variable (:type "int") nil [31599 31609])
            ("sflags" variable
               (:pointer 1
                :type "char")
                nil [31614 31627])
            ("flags" variable (:type "int") nil [31689 31699])
            ("getkeys_proc" variable
               (:pointer 1
                :type ("redisGetKeysProc" type (:type "class") nil nil))
                nil [31837 31868])
            ("firstkey" variable (:type "int") nil [31951 31964])
            ("lastkey" variable (:type "int") nil [32021 32033])
            ("keystep" variable (:type "int") nil [32076 32088])
            ("microseconds" variable (:type "long long") nil [32136 32166])
            ("calls" variable (:type "long long") nil [32136 32166])
            ("name" variable
               (:pointer 1
                :type "char")
                nil [32201 32212])
            ("pointer" variable (:type "unsigned long") nil [32217 32239])
            ("obj" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [32282 32292])
            ("u" variable (:type ("" type
                 (:members 
                    ( ("score" variable (:type "double") (reparse-symbol classsubparts) [32313 32326])
                      ("cmpobj" variable
                         (:pointer 1
                          :type ("robj" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [32335 32348]))                    
                  :type "union")
                  nil nil)) nil [32297 32357])
            ("redisSortObject" variable (:type "int") nil [32360 32376])
            ("type" variable (:type "int") nil [32419 32428])
            ("pattern" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [32433 32447])
            ("redisSortOperation" variable (:type "int") nil [32450 32469])
            ("subject" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [32544 32558])
            ("encoding" variable (:type "unsigned char") nil [32563 32586])
            ("direction" variable (:type "unsigned char") nil [32591 32615])
            ("zi" variable
               (:pointer 1
                :type "unsigned char")
                nil [32646 32664])
            ("ln" variable
               (:pointer 1
                :type ("listNode" type (:type "class") nil nil))
                nil [32669 32682])
            ("listTypeIterator" variable (:type "int") nil [32685 32702])
            ("li" variable
               (:pointer 1
                :type ("listTypeIterator" type (:type "class") nil nil))
                nil [32783 32804])
            ("zi" variable
               (:pointer 1
                :type "unsigned char")
                nil [32809 32827])
            ("ln" variable
               (:pointer 1
                :type ("listNode" type (:type "class") nil nil))
                nil [32856 32869])
            ("listTypeEntry" variable (:type "int") nil [32905 32919])
            ("subject" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [32993 33007])
            ("encoding" variable (:type "int") nil [33012 33025])
            ("ii" variable (:type "int") nil [33030 33037])
            ("di" variable
               (:pointer 1
                :type ("dictIterator" type (:type "class") nil nil))
                nil [33064 33081])
            ("setTypeIterator" variable (:type "int") nil [33084 33100])
            ("subject" variable
               (:pointer 1
                :type ("robj" type (:type "class") nil nil))
                nil [33389 33403])
            ("encoding" variable (:type "int") nil [33408 33421])
            ("fptr" variable
               (:pointer 1
                :type "unsigned char")
                nil [33427 33454])
            ("vptr" variable
               (:pointer 1
                :type "unsigned char")
                nil [33427 33454])
            ("di" variable
               (:pointer 1
                :type ("dictIterator" type (:type "class") nil nil))
                nil [33460 33477])
            ("de" variable
               (:pointer 1
                :type ("dictEntry" type (:type "class") nil nil))
                nil [33482 33496])
            ("hashTypeIterator" variable (:type "int") nil [33499 33516])
            ("REDIS_HASH_KEY" variable (:constant-flag t) nil [33526 33540])
            ("REDIS_HASH_VALUE" variable (:constant-flag t) nil [33551 33567])
            ("server" variable
               (:typemodifiers ("extern")
                :type ("redisServer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [33756 33789])
            ("shared" variable
               (:typemodifiers ("extern")
                :type ("sharedObjectsStruct" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [33790 33831])
            ("setDictType" variable
               (:typemodifiers ("extern")
                :type ("dictType" type (:type "class") nil nil))
                nil [33832 33860])
            ("zsetDictType" variable
               (:typemodifiers ("extern")
                :type ("dictType" type (:type "class") nil nil))
                nil [33861 33890])
            ("dbDictType" variable
               (:typemodifiers ("extern")
                :type ("dictType" type (:type "class") nil nil))
                nil [33891 33918])
            ("shaScriptObjectDictType" variable
               (:typemodifiers ("extern")
                :type ("dictType" type (:type "class") nil nil))
                nil [33919 33959])
            ("R_Zero" variable
               (:typemodifiers ("extern")
                :type "double")
                nil [33960 34008])
            ("R_PosInf" variable
               (:typemodifiers ("extern")
                :type "double")
                nil [33960 34008])
            ("R_NegInf" variable
               (:typemodifiers ("extern")
                :type "double")
                nil [33960 34008])
            ("R_Nan" variable
               (:typemodifiers ("extern")
                :type "double")
                nil [33960 34008])
            ("hashDictType" variable
               (:typemodifiers ("extern")
                :type ("dictType" type (:type "class") nil nil))
                nil [34009 34038])
            ("rdb.h" include nil nil [40380 40396])
            ("min" variable (:type "double") nil [40965 40981])
            ("max" variable (:type "double") nil [40965 40981])
            ("minex" variable (:type "int") nil [40986 41003])
            ("maxex" variable (:type "int") nil [40986 41003])
            ("zrangespec" variable (:type "int") nil [41038 41049])
            ("REDIS_GETKEYS_ALL" variable (:constant-flag t) nil [45553 45570])
            ("REDIS_GETKEYS_PRELOAD" variable (:constant-flag t) nil [45581 45602])
            ("redisDebug" variable (:constant-flag t) nil [52076 52086])
            ("redisDebugMark" variable (:constant-flag t) nil [52178 52192]))          
      :file "redis.h"
      :pointmax 52258
      :fsize 52257
      :lastmodtime '(20863 50188 0 0)
      :unmatched-syntax '((punctuation 52065 . 52066) (close-paren 52064 . 52065) (symbol 52061 . 52064) (symbol 52054 . 52060) (punctuation 52052 . 52053) (symbol 52047 . 52052) (punctuation 52046 . 52047) (VOID 52041 . 52045) (punctuation 52039 . 52040) (symbol 52034 . 52039) (punctuation 52033 . 52034) (CHAR 52028 . 52032) (punctuation 52026 . 52027) (symbol 52021 . 52026) (INT 52017 . 52020) (open-paren 52016 . 52017) (symbol 52001 . 52016) (VOID 51996 . 52000) (punctuation 51994 . 51995) (close-paren 51993 . 51994) (symbol 51987 . 51993) (INT 51983 . 51986) (open-paren 51982 . 51983) (symbol 51960 . 51982) (VOID 51955 . 51959) (punctuation 51953 . 51954) (close-paren 51952 . 51953) (VOID 51948 . 51952) (open-paren 51947 . 51948) (symbol 51932 . 51947) (VOID 51927 . 51931) (punctuation 51925 . 51926) (close-paren 51924 . 51925) (symbol 51918 . 51924) (INT 51914 . 51917) (open-paren 51913 . 51914) (symbol 51899 . 51913) (VOID 51894 . 51898) (punctuation 51892 . 51893) (close-paren 51891 . 51892) (symbol 51884 . 51891) (punctuation 51883 . 51884) (CHAR 51878 . 51882) (open-paren 51877 . 51878) (symbol 51859 . 51877) (symbol 51855 . 51858) (punctuation 51853 . 51854) (close-paren 51852 . 51853) (symbol 51846 . 51852) (punctuation 51845 . 51846) (VOID 51840 . 51844) (punctuation 51838 . 51839) (symbol 51834 . 51838) (punctuation 51833 . 51834) (symbol 51823 . 51832) (punctuation 51821 . 51822) (symbol 51818 . 51821) (INT 51814 . 51817) (open-paren 51813 . 51814) (symbol 51799 . 51813) (VOID 51794 . 51798) (punctuation 51792 . 51793) (close-paren 51791 . 51792) (symbol 51790 . 51791) (punctuation 51789 . 51790) (symbol 51784 . 51788) (open-paren 51783 . 51784) (symbol 51760 . 51783) (VOID 51755 . 51759) (punctuation 51753 . 51754) (close-paren 51752 . 51753) (VOID 51748 . 51752) (open-paren 51747 . 51748) (symbol 51733 . 51747) (VOID 51728 . 51732) (punctuation 51726 . 51727) (close-paren 51725 . 51726) (symbol 51721 . 51725) (INT 51717 . 51720) (punctuation 51715 . 51716) (symbol 51711 . 51715) (punctuation 51710 . 51711) (CHAR 51705 . 51709) (punctuation 51703 . 51704) (symbol 51700 . 51703) (punctuation 51699 . 51700) (CHAR 51694 . 51698) (open-paren 51693 . 51694) (symbol 51682 . 51693) (VOID 51677 . 51681) (punctuation 51675 . 51676) (close-paren 51674 . 51675) (symbol 51670 . 51674) (INT 51666 . 51669) (punctuation 51664 . 51665) (symbol 51660 . 51664) (punctuation 51659 . 51660) (CHAR 51654 . 51658) (punctuation 51652 . 51653) (symbol 51648 . 51652) (punctuation 51647 . 51648) (CHAR 51642 . 51646) (open-paren 51641 . 51642) (symbol 51629 . 51641) (VOID 51624 . 51628) (punctuation 51622 . 51623) (close-paren 51621 . 51622) (symbol 51617 . 51621) (INT 51613 . 51616) (punctuation 51611 . 51612) (symbol 51607 . 51611) (punctuation 51606 . 51607) (CHAR 51601 . 51605) (punctuation 51599 . 51600) (symbol 51595 . 51599) (punctuation 51594 . 51595) (CHAR 51589 . 51593) (punctuation 51587 . 51588) (symbol 51586 . 51587) (punctuation 51585 . 51586) (symbol 51580 . 51584) (punctuation 51578 . 51579) (symbol 51577 . 51578) (punctuation 51576 . 51577) (symbol 51564 . 51575) (open-paren 51563 . 51564) (symbol 51543 . 51563) (VOID 51538 . 51542) (punctuation 51506 . 51507) (close-paren 51476 . 51477) (symbol 51472 . 51476) (symbol 51465 . 51471) (punctuation 51463 . 51464) (symbol 51460 . 51463) (punctuation 51459 . 51460) (VOID 51454 . 51458) (open-paren 51453 . 51454) (symbol 51446 . 51453) (punctuation 51445 . 51446) (VOID 51440 . 51444) (punctuation 51438 . 51439) (close-paren 51408 . 51409) (symbol 51404 . 51408) (symbol 51397 . 51403) (open-paren 51396 . 51397) (symbol 51390 . 51396) (punctuation 51389 . 51390) (VOID 51384 . 51388) (punctuation 51382 . 51383) (close-paren 51352 . 51353) (symbol 51349 . 51352) (punctuation 51348 . 51349) (VOID 51343 . 51347) (open-paren 51342 . 51343) (symbol 51338 . 51342) (VOID 51333 . 51337) (punctuation 51331 . 51332) (close-paren 51301 . 51302) (symbol 51297 . 51301) (symbol 51290 . 51296) (punctuation 51288 . 51289) (symbol 51283 . 51288) (symbol 51276 . 51282) (open-paren 51275 . 51276) (symbol 51269 . 51275) (punctuation 51268 . 51269) (VOID 51263 . 51267) (punctuation 51238 . 51239) (close-paren 51237 . 51238) (symbol 51236 . 51237) (punctuation 51235 . 51236) (symbol 51223 . 51234) (open-paren 51222 . 51223) (symbol 51207 . 51222) (VOID 51202 . 51206) (punctuation 51200 . 51201) (close-paren 51199 . 51200) (symbol 51198 . 51199) (punctuation 51197 . 51198) (symbol 51185 . 51196) (open-paren 51184 . 51185) (symbol 51169 . 51184) (VOID 51164 . 51168) (punctuation 51162 . 51163) (close-paren 51161 . 51162) (symbol 51160 . 51161) (punctuation 51159 . 51160) (symbol 51147 . 51158) (open-paren 51146 . 51147) (symbol 51134 . 51146) (VOID 51129 . 51133) (punctuation 51127 . 51128) (close-paren 51126 . 51127) (symbol 51125 . 51126) (punctuation 51124 . 51125) (symbol 51112 . 51123) (open-paren 51111 . 51112) (symbol 51100 . 51111) (VOID 51095 . 51099) (punctuation 51093 . 51094) (close-paren 51092 . 51093) (symbol 51091 . 51092) (punctuation 51090 . 51091) (symbol 51078 . 51089) (open-paren 51077 . 51078) (symbol 51064 . 51077) (VOID 51059 . 51063) (punctuation 51057 . 51058) (close-paren 51056 . 51057) (symbol 51055 . 51056) (punctuation 51054 . 51055) (symbol 51042 . 51053) (open-paren 51041 . 51042) (symbol 51027 . 51041) (VOID 51022 . 51026) (punctuation 51020 . 51021) (close-paren 51019 . 51020) (symbol 51018 . 51019) (punctuation 51017 . 51018) (symbol 51005 . 51016) (open-paren 51004 . 51005) (symbol 50993 . 51004) (VOID 50988 . 50992) (punctuation 50986 . 50987) (close-paren 50985 . 50986) (symbol 50984 . 50985) (punctuation 50983 . 50984) (symbol 50971 . 50982) (open-paren 50970 . 50971) (symbol 50957 . 50970) (VOID 50952 . 50956) (punctuation 50950 . 50951) (close-paren 50949 . 50950) (symbol 50948 . 50949) (punctuation 50947 . 50948) (symbol 50935 . 50946) (open-paren 50934 . 50935) (symbol 50921 . 50934) (VOID 50916 . 50920) (punctuation 50914 . 50915) (close-paren 50913 . 50914) (symbol 50912 . 50913) (punctuation 50911 . 50912) (symbol 50899 . 50910) (open-paren 50898 . 50899) (symbol 50887 . 50898) (VOID 50882 . 50886) (punctuation 50880 . 50881) (close-paren 50879 . 50880) (symbol 50878 . 50879) (punctuation 50877 . 50878) (symbol 50865 . 50876) (open-paren 50864 . 50865) (symbol 50850 . 50864) (VOID 50845 . 50849) (punctuation 50843 . 50844) (close-paren 50842 . 50843) (symbol 50841 . 50842) (punctuation 50840 . 50841) (symbol 50828 . 50839) (open-paren 50827 . 50828) (symbol 50813 . 50827) (VOID 50808 . 50812) (punctuation 50806 . 50807) (close-paren 50805 . 50806) (symbol 50804 . 50805) (punctuation 50803 . 50804) (symbol 50791 . 50802) (open-paren 50790 . 50791) (symbol 50776 . 50790) (VOID 50771 . 50775) (punctuation 50769 . 50770) (close-paren 50768 . 50769) (symbol 50767 . 50768) (punctuation 50766 . 50767) (symbol 50754 . 50765) (open-paren 50753 . 50754) (symbol 50741 . 50753) (VOID 50736 . 50740) (punctuation 50734 . 50735) (close-paren 50733 . 50734) (symbol 50732 . 50733) (punctuation 50731 . 50732) (symbol 50719 . 50730) (open-paren 50718 . 50719) (symbol 50704 . 50718) (VOID 50699 . 50703) (punctuation 50697 . 50698) (close-paren 50696 . 50697) (symbol 50695 . 50696) (punctuation 50694 . 50695) (symbol 50682 . 50693) (open-paren 50681 . 50682) (symbol 50662 . 50681) (VOID 50657 . 50661) (punctuation 50655 . 50656) (close-paren 50654 . 50655) (symbol 50653 . 50654) (punctuation 50652 . 50653) (symbol 50640 . 50651) (open-paren 50639 . 50640) (symbol 50622 . 50639) (VOID 50617 . 50621) (punctuation 50615 . 50616) (close-paren 50614 . 50615) (symbol 50613 . 50614) (punctuation 50612 . 50613) (symbol 50600 . 50611) (open-paren 50599 . 50600) (symbol 50581 . 50599) (VOID 50576 . 50580) (punctuation 50574 . 50575) (close-paren 50573 . 50574) (symbol 50572 . 50573) (punctuation 50571 . 50572) (symbol 50559 . 50570) (open-paren 50558 . 50559) (symbol 50542 . 50558) (VOID 50537 . 50541) (punctuation 50535 . 50536) (close-paren 50534 . 50535) (symbol 50533 . 50534) (punctuation 50532 . 50533) (symbol 50520 . 50531) (open-paren 50519 . 50520) (symbol 50500 . 50519) (VOID 50495 . 50499) (punctuation 50493 . 50494) (close-paren 50492 . 50493) (symbol 50491 . 50492) (punctuation 50490 . 50491) (symbol 50478 . 50489) (open-paren 50477 . 50478) (symbol 50463 . 50477) (VOID 50458 . 50462) (punctuation 50456 . 50457) (close-paren 50455 . 50456) (symbol 50454 . 50455) (punctuation 50453 . 50454) (symbol 50441 . 50452) (open-paren 50440 . 50441) (symbol 50427 . 50440) (VOID 50422 . 50426) (punctuation 50420 . 50421) (close-paren 50419 . 50420) (symbol 50418 . 50419) (punctuation 50417 . 50418) (symbol 50405 . 50416) (open-paren 50404 . 50405) (symbol 50390 . 50404) (VOID 50385 . 50389) (punctuation 50383 . 50384) (close-paren 50382 . 50383) (symbol 50381 . 50382) (punctuation 50380 . 50381) (symbol 50368 . 50379) (open-paren 50367 . 50368) (symbol 50353 . 50367) (VOID 50348 . 50352) (punctuation 50346 . 50347) (close-paren 50345 . 50346) (symbol 50344 . 50345) (punctuation 50343 . 50344) (symbol 50331 . 50342) (open-paren 50330 . 50331) (symbol 50318 . 50330) (VOID 50313 . 50317) (punctuation 50311 . 50312) (close-paren 50310 . 50311) (symbol 50309 . 50310) (punctuation 50308 . 50309) (symbol 50296 . 50307) (open-paren 50295 . 50296) (symbol 50283 . 50295) (VOID 50278 . 50282) (punctuation 50276 . 50277) (close-paren 50275 . 50276) (symbol 50274 . 50275) (punctuation 50273 . 50274) (symbol 50261 . 50272) (open-paren 50260 . 50261) (symbol 50242 . 50260) (VOID 50237 . 50241) (punctuation 50235 . 50236) (close-paren 50234 . 50235) (symbol 50233 . 50234) (punctuation 50232 . 50233) (symbol 50220 . 50231) (open-paren 50219 . 50220) (symbol 50201 . 50219) (VOID 50196 . 50200) (punctuation 50194 . 50195) (close-paren 50193 . 50194) (symbol 50192 . 50193) (punctuation 50191 . 50192) (symbol 50179 . 50190) (open-paren 50178 . 50179) (symbol 50156 . 50178) (VOID 50151 . 50155) (punctuation 50149 . 50150) (close-paren 50148 . 50149) (symbol 50147 . 50148) (punctuation 50146 . 50147) (symbol 50134 . 50145) (open-paren 50133 . 50134) (symbol 50122 . 50133) (VOID 50117 . 50121) (punctuation 50115 . 50116) (close-paren 50114 . 50115) (symbol 50113 . 50114) (punctuation 50112 . 50113) (symbol 50100 . 50111) (open-paren 50099 . 50100) (symbol 50088 . 50099) (VOID 50083 . 50087) (punctuation 50081 . 50082) (close-paren 50080 . 50081) (symbol 50079 . 50080) (punctuation 50078 . 50079) (symbol 50066 . 50077) (open-paren 50065 . 50066) (symbol 50053 . 50065) (VOID 50048 . 50052) (punctuation 50046 . 50047) (close-paren 50045 . 50046) (symbol 50044 . 50045) (punctuation 50043 . 50044) (symbol 50031 . 50042) (open-paren 50030 . 50031) (symbol 50018 . 50030) (VOID 50013 . 50017) (punctuation 50011 . 50012) (close-paren 50010 . 50011) (symbol 50009 . 50010) (punctuation 50008 . 50009) (symbol 49996 . 50007) (open-paren 49995 . 49996) (symbol 49984 . 49995) (VOID 49979 . 49983) (punctuation 49977 . 49978) (close-paren 49976 . 49977) (symbol 49975 . 49976) (punctuation 49974 . 49975) (symbol 49962 . 49973) (open-paren 49961 . 49962) (symbol 49948 . 49961) (VOID 49943 . 49947) (punctuation 49941 . 49942) (close-paren 49940 . 49941) (symbol 49939 . 49940) (punctuation 49938 . 49939) (symbol 49926 . 49937) (open-paren 49925 . 49926) (symbol 49914 . 49925) (VOID 49909 . 49913) (punctuation 49907 . 49908) (close-paren 49906 . 49907) (symbol 49905 . 49906) (punctuation 49904 . 49905) (symbol 49892 . 49903) (open-paren 49891 . 49892) (symbol 49876 . 49891) (VOID 49871 . 49875) (punctuation 49869 . 49870) (close-paren 49868 . 49869) (symbol 49867 . 49868) (punctuation 49866 . 49867) (symbol 49854 . 49865) (open-paren 49853 . 49854) (symbol 49841 . 49853) (VOID 49836 . 49840) (punctuation 49834 . 49835) (close-paren 49833 . 49834) (symbol 49832 . 49833) (punctuation 49831 . 49832) (symbol 49819 . 49830) (open-paren 49818 . 49819) (symbol 49805 . 49818) (VOID 49800 . 49804) (punctuation 49798 . 49799) (close-paren 49797 . 49798) (symbol 49796 . 49797) (punctuation 49795 . 49796) (symbol 49783 . 49794) (open-paren 49782 . 49783) (symbol 49769 . 49782) (VOID 49764 . 49768) (punctuation 49762 . 49763) (close-paren 49761 . 49762) (symbol 49760 . 49761) (punctuation 49759 . 49760) (symbol 49747 . 49758) (open-paren 49746 . 49747) (symbol 49729 . 49746) (VOID 49724 . 49728) (punctuation 49722 . 49723) (close-paren 49721 . 49722) (symbol 49720 . 49721) (punctuation 49719 . 49720) (symbol 49707 . 49718) (open-paren 49706 . 49707) (symbol 49694 . 49706) (VOID 49689 . 49693) (punctuation 49687 . 49688) (close-paren 49686 . 49687) (symbol 49685 . 49686) (punctuation 49684 . 49685) (symbol 49672 . 49683) (open-paren 49671 . 49672) (symbol 49659 . 49671) (VOID 49654 . 49658) (punctuation 49652 . 49653) (close-paren 49651 . 49652) (symbol 49650 . 49651) (punctuation 49649 . 49650) (symbol 49637 . 49648) (open-paren 49636 . 49637) (symbol 49622 . 49636) (VOID 49617 . 49621) (punctuation 49615 . 49616) (close-paren 49614 . 49615) (symbol 49613 . 49614) (punctuation 49612 . 49613) (symbol 49600 . 49611) (open-paren 49599 . 49600) (symbol 49588 . 49599) (VOID 49583 . 49587) (punctuation 49581 . 49582) (close-paren 49580 . 49581) (symbol 49579 . 49580) (punctuation 49578 . 49579) (symbol 49566 . 49577) (open-paren 49565 . 49566) (symbol 49553 . 49565) (VOID 49548 . 49552) (punctuation 49546 . 49547) (close-paren 49545 . 49546) (symbol 49544 . 49545) (punctuation 49543 . 49544) (symbol 49531 . 49542) (open-paren 49530 . 49531) (symbol 49507 . 49530) (VOID 49502 . 49506) (punctuation 49500 . 49501) (close-paren 49499 . 49500) (symbol 49498 . 49499) (punctuation 49497 . 49498) (symbol 49485 . 49496) (open-paren 49484 . 49485) (symbol 49471 . 49484) (VOID 49466 . 49470) (punctuation 49464 . 49465) (close-paren 49463 . 49464) (symbol 49462 . 49463) (punctuation 49461 . 49462) (symbol 49449 . 49460) (open-paren 49448 . 49449) (symbol 49437 . 49448) (VOID 49432 . 49436) (punctuation 49430 . 49431) (close-paren 49429 . 49430) (symbol 49428 . 49429) (punctuation 49427 . 49428) (symbol 49415 . 49426) (open-paren 49414 . 49415) (symbol 49402 . 49414) (VOID 49397 . 49401) (punctuation 49395 . 49396) (close-paren 49394 . 49395) (symbol 49393 . 49394) (punctuation 49392 . 49393) (symbol 49380 . 49391) (open-paren 49379 . 49380) (symbol 49363 . 49379) (VOID 49358 . 49362) (punctuation 49356 . 49357) (close-paren 49355 . 49356) (symbol 49354 . 49355) (punctuation 49353 . 49354) (symbol 49341 . 49352) (open-paren 49340 . 49341) (symbol 49327 . 49340) (VOID 49322 . 49326) (punctuation 49320 . 49321) (close-paren 49319 . 49320) (symbol 49318 . 49319) (punctuation 49317 . 49318) (symbol 49305 . 49316) (open-paren 49304 . 49305) (symbol 49281 . 49304) (VOID 49276 . 49280) (punctuation 49274 . 49275) (close-paren 49273 . 49274) (symbol 49272 . 49273) (punctuation 49271 . 49272) (symbol 49259 . 49270) (open-paren 49258 . 49259) (symbol 49238 . 49258) (VOID 49233 . 49237) (punctuation 49231 . 49232) (close-paren 49230 . 49231) (symbol 49229 . 49230) (punctuation 49228 . 49229) (symbol 49216 . 49227) (open-paren 49215 . 49216) (symbol 49202 . 49215) (VOID 49197 . 49201) (punctuation 49195 . 49196) (close-paren 49194 . 49195) (symbol 49193 . 49194) (punctuation 49192 . 49193) (symbol 49180 . 49191) (open-paren 49179 . 49180) (symbol 49165 . 49179) (VOID 49160 . 49164) (punctuation 49158 . 49159) (close-paren 49157 . 49158) (symbol 49156 . 49157) (punctuation 49155 . 49156) (symbol 49143 . 49154) (open-paren 49142 . 49143) (symbol 49131 . 49142) (VOID 49126 . 49130) (punctuation 49124 . 49125) (close-paren 49123 . 49124) (symbol 49122 . 49123) (punctuation 49121 . 49122) (symbol 49109 . 49120) (open-paren 49108 . 49109) (symbol 49095 . 49108) (VOID 49090 . 49094) (punctuation 49088 . 49089) (close-paren 49087 . 49088) (symbol 49086 . 49087) (punctuation 49085 . 49086) (symbol 49073 . 49084) (open-paren 49072 . 49073) (symbol 49061 . 49072) (VOID 49056 . 49060) (punctuation 49054 . 49055) (close-paren 49053 . 49054) (symbol 49052 . 49053) (punctuation 49051 . 49052) (symbol 49039 . 49050) (open-paren 49038 . 49039) (symbol 49026 . 49038) (VOID 49021 . 49025) (punctuation 49019 . 49020) (close-paren 49018 . 49019) (symbol 49017 . 49018) (punctuation 49016 . 49017) (symbol 49004 . 49015) (open-paren 49003 . 49004) (symbol 48989 . 49003) (VOID 48984 . 48988) (punctuation 48982 . 48983) (close-paren 48981 . 48982) (symbol 48980 . 48981) (punctuation 48979 . 48980) (symbol 48967 . 48978) (open-paren 48966 . 48967) (symbol 48952 . 48966) (VOID 48947 . 48951) (punctuation 48945 . 48946) (close-paren 48944 . 48945) (symbol 48943 . 48944) (punctuation 48942 . 48943) (symbol 48930 . 48941) (open-paren 48929 . 48930) (symbol 48918 . 48929) (VOID 48913 . 48917) (punctuation 48911 . 48912) (close-paren 48910 . 48911) (symbol 48909 . 48910) (punctuation 48908 . 48909) (symbol 48896 . 48907) (open-paren 48895 . 48896) (symbol 48885 . 48895) (VOID 48880 . 48884) (punctuation 48878 . 48879) (close-paren 48877 . 48878) (symbol 48876 . 48877) (punctuation 48875 . 48876) (symbol 48863 . 48874) (open-paren 48862 . 48863) (symbol 48849 . 48862) (VOID 48844 . 48848) (punctuation 48842 . 48843) (close-paren 48841 . 48842) (symbol 48840 . 48841) (punctuation 48839 . 48840) (symbol 48827 . 48838) (open-paren 48826 . 48827) (symbol 48810 . 48826) (VOID 48805 . 48809) (punctuation 48803 . 48804) (close-paren 48802 . 48803) (symbol 48801 . 48802) (punctuation 48800 . 48801) (symbol 48788 . 48799) (open-paren 48787 . 48788) (symbol 48773 . 48787) (VOID 48768 . 48772) (punctuation 48766 . 48767) (close-paren 48765 . 48766) (symbol 48764 . 48765) (punctuation 48763 . 48764) (symbol 48751 . 48762) (open-paren 48750 . 48751) (symbol 48735 . 48750) (VOID 48730 . 48734) (punctuation 48728 . 48729) (close-paren 48727 . 48728) (symbol 48726 . 48727) (punctuation 48725 . 48726) (symbol 48713 . 48724) (open-paren 48712 . 48713) (symbol 48699 . 48712) (VOID 48694 . 48698) (punctuation 48692 . 48693) (close-paren 48691 . 48692) (symbol 48690 . 48691) (punctuation 48689 . 48690) (symbol 48677 . 48688) (open-paren 48676 . 48677) (symbol 48662 . 48676) (VOID 48657 . 48661) (punctuation 48655 . 48656) (close-paren 48654 . 48655) (symbol 48653 . 48654) (punctuation 48652 . 48653) (symbol 48640 . 48651) (open-paren 48639 . 48640) (symbol 48628 . 48639) (VOID 48623 . 48627) (punctuation 48621 . 48622) (close-paren 48620 . 48621) (symbol 48619 . 48620) (punctuation 48618 . 48619) (symbol 48606 . 48617) (open-paren 48605 . 48606) (symbol 48594 . 48605) (VOID 48589 . 48593) (punctuation 48587 . 48588) (close-paren 48586 . 48587) (symbol 48585 . 48586) (punctuation 48584 . 48585) (symbol 48572 . 48583) (open-paren 48571 . 48572) (symbol 48555 . 48571) (VOID 48550 . 48554) (punctuation 48548 . 48549) (close-paren 48547 . 48548) (symbol 48546 . 48547) (punctuation 48545 . 48546) (symbol 48533 . 48544) (open-paren 48532 . 48533) (symbol 48521 . 48532) (VOID 48516 . 48520) (punctuation 48514 . 48515) (close-paren 48513 . 48514) (symbol 48512 . 48513) (punctuation 48511 . 48512) (symbol 48499 . 48510) (open-paren 48498 . 48499) (symbol 48487 . 48498) (VOID 48482 . 48486) (punctuation 48480 . 48481) (close-paren 48479 . 48480) (symbol 48478 . 48479) (punctuation 48477 . 48478) (symbol 48465 . 48476) (open-paren 48464 . 48465) (symbol 48449 . 48464) (VOID 48444 . 48448) (punctuation 48442 . 48443) (close-paren 48441 . 48442) (symbol 48440 . 48441) (punctuation 48439 . 48440) (symbol 48427 . 48438) (open-paren 48426 . 48427) (symbol 48412 . 48426) (VOID 48407 . 48411) (punctuation 48405 . 48406) (close-paren 48404 . 48405) (symbol 48403 . 48404) (punctuation 48402 . 48403) (symbol 48390 . 48401) (open-paren 48389 . 48390) (symbol 48378 . 48389) (VOID 48373 . 48377) (punctuation 48371 . 48372) (close-paren 48370 . 48371) (symbol 48369 . 48370) (punctuation 48368 . 48369) (symbol 48356 . 48367) (open-paren 48355 . 48356) (symbol 48338 . 48355) (VOID 48333 . 48337) (punctuation 48331 . 48332) (close-paren 48330 . 48331) (symbol 48329 . 48330) (punctuation 48328 . 48329) (symbol 48316 . 48327) (open-paren 48315 . 48316) (symbol 48303 . 48315) (VOID 48298 . 48302) (punctuation 48296 . 48297) (close-paren 48295 . 48296) (symbol 48294 . 48295) (punctuation 48293 . 48294) (symbol 48281 . 48292) (open-paren 48280 . 48281) (symbol 48262 . 48280) (VOID 48257 . 48261) (punctuation 48255 . 48256) (close-paren 48254 . 48255) (symbol 48253 . 48254) (punctuation 48252 . 48253) (symbol 48240 . 48251) (open-paren 48239 . 48240) (symbol 48226 . 48239) (VOID 48221 . 48225) (punctuation 48219 . 48220) (close-paren 48218 . 48219) (symbol 48217 . 48218) (punctuation 48216 . 48217) (symbol 48204 . 48215) (open-paren 48203 . 48204) (symbol 48185 . 48203) (VOID 48180 . 48184) (punctuation 48178 . 48179) (close-paren 48177 . 48178) (symbol 48176 . 48177) (punctuation 48175 . 48176) (symbol 48163 . 48174) (open-paren 48162 . 48163) (symbol 48149 . 48162) (VOID 48144 . 48148) (punctuation 48142 . 48143) (close-paren 48141 . 48142) (symbol 48140 . 48141) (punctuation 48139 . 48140) (symbol 48127 . 48138) (open-paren 48126 . 48127) (symbol 48108 . 48126) (VOID 48103 . 48107) (punctuation 48101 . 48102) (close-paren 48100 . 48101) (symbol 48099 . 48100) (punctuation 48098 . 48099) (symbol 48086 . 48097) (open-paren 48085 . 48086) (symbol 48074 . 48085) (VOID 48069 . 48073) (punctuation 48067 . 48068) (close-paren 48066 . 48067) (symbol 48065 . 48066) (punctuation 48064 . 48065) (symbol 48052 . 48063) (open-paren 48051 . 48052) (symbol 48039 . 48051) (VOID 48034 . 48038) (punctuation 48032 . 48033) (close-paren 48031 . 48032) (symbol 48030 . 48031) (punctuation 48029 . 48030) (symbol 48017 . 48028) (open-paren 48016 . 48017) (symbol 48000 . 48016) (VOID 47995 . 47999) (punctuation 47993 . 47994) (close-paren 47992 . 47993) (symbol 47991 . 47992) (punctuation 47990 . 47991) (symbol 47978 . 47989) (open-paren 47977 . 47978) (symbol 47965 . 47977) (VOID 47960 . 47964) (punctuation 47958 . 47959) (close-paren 47957 . 47958) (symbol 47956 . 47957) (punctuation 47955 . 47956) (symbol 47943 . 47954) (open-paren 47942 . 47943) (symbol 47931 . 47942) (VOID 47926 . 47930) (punctuation 47924 . 47925) (close-paren 47923 . 47924) (symbol 47922 . 47923) (punctuation 47921 . 47922) (symbol 47909 . 47920) (open-paren 47908 . 47909) (symbol 47897 . 47908) (VOID 47892 . 47896) (punctuation 47890 . 47891) (close-paren 47889 . 47890) (symbol 47888 . 47889) (punctuation 47887 . 47888) (symbol 47875 . 47886) (open-paren 47874 . 47875) (symbol 47863 . 47874) (VOID 47858 . 47862) (punctuation 47856 . 47857) (close-paren 47855 . 47856) (symbol 47854 . 47855) (punctuation 47853 . 47854) (symbol 47841 . 47852) (open-paren 47840 . 47841) (symbol 47829 . 47840) (VOID 47824 . 47828) (punctuation 47822 . 47823) (close-paren 47821 . 47822) (symbol 47820 . 47821) (punctuation 47819 . 47820) (symbol 47807 . 47818) (open-paren 47806 . 47807) (symbol 47794 . 47806) (VOID 47789 . 47793) (punctuation 47787 . 47788) (close-paren 47786 . 47787) (symbol 47785 . 47786) (punctuation 47784 . 47785) (symbol 47772 . 47783) (open-paren 47771 . 47772) (symbol 47758 . 47771) (VOID 47753 . 47757) (punctuation 47751 . 47752) (close-paren 47750 . 47751) (symbol 47749 . 47750) (punctuation 47748 . 47749) (symbol 47736 . 47747) (open-paren 47735 . 47736) (symbol 47722 . 47735) (VOID 47717 . 47721) (punctuation 47715 . 47716) (close-paren 47714 . 47715) (symbol 47713 . 47714) (punctuation 47712 . 47713) (symbol 47700 . 47711) (open-paren 47699 . 47700) (symbol 47688 . 47699) (VOID 47683 . 47687) (punctuation 47681 . 47682) (close-paren 47680 . 47681) (symbol 47679 . 47680) (punctuation 47678 . 47679) (symbol 47666 . 47677) (open-paren 47665 . 47666) (symbol 47654 . 47665) (VOID 47649 . 47653) (punctuation 47647 . 47648) (close-paren 47646 . 47647) (symbol 47645 . 47646) (punctuation 47644 . 47645) (symbol 47632 . 47643) (open-paren 47631 . 47632) (symbol 47620 . 47631) (VOID 47615 . 47619) (punctuation 47613 . 47614) (close-paren 47612 . 47613) (symbol 47611 . 47612) (punctuation 47610 . 47611) (symbol 47598 . 47609) (open-paren 47597 . 47598) (symbol 47583 . 47597) (VOID 47578 . 47582) (punctuation 47576 . 47577) (close-paren 47575 . 47576) (symbol 47574 . 47575) (punctuation 47573 . 47574) (symbol 47561 . 47572) (open-paren 47560 . 47561) (symbol 47547 . 47560) (VOID 47542 . 47546) (punctuation 47540 . 47541) (close-paren 47539 . 47540) (symbol 47538 . 47539) (punctuation 47537 . 47538) (symbol 47525 . 47536) (open-paren 47524 . 47525) (symbol 47511 . 47524) (VOID 47506 . 47510) (punctuation 47504 . 47505) (close-paren 47503 . 47504) (symbol 47502 . 47503) (punctuation 47501 . 47502) (symbol 47489 . 47500) (open-paren 47488 . 47489) (symbol 47476 . 47488) (VOID 47471 . 47475) (punctuation 47469 . 47470) (close-paren 47468 . 47469) (symbol 47467 . 47468) (punctuation 47466 . 47467) (symbol 47454 . 47465) (open-paren 47453 . 47454) (symbol 47441 . 47453) (VOID 47436 . 47440) (punctuation 47434 . 47435) (close-paren 47433 . 47434) (symbol 47432 . 47433) (punctuation 47431 . 47432) (symbol 47419 . 47430) (open-paren 47418 . 47419) (symbol 47403 . 47418) (VOID 47398 . 47402) (punctuation 47396 . 47397) (close-paren 47395 . 47396) (symbol 47394 . 47395) (punctuation 47393 . 47394) (symbol 47381 . 47392) (open-paren 47380 . 47381) (symbol 47367 . 47380) (VOID 47362 . 47366) (punctuation 47360 . 47361) (close-paren 47359 . 47360) (symbol 47358 . 47359) (punctuation 47357 . 47358) (symbol 47345 . 47356) (open-paren 47344 . 47345) (symbol 47333 . 47344) (VOID 47328 . 47332) (punctuation 47326 . 47327) (close-paren 47325 . 47326) (symbol 47324 . 47325) (punctuation 47323 . 47324) (symbol 47311 . 47322) (open-paren 47310 . 47311) (symbol 47295 . 47310) (VOID 47290 . 47294) (punctuation 47288 . 47289) (close-paren 47287 . 47288) (symbol 47286 . 47287) (punctuation 47285 . 47286) (symbol 47273 . 47284) (open-paren 47272 . 47273) (symbol 47253 . 47272) (VOID 47248 . 47252) (punctuation 47246 . 47247) (close-paren 47245 . 47246) (symbol 47244 . 47245) (punctuation 47243 . 47244) (symbol 47231 . 47242) (open-paren 47230 . 47231) (symbol 47217 . 47230) (VOID 47212 . 47216) (punctuation 47210 . 47211) (close-paren 47209 . 47210) (symbol 47208 . 47209) (punctuation 47207 . 47208) (symbol 47195 . 47206) (open-paren 47194 . 47195) (symbol 47183 . 47194) (VOID 47178 . 47182) (punctuation 47176 . 47177) (close-paren 47175 . 47176) (symbol 47174 . 47175) (punctuation 47173 . 47174) (symbol 47161 . 47172) (open-paren 47160 . 47161) (symbol 47145 . 47160) (VOID 47140 . 47144) (punctuation 47138 . 47139) (close-paren 47137 . 47138) (symbol 47136 . 47137) (punctuation 47135 . 47136) (symbol 47123 . 47134) (open-paren 47122 . 47123) (symbol 47109 . 47122) (VOID 47104 . 47108) (punctuation 47102 . 47103) (close-paren 47101 . 47102) (symbol 47100 . 47101) (punctuation 47099 . 47100) (symbol 47087 . 47098) (open-paren 47086 . 47087) (symbol 47075 . 47086) (VOID 47070 . 47074) (punctuation 47068 . 47069) (close-paren 47067 . 47068) (symbol 47066 . 47067) (punctuation 47065 . 47066) (symbol 47053 . 47064) (open-paren 47052 . 47053) (symbol 47036 . 47052) (VOID 47031 . 47035) (punctuation 47029 . 47030) (close-paren 47028 . 47029) (symbol 47027 . 47028) (punctuation 47026 . 47027) (symbol 47014 . 47025) (open-paren 47013 . 47014) (symbol 47000 . 47013) (VOID 46995 . 46999) (punctuation 46993 . 46994) (close-paren 46992 . 46993) (symbol 46991 . 46992) (punctuation 46990 . 46991) (symbol 46978 . 46989) (open-paren 46977 . 46978) (symbol 46959 . 46977) (VOID 46954 . 46958) (punctuation 46952 . 46953) (close-paren 46951 . 46952) (symbol 46950 . 46951) (punctuation 46949 . 46950) (symbol 46937 . 46948) (open-paren 46936 . 46937) (symbol 46923 . 46936) (VOID 46918 . 46922) (punctuation 46916 . 46917) (close-paren 46915 . 46916) (symbol 46914 . 46915) (punctuation 46913 . 46914) (symbol 46901 . 46912) (open-paren 46900 . 46901) (symbol 46887 . 46900) (VOID 46882 . 46886) (punctuation 46880 . 46881) (close-paren 46879 . 46880) (symbol 46878 . 46879) (punctuation 46877 . 46878) (symbol 46865 . 46876) (open-paren 46864 . 46865) (symbol 46853 . 46864) (VOID 46848 . 46852) (punctuation 46846 . 46847) (close-paren 46845 . 46846) (symbol 46844 . 46845) (punctuation 46843 . 46844) (symbol 46831 . 46842) (open-paren 46830 . 46831) (symbol 46819 . 46830) (VOID 46814 . 46818) (punctuation 46812 . 46813) (close-paren 46811 . 46812) (symbol 46810 . 46811) (punctuation 46809 . 46810) (symbol 46797 . 46808) (open-paren 46796 . 46797) (symbol 46781 . 46796) (VOID 46776 . 46780) (punctuation 46774 . 46775) (close-paren 46773 . 46774) (symbol 46772 . 46773) (punctuation 46771 . 46772) (symbol 46759 . 46770) (open-paren 46758 . 46759) (symbol 46743 . 46758) (VOID 46738 . 46742) (punctuation 46736 . 46737) (close-paren 46735 . 46736) (symbol 46734 . 46735) (punctuation 46733 . 46734) (symbol 46721 . 46732) (open-paren 46720 . 46721) (symbol 46707 . 46720) (VOID 46702 . 46706) (punctuation 46700 . 46701) (close-paren 46699 . 46700) (symbol 46698 . 46699) (punctuation 46697 . 46698) (symbol 46685 . 46696) (open-paren 46684 . 46685) (symbol 46671 . 46684) (VOID 46666 . 46670) (punctuation 46664 . 46665) (close-paren 46663 . 46664) (symbol 46662 . 46663) (punctuation 46661 . 46662) (symbol 46649 . 46660) (open-paren 46648 . 46649) (symbol 46635 . 46648) (VOID 46630 . 46634) (punctuation 46628 . 46629) (close-paren 46627 . 46628) (symbol 46626 . 46627) (punctuation 46625 . 46626) (symbol 46613 . 46624) (open-paren 46612 . 46613) (symbol 46602 . 46612) (VOID 46597 . 46601) (punctuation 46595 . 46596) (close-paren 46594 . 46595) (symbol 46593 . 46594) (punctuation 46592 . 46593) (symbol 46580 . 46591) (open-paren 46579 . 46580) (symbol 46569 . 46579) (VOID 46564 . 46568) (punctuation 46562 . 46563) (close-paren 46561 . 46562) (symbol 46560 . 46561) (punctuation 46559 . 46560) (symbol 46547 . 46558) (open-paren 46546 . 46547) (symbol 46533 . 46546) (VOID 46528 . 46532) (punctuation 46526 . 46527) (close-paren 46525 . 46526) (symbol 46524 . 46525) (punctuation 46523 . 46524) (symbol 46511 . 46522) (open-paren 46510 . 46511) (symbol 46498 . 46510) (VOID 46493 . 46497) (punctuation 46491 . 46492) (close-paren 46490 . 46491) (symbol 46489 . 46490) (punctuation 46488 . 46489) (symbol 46476 . 46487) (open-paren 46475 . 46476) (symbol 46463 . 46475) (VOID 46458 . 46462) (punctuation 46456 . 46457) (close-paren 46455 . 46456) (symbol 46454 . 46455) (punctuation 46453 . 46454) (symbol 46441 . 46452) (open-paren 46440 . 46441) (symbol 46430 . 46440) (VOID 46425 . 46429) (punctuation 46423 . 46424) (close-paren 46422 . 46423) (symbol 46421 . 46422) (punctuation 46420 . 46421) (symbol 46408 . 46419) (open-paren 46407 . 46408) (symbol 46396 . 46407) (VOID 46391 . 46395) (punctuation 46389 . 46390) (close-paren 46388 . 46389) (symbol 46387 . 46388) (punctuation 46386 . 46387) (symbol 46374 . 46385) (open-paren 46373 . 46374) (symbol 46362 . 46373) (VOID 46357 . 46361) (punctuation 46355 . 46356) (close-paren 46354 . 46355) (symbol 46353 . 46354) (punctuation 46352 . 46353) (symbol 46340 . 46351) (open-paren 46339 . 46340) (symbol 46328 . 46339) (VOID 46323 . 46327) (punctuation 46294 . 46295) (close-paren 46293 . 46294) (VOID 46289 . 46293) (open-paren 46288 . 46289) (symbol 46275 . 46288) (punctuation 46274 . 46275) (CHAR 46269 . 46273) (punctuation 46267 . 46268) (close-paren 46266 . 46267) (VOID 46262 . 46266) (open-paren 46261 . 46262) (symbol 46249 . 46261) (punctuation 46248 . 46249) (CHAR 46243 . 46247) (punctuation 46225 . 46226) (close-paren 46224 . 46225) (VOID 46220 . 46224) (open-paren 46219 . 46220) (symbol 46206 . 46219) (VOID 46201 . 46205) (punctuation 46182 . 46183) (close-paren 46181 . 46182) (symbol 46177 . 46181) (INT 46173 . 46176) (punctuation 46171 . 46172) (symbol 46167 . 46171) (punctuation 46166 . 46167) (punctuation 46165 . 46166) (CHAR 46160 . 46164) (open-paren 46159 . 46160) (symbol 46132 . 46159) (punctuation 46131 . 46132) (CHAR 46126 . 46130) (punctuation 46124 . 46125) (close-paren 46123 . 46124) (VOID 46119 . 46123) (open-paren 46118 . 46119) (symbol 46105 . 46118) (VOID 46100 . 46104) (punctuation 46098 . 46099) (close-paren 46097 . 46098) (VOID 46093 . 46097) (open-paren 46092 . 46093) (symbol 46080 . 46092) (VOID 46075 . 46079) (punctuation 46073 . 46074) (close-paren 46072 . 46073) (VOID 46068 . 46072) (open-paren 46067 . 46068) (symbol 46049 . 46067) (VOID 46044 . 46048) (punctuation 46026 . 46027) (close-paren 46025 . 46026) (symbol 46020 . 46025) (INT 46016 . 46019) (punctuation 46014 . 46015) (symbol 46007 . 46014) (punctuation 46006 . 46007) (INT 46002 . 46005) (punctuation 46000 . 46001) (symbol 45996 . 46000) (INT 45992 . 45995) (punctuation 45990 . 45991) (symbol 45986 . 45990) (punctuation 45985 . 45986) (punctuation 45984 . 45985) (symbol 45979 . 45983) (punctuation 45978 . 45979) (symbol 45975 . 45978) (punctuation 45974 . 45975) (symbol 45961 . 45973) (STRUCT 45954 . 45960) (open-paren 45953 . 45954) (symbol 45935 . 45953) (punctuation 45934 . 45935) (INT 45930 . 45933) (punctuation 45928 . 45929) (close-paren 45927 . 45928) (symbol 45922 . 45927) (INT 45918 . 45921) (punctuation 45916 . 45917) (symbol 45909 . 45916) (punctuation 45908 . 45909) (INT 45904 . 45907) (punctuation 45902 . 45903) (symbol 45898 . 45902) (INT 45894 . 45897) (punctuation 45892 . 45893) (symbol 45888 . 45892) (punctuation 45887 . 45888) (punctuation 45886 . 45887) (symbol 45881 . 45885) (punctuation 45880 . 45881) (symbol 45877 . 45880) (punctuation 45876 . 45877) (symbol 45863 . 45875) (STRUCT 45856 . 45862) (open-paren 45855 . 45856) (symbol 45842 . 45855) (punctuation 45841 . 45842) (INT 45837 . 45840) (punctuation 45835 . 45836) (close-paren 45834 . 45835) (symbol 45829 . 45834) (INT 45825 . 45828) (punctuation 45823 . 45824) (symbol 45816 . 45823) (punctuation 45815 . 45816) (INT 45811 . 45814) (punctuation 45809 . 45810) (symbol 45805 . 45809) (INT 45801 . 45804) (punctuation 45799 . 45800) (symbol 45795 . 45799) (punctuation 45794 . 45795) (punctuation 45793 . 45794) (symbol 45788 . 45792) (punctuation 45787 . 45788) (symbol 45784 . 45787) (punctuation 45783 . 45784) (symbol 45770 . 45782) (STRUCT 45763 . 45769) (open-paren 45762 . 45763) (symbol 45746 . 45762) (punctuation 45745 . 45746) (INT 45741 . 45744) (punctuation 45739 . 45740) (close-paren 45738 . 45739) (symbol 45732 . 45738) (punctuation 45731 . 45732) (INT 45727 . 45730) (open-paren 45726 . 45727) (symbol 45709 . 45726) (VOID 45704 . 45708) (punctuation 45702 . 45703) (close-paren 45701 . 45702) (symbol 45696 . 45701) (INT 45692 . 45695) (punctuation 45690 . 45691) (symbol 45683 . 45690) (punctuation 45682 . 45683) (INT 45678 . 45681) (punctuation 45676 . 45677) (symbol 45672 . 45676) (INT 45668 . 45671) (punctuation 45666 . 45667) (symbol 45662 . 45666) (punctuation 45661 . 45662) (punctuation 45660 . 45661) (symbol 45655 . 45659) (punctuation 45653 . 45654) (symbol 45650 . 45653) (punctuation 45649 . 45650) (symbol 45636 . 45648) (STRUCT 45629 . 45635) (open-paren 45628 . 45629) (symbol 45610 . 45628) (punctuation 45609 . 45610) (INT 45605 . 45608) (punctuation 45497 . 45498) (close-paren 45496 . 45497) (symbol 45491 . 45496) (INT 45487 . 45490) (UNSIGNED 45478 . 45486) (punctuation 45476 . 45477) (symbol 45472 . 45476) (punctuation 45471 . 45472) (punctuation 45470 . 45471) (symbol 45465 . 45469) (punctuation 45463 . 45464) (symbol 45455 . 45463) (INT 45451 . 45454) (UNSIGNED 45442 . 45450) (open-paren 45441 . 45442) (symbol 45428 . 45441) (INT 45424 . 45427) (UNSIGNED 45415 . 45423) (punctuation 45413 . 45414) (close-paren 45412 . 45413) (symbol 45408 . 45412) (INT 45404 . 45407) (open-paren 45403 . 45404) (symbol 45388 . 45403) (VOID 45383 . 45387) (punctuation 45381 . 45382) (close-paren 45380 . 45381) (symbol 45377 . 45380) (punctuation 45376 . 45377) (symbol 45371 . 45375) (punctuation 45369 . 45370) (symbol 45367 . 45369) (punctuation 45366 . 45367) (symbol 45358 . 45365) (open-paren 45357 . 45358) (symbol 45340 . 45357) (VOID 45335 . 45339) (punctuation 45333 . 45334) (close-paren 45332 . 45333) (symbol 45330 . 45332) (INT 45326 . 45329) (punctuation 45324 . 45325) (symbol 45323 . 45324) (punctuation 45322 . 45323) (symbol 45310 . 45321) (open-paren 45309 . 45310) (symbol 45301 . 45309) (INT 45297 . 45300) (punctuation 45295 . 45296) (close-paren 45294 . 45295) (open-paren 45293 . 45294) (symbol 45286 . 45293) (LONG 45281 . 45285) (LONG 45276 . 45280) (punctuation 45274 . 45275) (close-paren 45273 . 45274) (symbol 45270 . 45273) (punctuation 45269 . 45270) (symbol 45264 . 45268) (punctuation 45262 . 45263) (symbol 45260 . 45262) (punctuation 45259 . 45260) (symbol 45251 . 45258) (open-paren 45250 . 45251) (symbol 45242 . 45250) (INT 45238 . 45241) (punctuation 45236 . 45237) (close-paren 45235 . 45236) (symbol 45233 . 45235) (punctuation 45232 . 45233) (symbol 45224 . 45231) (open-paren 45223 . 45224) (symbol 45212 . 45223) (punctuation 45211 . 45212) (symbol 45206 . 45210) (punctuation 45204 . 45205) (close-paren 45203 . 45204) (symbol 45200 . 45203) (punctuation 45199 . 45200) (symbol 45194 . 45198) (punctuation 45192 . 45193) (symbol 45190 . 45192) (punctuation 45189 . 45190) (symbol 45181 . 45188) (open-paren 45180 . 45181) (symbol 45172 . 45180) (INT 45168 . 45171) (punctuation 45166 . 45167) (close-paren 45165 . 45166) (symbol 45162 . 45165) (punctuation 45161 . 45162) (symbol 45156 . 45160) (punctuation 45154 . 45155) (symbol 45151 . 45154) (punctuation 45150 . 45151) (symbol 45145 . 45149) (punctuation 45143 . 45144) (symbol 45141 . 45143) (punctuation 45140 . 45141) (symbol 45132 . 45139) (open-paren 45131 . 45132) (symbol 45125 . 45131) (VOID 45120 . 45124) (punctuation 45118 . 45119) (close-paren 45117 . 45118) (symbol 45114 . 45117) (punctuation 45113 . 45114) (symbol 45108 . 45112) (punctuation 45106 . 45107) (symbol 45103 . 45106) (punctuation 45102 . 45103) (symbol 45097 . 45101) (punctuation 45095 . 45096) (symbol 45093 . 45095) (punctuation 45092 . 45093) (symbol 45084 . 45091) (open-paren 45083 . 45084) (symbol 45072 . 45083) (VOID 45067 . 45071) (punctuation 45065 . 45066) (close-paren 45064 . 45065) (symbol 45061 . 45064) (punctuation 45060 . 45061) (symbol 45055 . 45059) (punctuation 45053 . 45054) (symbol 45050 . 45053) (punctuation 45049 . 45050) (symbol 45044 . 45048) (punctuation 45042 . 45043) (symbol 45040 . 45042) (punctuation 45039 . 45040) (symbol 45031 . 45038) (open-paren 45030 . 45031) (symbol 45025 . 45030) (VOID 45020 . 45024) (punctuation 45018 . 45019) (close-paren 45017 . 45018) (symbol 45012 . 45017) (punctuation 45011 . 45012) (symbol 45006 . 45010) (punctuation 45004 . 45005) (symbol 45001 . 45004) (punctuation 45000 . 45001) (symbol 44995 . 44999) (punctuation 44993 . 44994) (symbol 44992 . 44993) (punctuation 44991 . 44992) (symbol 44979 . 44990) (open-paren 44978 . 44979) (symbol 44957 . 44978) (punctuation 44956 . 44957) (symbol 44951 . 44955) (punctuation 44949 . 44950) (close-paren 44948 . 44949) (symbol 44943 . 44948) (punctuation 44942 . 44943) (symbol 44937 . 44941) (punctuation 44935 . 44936) (symbol 44932 . 44935) (punctuation 44931 . 44932) (symbol 44926 . 44930) (punctuation 44924 . 44925) (symbol 44923 . 44924) (punctuation 44922 . 44923) (symbol 44910 . 44921) (open-paren 44909 . 44910) (symbol 44889 . 44909) (punctuation 44888 . 44889) (symbol 44883 . 44887) (punctuation 44881 . 44882) (close-paren 44880 . 44881) (symbol 44877 . 44880) (punctuation 44876 . 44877) (symbol 44871 . 44875) (punctuation 44869 . 44870) (symbol 44867 . 44869) (punctuation 44866 . 44867) (symbol 44858 . 44865) (open-paren 44857 . 44858) (symbol 44843 . 44857) (punctuation 44842 . 44843) (symbol 44837 . 44841) (punctuation 44835 . 44836) (close-paren 44834 . 44835) (symbol 44831 . 44834) (punctuation 44830 . 44831) (symbol 44825 . 44829) (punctuation 44823 . 44824) (symbol 44821 . 44823) (punctuation 44820 . 44821) (symbol 44812 . 44819) (open-paren 44811 . 44812) (symbol 44798 . 44811) (punctuation 44797 . 44798) (symbol 44792 . 44796) (punctuation 44790 . 44791) (close-paren 44789 . 44790) (symbol 44786 . 44789) (punctuation 44785 . 44786) (symbol 44780 . 44784) (punctuation 44778 . 44779) (symbol 44776 . 44778) (punctuation 44775 . 44776) (symbol 44767 . 44774) (open-paren 44766 . 44767) (symbol 44757 . 44766) (punctuation 44756 . 44757) (symbol 44751 . 44755) (punctuation 44749 . 44750) (close-paren 44748 . 44749) (symbol 44744 . 44748) (LONG 44739 . 44743) (LONG 44734 . 44738) (punctuation 44732 . 44733) (symbol 44729 . 44732) (punctuation 44728 . 44729) (symbol 44723 . 44727) (punctuation 44721 . 44722) (symbol 44719 . 44721) (punctuation 44718 . 44719) (symbol 44710 . 44717) (open-paren 44709 . 44710) (symbol 44700 . 44709) (VOID 44695 . 44699) (punctuation 44693 . 44694) (close-paren 44692 . 44693) (symbol 44689 . 44692) (punctuation 44688 . 44689) (symbol 44683 . 44687) (punctuation 44681 . 44682) (symbol 44679 . 44681) (punctuation 44678 . 44679) (symbol 44670 . 44677) (open-paren 44669 . 44670) (symbol 44660 . 44669) (LONG 44655 . 44659) (LONG 44650 . 44654) (punctuation 44648 . 44649) (close-paren 44647 . 44648) (symbol 44644 . 44647) (punctuation 44643 . 44644) (symbol 44638 . 44642) (punctuation 44636 . 44637) (symbol 44634 . 44636) (punctuation 44633 . 44634) (symbol 44625 . 44632) (open-paren 44624 . 44625) (symbol 44610 . 44624) (INT 44606 . 44609) (punctuation 44604 . 44605) (close-paren 44603 . 44604) (symbol 44600 . 44603) (punctuation 44599 . 44600) (symbol 44594 . 44598) (punctuation 44592 . 44593) (symbol 44590 . 44592) (punctuation 44589 . 44590) (symbol 44581 . 44588) (open-paren 44580 . 44581) (symbol 44565 . 44580) (VOID 44560 . 44564) (punctuation 44558 . 44559) (close-paren 44557 . 44558) (symbol 44554 . 44557) (punctuation 44553 . 44554) (symbol 44548 . 44552) (punctuation 44546 . 44547) (symbol 44544 . 44546) (punctuation 44543 . 44544) (symbol 44535 . 44542) (open-paren 44534 . 44535) (symbol 44522 . 44534) (INT 44518 . 44521) (punctuation 44481 . 44482) (close-paren 44480 . 44481) (open-paren 44479 . 44480) (symbol 44458 . 44479) (VOID 44453 . 44457) (punctuation 44451 . 44452) (close-paren 44450 . 44451) (symbol 44443 . 44450) (INT 44439 . 44442) (punctuation 44437 . 44438) (symbol 44430 . 44437) (symbol 44423 . 44429) (open-paren 44422 . 44423) (symbol 44400 . 44422) (VOID 44395 . 44399) (punctuation 44393 . 44394) (close-paren 44392 . 44393) (symbol 44385 . 44392) (punctuation 44384 . 44385) (CHAR 44379 . 44383) (punctuation 44377 . 44378) (symbol 44369 . 44377) (punctuation 44368 . 44369) (CHAR 44363 . 44367) (open-paren 44362 . 44363) (symbol 44346 . 44362) (VOID 44341 . 44345) (punctuation 44318 . 44319) (close-paren 44317 . 44318) (symbol 44310 . 44317) (punctuation 44309 . 44310) (symbol 44304 . 44308) (punctuation 44302 . 44303) (symbol 44295 . 44302) (punctuation 44294 . 44295) (symbol 44289 . 44293) (open-paren 44288 . 44289) (symbol 44268 . 44288) (INT 44264 . 44267) (punctuation 44262 . 44263) (close-paren 44261 . 44262) (symbol 44260 . 44261) (punctuation 44259 . 44260) (VOID 44254 . 44258) (punctuation 44252 . 44253) (symbol 44251 . 44252) (punctuation 44250 . 44251) (VOID 44245 . 44249) (open-paren 44244 . 44245) (symbol 44222 . 44244) (INT 44218 . 44221) (punctuation 44216 . 44217) (close-paren 44215 . 44216) (symbol 44214 . 44215) (punctuation 44213 . 44214) (VOID 44208 . 44212) (open-paren 44207 . 44208) (symbol 44190 . 44207) (VOID 44185 . 44189) (punctuation 44183 . 44184) (close-paren 44182 . 44183) (symbol 44176 . 44182) (INT 44172 . 44175) (punctuation 44170 . 44171) (symbol 44169 . 44170) (punctuation 44168 . 44169) (symbol 44156 . 44167) (open-paren 44155 . 44156) (symbol 44127 . 44155) (INT 44123 . 44126) (punctuation 44121 . 44122) (close-paren 44120 . 44121) (symbol 44114 . 44120) (INT 44110 . 44113) (punctuation 44108 . 44109) (symbol 44107 . 44108) (punctuation 44106 . 44107) (symbol 44094 . 44105) (open-paren 44093 . 44094) (symbol 44065 . 44093) (INT 44061 . 44064) (punctuation 44042 . 44043) (close-paren 44041 . 44042) (symbol 44038 . 44041) (punctuation 44037 . 44038) (symbol 44032 . 44036) (punctuation 44030 . 44031) (symbol 44029 . 44030) (punctuation 44028 . 44029) (symbol 44016 . 44027) (open-paren 44015 . 44016) (symbol 43988 . 44015) (punctuation 43987 . 43988) (symbol 43982 . 43986) (punctuation 43980 . 43981) (close-paren 43979 . 43980) (symbol 43975 . 43979) (INT 43971 . 43974) (punctuation 43969 . 43970) (symbol 43967 . 43969) (punctuation 43966 . 43967) (symbol 43949 . 43965) (open-paren 43948 . 43949) (symbol 43927 . 43948) (punctuation 43926 . 43927) (symbol 43921 . 43925) (punctuation 43919 . 43920) (close-paren 43918 . 43919) (symbol 43915 . 43918) (punctuation 43914 . 43915) (punctuation 43913 . 43914) (symbol 43908 . 43912) (punctuation 43906 . 43907) (symbol 43902 . 43906) (INT 43898 . 43901) (punctuation 43896 . 43897) (symbol 43894 . 43896) (punctuation 43893 . 43894) (symbol 43876 . 43892) (open-paren 43875 . 43876) (symbol 43847 . 43875) (VOID 43842 . 43846) (punctuation 43840 . 43841) (close-paren 43839 . 43840) (symbol 43836 . 43839) (punctuation 43835 . 43836) (LONG 43830 . 43834) (LONG 43825 . 43829) (punctuation 43791 . 43792) (symbol 43787 . 43791) (punctuation 43786 . 43787) (INT 43782 . 43785) (UNSIGNED 43773 . 43781) (punctuation 43739 . 43740) (symbol 43735 . 43739) (punctuation 43734 . 43735) (punctuation 43733 . 43734) (CHAR 43728 . 43732) (UNSIGNED 43719 . 43727) (punctuation 43685 . 43686) (symbol 43681 . 43685) (INT 43677 . 43680) (punctuation 43675 . 43676) (symbol 43673 . 43675) (punctuation 43672 . 43673) (symbol 43655 . 43671) (open-paren 43654 . 43655) (symbol 43628 . 43654) (VOID 43623 . 43627) (punctuation 43621 . 43622) (close-paren 43620 . 43621) (symbol 43618 . 43620) (punctuation 43617 . 43618) (symbol 43600 . 43616) (open-paren 43599 . 43600) (symbol 43587 . 43599) (INT 43583 . 43586) (punctuation 43581 . 43582) (close-paren 43580 . 43581) (symbol 43578 . 43580) (punctuation 43577 . 43578) (symbol 43560 . 43576) (open-paren 43559 . 43560) (symbol 43536 . 43559) (VOID 43531 . 43535) (punctuation 43529 . 43530) (close-paren 43528 . 43529) (symbol 43521 . 43528) (punctuation 43520 . 43521) (symbol 43515 . 43519) (open-paren 43514 . 43515) (symbol 43494 . 43514) (punctuation 43493 . 43494) (symbol 43476 . 43492) (punctuation 43474 . 43475) (close-paren 43473 . 43474) (symbol 43472 . 43473) (punctuation 43471 . 43472) (symbol 43466 . 43470) (open-paren 43465 . 43466) (symbol 43451 . 43465) (LONG 43446 . 43450) (UNSIGNED 43437 . 43445) (punctuation 43435 . 43436) (close-paren 43434 . 43435) (symbol 43431 . 43434) (punctuation 43430 . 43431) (symbol 43425 . 43429) (punctuation 43423 . 43424) (symbol 43422 . 43423) (punctuation 43421 . 43422) (symbol 43416 . 43420) (open-paren 43415 . 43416) (symbol 43401 . 43415) (INT 43397 . 43400) (punctuation 43395 . 43396) (close-paren 43394 . 43395) (symbol 43389 . 43394) (punctuation 43388 . 43389) (symbol 43383 . 43387) (punctuation 43381 . 43382) (symbol 43378 . 43381) (punctuation 43377 . 43378) (symbol 43372 . 43376) (punctuation 43370 . 43371) (symbol 43369 . 43370) (punctuation 43368 . 43369) (symbol 43363 . 43367) (open-paren 43362 . 43363) (symbol 43351 . 43362) (INT 43347 . 43350) (punctuation 43345 . 43346) (close-paren 43344 . 43345) (symbol 43341 . 43344) (punctuation 43340 . 43341) (symbol 43335 . 43339) (punctuation 43333 . 43334) (symbol 43332 . 43333) (punctuation 43331 . 43332) (symbol 43326 . 43330) (open-paren 43325 . 43326) (symbol 43311 . 43325) (INT 43307 . 43310) (punctuation 43305 . 43306) (close-paren 43304 . 43305) (symbol 43301 . 43304) (punctuation 43300 . 43301) (symbol 43295 . 43299) (punctuation 43293 . 43294) (symbol 43292 . 43293) (punctuation 43291 . 43292) (symbol 43286 . 43290) (open-paren 43285 . 43286) (symbol 43268 . 43285) (punctuation 43267 . 43268) (symbol 43262 . 43266) (punctuation 43260 . 43261) (close-paren 43259 . 43260) (symbol 43257 . 43259) (punctuation 43256 . 43257) (punctuation 43255 . 43256) (symbol 43250 . 43254) (punctuation 43248 . 43249) (symbol 43246 . 43248) (punctuation 43245 . 43246) (punctuation 43244 . 43245) (symbol 43239 . 43243) (punctuation 43237 . 43238) (symbol 43230 . 43237) (punctuation 43229 . 43230) (symbol 43224 . 43228) (open-paren 43223 . 43224) (symbol 43198 . 43223) (VOID 43193 . 43197) (punctuation 43191 . 43192) (close-paren 43190 . 43191) (symbol 43187 . 43190) (INT 43183 . 43186) (punctuation 43181 . 43182) (symbol 43176 . 43181) (INT 43172 . 43175) (punctuation 43170 . 43171) (symbol 43166 . 43170) (punctuation 43165 . 43166) (punctuation 43164 . 43165) (symbol 43159 . 43163) (punctuation 43157 . 43158) (symbol 43150 . 43157) (punctuation 43149 . 43150) (symbol 43144 . 43148) (open-paren 43143 . 43144) (symbol 43122 . 43143) (VOID 43117 . 43121) (punctuation 43115 . 43116) (close-paren 43114 . 43115) (symbol 43111 . 43114) (INT 43107 . 43110) (punctuation 43105 . 43106) (symbol 43104 . 43105) (punctuation 43103 . 43104) (symbol 43098 . 43102) (open-paren 43097 . 43098) (symbol 43082 . 43097) (VOID 43077 . 43081) (punctuation 43053 . 43054) (close-paren 43052 . 43053) (symbol 43049 . 43052) (INT 43045 . 43048) (punctuation 43043 . 43044) (symbol 43036 . 43043) (punctuation 43035 . 43036) (symbol 43030 . 43034) (open-paren 43029 . 43030) (symbol 43015 . 43029) (VOID 43010 . 43014) (punctuation 43008 . 43009) (close-paren 43007 . 43008) (symbol 43000 . 43007) (punctuation 42999 . 43000) (symbol 42994 . 42998) (open-paren 42993 . 42994) (symbol 42982 . 42993) (LONG 42977 . 42981) (UNSIGNED 42968 . 42976) (punctuation 42966 . 42967) (close-paren 42965 . 42966) (symbol 42960 . 42965) (punctuation 42959 . 42960) (symbol 42951 . 42958) (punctuation 42949 . 42950) (symbol 42943 . 42949) (punctuation 42942 . 42943) (punctuation 42941 . 42942) (symbol 42936 . 42940) (punctuation 42934 . 42935) (symbol 42928 . 42934) (punctuation 42927 . 42928) (symbol 42922 . 42926) (open-paren 42921 . 42922) (symbol 42901 . 42921) (INT 42897 . 42900) (punctuation 42895 . 42896) (close-paren 42894 . 42895) (symbol 42892 . 42894) (punctuation 42891 . 42892) (symbol 42875 . 42890) (open-paren 42874 . 42875) (symbol 42857 . 42874) (punctuation 42856 . 42857) (symbol 42851 . 42855) (punctuation 42849 . 42850) (close-paren 42848 . 42849) (symbol 42843 . 42848) (punctuation 42842 . 42843) (symbol 42834 . 42841) (punctuation 42832 . 42833) (symbol 42826 . 42832) (punctuation 42825 . 42826) (punctuation 42824 . 42825) (symbol 42819 . 42823) (punctuation 42817 . 42818) (symbol 42815 . 42817) (punctuation 42814 . 42815) (symbol 42798 . 42813) (open-paren 42797 . 42798) (symbol 42786 . 42797) (INT 42782 . 42785) (punctuation 42780 . 42781) (close-paren 42779 . 42780) (symbol 42777 . 42779) (punctuation 42776 . 42777) (symbol 42760 . 42775) (open-paren 42759 . 42760) (symbol 42737 . 42759) (VOID 42732 . 42736) (punctuation 42730 . 42731) (close-paren 42729 . 42730) (symbol 42722 . 42729) (punctuation 42721 . 42722) (symbol 42716 . 42720) (open-paren 42715 . 42716) (symbol 42696 . 42715) (punctuation 42695 . 42696) (symbol 42679 . 42694) (punctuation 42677 . 42678) (close-paren 42676 . 42677) (symbol 42671 . 42676) (punctuation 42670 . 42671) (symbol 42665 . 42669) (punctuation 42663 . 42664) (symbol 42656 . 42663) (punctuation 42655 . 42656) (symbol 42650 . 42654) (open-paren 42649 . 42650) (symbol 42634 . 42649) (INT 42630 . 42633) (punctuation 42628 . 42629) (close-paren 42627 . 42628) (symbol 42622 . 42627) (punctuation 42621 . 42622) (symbol 42616 . 42620) (punctuation 42614 . 42615) (symbol 42607 . 42614) (punctuation 42606 . 42607) (symbol 42601 . 42605) (open-paren 42600 . 42601) (symbol 42587 . 42600) (INT 42583 . 42586) (punctuation 42581 . 42582) (close-paren 42580 . 42581) (symbol 42575 . 42580) (punctuation 42574 . 42575) (symbol 42569 . 42573) (punctuation 42567 . 42568) (symbol 42560 . 42567) (punctuation 42559 . 42560) (symbol 42554 . 42558) (open-paren 42553 . 42554) (symbol 42543 . 42553) (INT 42539 . 42542) (punctuation 42537 . 42538) (close-paren 42536 . 42537) (symbol 42531 . 42536) (punctuation 42530 . 42531) (symbol 42525 . 42529) (open-paren 42524 . 42525) (symbol 42511 . 42524) (punctuation 42510 . 42511) (symbol 42505 . 42509) (punctuation 42482 . 42483) (close-paren 42481 . 42482) (VOID 42477 . 42481) (open-paren 42476 . 42477) (symbol 42454 . 42476) (VOID 42449 . 42453) (punctuation 42447 . 42448) (close-paren 42446 . 42447) (VOID 42442 . 42446) (open-paren 42441 . 42442) (symbol 42421 . 42441) (VOID 42416 . 42420) (punctuation 42414 . 42415) (close-paren 42413 . 42414) (symbol 42410 . 42413) (punctuation 42409 . 42410) (CHAR 42404 . 42408) (CONST 42398 . 42403) (open-paren 42397 . 42398) (symbol 42394 . 42397) (VOID 42389 . 42393) (punctuation 42387 . 42388) (close-paren 42386 . 42387) (symbol 42382 . 42386) (punctuation 42381 . 42382) (symbol 42376 . 42380) (open-paren 42375 . 42376) (symbol 42362 . 42375) (INT 42358 . 42361) (punctuation 42356 . 42357) (close-paren 42355 . 42356) (VOID 42351 . 42355) (open-paren 42350 . 42351) (symbol 42328 . 42350) (VOID 42323 . 42327) (punctuation 42321 . 42322) (close-paren 42320 . 42321) (open-paren 42319 . 42320) (symbol 42314 . 42319) (VOID 42309 . 42313) (punctuation 42307 . 42308) (close-paren 42306 . 42307) (symbol 42303 . 42306) (punctuation 42302 . 42303) (CHAR 42297 . 42301) (CONST 42291 . 42296) (punctuation 42289 . 42290) (symbol 42284 . 42289) (INT 42280 . 42283) (open-paren 42279 . 42280) (symbol 42260 . 42279) (VOID 42255 . 42259) (punctuation 42253 . 42254) (close-paren 42252 . 42253) (symbol 42249 . 42252) (punctuation 42248 . 42249) (CHAR 42243 . 42247) (CONST 42237 . 42242) (punctuation 42235 . 42236) (symbol 42230 . 42235) (INT 42226 . 42229) (open-paren 42225 . 42226) (symbol 42214 . 42225) (VOID 42209 . 42213) (punctuation 42207 . 42208) (close-paren 42206 . 42207) (punctuation 42205 . 42206) (punctuation 42204 . 42205) (punctuation 42203 . 42204) (punctuation 42201 . 42202) (symbol 42198 . 42201) (punctuation 42197 . 42198) (CHAR 42192 . 42196) (CONST 42186 . 42191) (punctuation 42184 . 42185) (symbol 42179 . 42184) (INT 42175 . 42178) (open-paren 42174 . 42175) (symbol 42166 . 42174) (VOID 42161 . 42165) (punctuation 42159 . 42160) (close-paren 42158 . 42159) (open-paren 42157 . 42158) (symbol 42139 . 42157) (INT 42135 . 42138) (punctuation 42133 . 42134) (close-paren 42132 . 42133) (symbol 42126 . 42132) (INT 42122 . 42125) (punctuation 42120 . 42121) (symbol 42116 . 42120) (INT 42112 . 42115) (punctuation 42110 . 42111) (symbol 42106 . 42110) (punctuation 42105 . 42106) (punctuation 42104 . 42105) (symbol 42099 . 42103) (punctuation 42097 . 42098) (symbol 42093 . 42097) (INT 42089 . 42092) (punctuation 42087 . 42088) (symbol 42084 . 42087) (punctuation 42083 . 42084) (symbol 42070 . 42082) (STRUCT 42063 . 42069) (open-paren 42062 . 42063) (symbol 42049 . 42062) (VOID 42044 . 42048) (punctuation 42042 . 42043) (close-paren 42041 . 42042) (symbol 42036 . 42041) (INT 42032 . 42035) (punctuation 42030 . 42031) (symbol 42026 . 42030) (INT 42022 . 42025) (punctuation 42020 . 42021) (symbol 42016 . 42020) (punctuation 42015 . 42016) (punctuation 42014 . 42015) (symbol 42009 . 42013) (punctuation 42007 . 42008) (symbol 42003 . 42007) (INT 41999 . 42002) (punctuation 41997 . 41998) (symbol 41994 . 41997) (punctuation 41993 . 41994) (symbol 41980 . 41992) (STRUCT 41973 . 41979) (open-paren 41972 . 41973) (symbol 41963 . 41972) (VOID 41958 . 41962) (punctuation 41956 . 41957) (close-paren 41955 . 41956) (symbol 41950 . 41955) (INT 41946 . 41949) (punctuation 41944 . 41945) (symbol 41943 . 41944) (punctuation 41942 . 41943) (symbol 41930 . 41941) (open-paren 41929 . 41930) (symbol 41925 . 41929) (VOID 41920 . 41924) (punctuation 41918 . 41919) (close-paren 41917 . 41918) (symbol 41913 . 41917) (symbol 41909 . 41912) (open-paren 41908 . 41909) (symbol 41885 . 41908) (punctuation 41884 . 41885) (symbol 41871 . 41883) (STRUCT 41864 . 41870) (punctuation 41862 . 41863) (close-paren 41861 . 41862) (symbol 41860 . 41861) (punctuation 41859 . 41860) (CHAR 41854 . 41858) (open-paren 41853 . 41854) (symbol 41831 . 41853) (punctuation 41830 . 41831) (symbol 41817 . 41829) (STRUCT 41810 . 41816) (punctuation 41808 . 41809) (close-paren 41807 . 41808) (symbol 41803 . 41807) (symbol 41799 . 41802) (open-paren 41798 . 41799) (symbol 41785 . 41798) (punctuation 41784 . 41785) (symbol 41771 . 41783) (STRUCT 41764 . 41770) (punctuation 41762 . 41763) (close-paren 41761 . 41762) (VOID 41757 . 41761) (open-paren 41756 . 41757) (symbol 41737 . 41756) (VOID 41732 . 41736) (punctuation 41730 . 41731) (close-paren 41729 . 41730) (symbol 41728 . 41729) (punctuation 41727 . 41728) (symbol 41715 . 41726) (open-paren 41714 . 41715) (symbol 41700 . 41714) (INT 41696 . 41699) (punctuation 41694 . 41695) (close-paren 41693 . 41694) (VOID 41689 . 41693) (open-paren 41688 . 41689) (symbol 41670 . 41688) (INT 41666 . 41669) (punctuation 41642 . 41643) (close-paren 41641 . 41642) (symbol 41633 . 41641) (INT 41629 . 41632) (punctuation 41627 . 41628) (symbol 41623 . 41627) (punctuation 41622 . 41623) (symbol 41617 . 41621) (open-paren 41616 . 41617) (symbol 41605 . 41616) (VOID 41600 . 41604) (punctuation 41598 . 41599) (close-paren 41597 . 41598) (symbol 41593 . 41597) (punctuation 41592 . 41593) (symbol 41587 . 41591) (open-paren 41586 . 41587) (symbol 41576 . 41586) (INT 41572 . 41575) (UNSIGNED 41563 . 41571) (punctuation 41561 . 41562) (close-paren 41560 . 41561) (symbol 41556 . 41560) (punctuation 41555 . 41556) (punctuation 41554 . 41555) (CHAR 41549 . 41553) (UNSIGNED 41540 . 41548) (punctuation 41538 . 41539) (symbol 41534 . 41538) (punctuation 41533 . 41534) (punctuation 41532 . 41533) (CHAR 41527 . 41531) (UNSIGNED 41518 . 41526) (punctuation 41516 . 41517) (symbol 41514 . 41516) (punctuation 41513 . 41514) (CHAR 41508 . 41512) (UNSIGNED 41499 . 41507) (open-paren 41498 . 41499) (symbol 41491 . 41498) (VOID 41486 . 41490) (punctuation 41484 . 41485) (close-paren 41483 . 41484) (symbol 41479 . 41483) (punctuation 41478 . 41479) (punctuation 41477 . 41478) (CHAR 41472 . 41476) (UNSIGNED 41463 . 41471) (punctuation 41461 . 41462) (symbol 41457 . 41461) (punctuation 41456 . 41457) (punctuation 41455 . 41456) (CHAR 41450 . 41454) (UNSIGNED 41441 . 41449) (punctuation 41439 . 41440) (symbol 41437 . 41439) (punctuation 41436 . 41437) (CHAR 41431 . 41435) (UNSIGNED 41422 . 41430) (open-paren 41421 . 41422) (symbol 41414 . 41421) (VOID 41409 . 41413) (punctuation 41407 . 41408) (close-paren 41406 . 41407) (symbol 41402 . 41406) (punctuation 41401 . 41402) (CHAR 41396 . 41400) (UNSIGNED 41387 . 41395) (open-paren 41386 . 41387) (symbol 41375 . 41386) (DOUBLE 41368 . 41374) (punctuation 41366 . 41367) (close-paren 41365 . 41366) (symbol 41360 . 41365) (symbol 41349 . 41359) (punctuation 41347 . 41348) (symbol 41344 . 41347) (punctuation 41343 . 41344) (symbol 41333 . 41342) (open-paren 41332 . 41333) (symbol 41317 . 41332) (punctuation 41316 . 41317) (symbol 41302 . 41315) (punctuation 41300 . 41301) (close-paren 41299 . 41300) (symbol 41296 . 41299) (punctuation 41295 . 41296) (symbol 41290 . 41294) (punctuation 41288 . 41289) (symbol 41283 . 41288) (DOUBLE 41276 . 41282) (punctuation 41274 . 41275) (symbol 41271 . 41274) (punctuation 41270 . 41271) (symbol 41260 . 41269) (open-paren 41259 . 41260) (symbol 41250 . 41259) (INT 41246 . 41249) (punctuation 41244 . 41245) (close-paren 41243 . 41244) (symbol 41238 . 41243) (DOUBLE 41231 . 41237) (punctuation 41229 . 41230) (symbol 41226 . 41229) (punctuation 41225 . 41226) (symbol 41220 . 41224) (punctuation 41218 . 41219) (symbol 41216 . 41218) (punctuation 41215 . 41216) (CHAR 41210 . 41214) (UNSIGNED 41201 . 41209) (open-paren 41200 . 41201) (symbol 41191 . 41200) (punctuation 41190 . 41191) (CHAR 41185 . 41189) (UNSIGNED 41176 . 41184) (punctuation 41174 . 41175) (close-paren 41173 . 41174) (symbol 41170 . 41173) (punctuation 41169 . 41170) (symbol 41164 . 41168) (punctuation 41162 . 41163) (symbol 41157 . 41162) (DOUBLE 41150 . 41156) (punctuation 41148 . 41149) (symbol 41145 . 41148) (punctuation 41144 . 41145) (symbol 41134 . 41143) (open-paren 41133 . 41134) (symbol 41124 . 41133) (punctuation 41123 . 41124) (symbol 41109 . 41122) (punctuation 41107 . 41108) (close-paren 41106 . 41107) (symbol 41103 . 41106) (punctuation 41102 . 41103) (symbol 41092 . 41101) (open-paren 41091 . 41092) (symbol 41084 . 41091) (VOID 41079 . 41083) (punctuation 41077 . 41078) (close-paren 41076 . 41077) (VOID 41072 . 41076) (open-paren 41071 . 41072) (symbol 41062 . 41071) (punctuation 41061 . 41062) (symbol 41051 . 41060) (close-paren 41036 . 41037) (open-paren 40959 . 40960) (STRUCT 40952 . 40958) (TYPEDEF 40944 . 40951) (punctuation 40857 . 40858) (close-paren 40856 . 40857) (VOID 40852 . 40856) (open-paren 40851 . 40852) (symbol 40831 . 40851) (LONG 40826 . 40830) (UNSIGNED 40817 . 40825) (punctuation 40815 . 40816) (close-paren 40814 . 40815) (VOID 40810 . 40814) (open-paren 40809 . 40810) (symbol 40788 . 40809) (VOID 40783 . 40787) (punctuation 40781 . 40782) (close-paren 40780 . 40781) (symbol 40772 . 40780) (INT 40768 . 40771) (punctuation 40766 . 40767) (symbol 40758 . 40766) (INT 40754 . 40757) (open-paren 40753 . 40754) (symbol 40725 . 40753) (VOID 40720 . 40724) (punctuation 40718 . 40719) (close-paren 40717 . 40718) (VOID 40713 . 40717) (open-paren 40712 . 40713) (symbol 40697 . 40712) (INT 40693 . 40696) (punctuation 40691 . 40692) (close-paren 40690 . 40691) (VOID 40686 . 40690) (open-paren 40685 . 40686) (symbol 40671 . 40685) (VOID 40666 . 40670) (punctuation 40664 . 40665) (close-paren 40663 . 40664) (symbol 40655 . 40663) (punctuation 40654 . 40655) (CHAR 40649 . 40653) (open-paren 40648 . 40649) (symbol 40630 . 40648) (INT 40626 . 40629) (punctuation 40624 . 40625) (close-paren 40623 . 40624) (VOID 40619 . 40623) (open-paren 40618 . 40619) (symbol 40587 . 40618) (INT 40583 . 40586) (punctuation 40581 . 40582) (close-paren 40580 . 40581) (symbol 40572 . 40580) (symbol 40566 . 40571) (open-paren 40565 . 40566) (symbol 40548 . 40565) (VOID 40543 . 40547) (punctuation 40541 . 40542) (close-paren 40540 . 40541) (symbol 40536 . 40540) (INT 40532 . 40535) (punctuation 40530 . 40531) (symbol 40526 . 40530) (punctuation 40525 . 40526) (punctuation 40524 . 40525) (symbol 40519 . 40523) (punctuation 40517 . 40518) (symbol 40511 . 40517) (INT 40507 . 40510) (punctuation 40505 . 40506) (symbol 40502 . 40505) (punctuation 40501 . 40502) (symbol 40488 . 40500) (STRUCT 40481 . 40487) (open-paren 40480 . 40481) (symbol 40462 . 40480) (VOID 40457 . 40461) (punctuation 40455 . 40456) (close-paren 40454 . 40455) (symbol 40449 . 40454) (INT 40445 . 40448) (open-paren 40444 . 40445) (symbol 40425 . 40444) (VOID 40420 . 40424) (punctuation 40355 . 40356) (close-paren 40354 . 40355) (VOID 40350 . 40354) (open-paren 40349 . 40350) (symbol 40338 . 40349) (VOID 40333 . 40337) (punctuation 40331 . 40332) (close-paren 40330 . 40331) (symbol 40327 . 40330) (symbol 40321 . 40326) (open-paren 40320 . 40321) (symbol 40305 . 40320) (VOID 40300 . 40304) (punctuation 40298 . 40299) (close-paren 40297 . 40298) (symbol 40295 . 40297) (punctuation 40294 . 40295) (symbol 40289 . 40293) (open-paren 40288 . 40289) (symbol 40276 . 40288) (VOID 40271 . 40275) (punctuation 40232 . 40233) (close-paren 40231 . 40232) (VOID 40227 . 40231) (open-paren 40226 . 40227) (symbol 40211 . 40226) (VOID 40206 . 40210) (punctuation 40204 . 40205) (close-paren 40203 . 40204) (symbol 40194 . 40203) (INT 40190 . 40193) (open-paren 40189 . 40190) (symbol 40164 . 40189) (VOID 40159 . 40163) (punctuation 40157 . 40158) (close-paren 40156 . 40157) (symbol 40152 . 40156) (INT 40148 . 40151) (punctuation 40146 . 40147) (symbol 40142 . 40146) (punctuation 40141 . 40142) (punctuation 40140 . 40141) (symbol 40135 . 40139) (punctuation 40133 . 40134) (symbol 40127 . 40133) (INT 40123 . 40126) (punctuation 40121 . 40122) (symbol 40113 . 40121) (punctuation 40112 . 40113) (symbol 40107 . 40111) (punctuation 40105 . 40106) (symbol 40104 . 40105) (punctuation 40103 . 40104) (symbol 40091 . 40102) (open-paren 40090 . 40091) (symbol 40067 . 40090) (VOID 40062 . 40066) (punctuation 40060 . 40061) (close-paren 40059 . 40060) (symbol 40055 . 40059) (INT 40051 . 40054) (punctuation 40049 . 40050) (symbol 40045 . 40049) (punctuation 40044 . 40045) (punctuation 40043 . 40044) (symbol 40038 . 40042) (punctuation 40036 . 40037) (symbol 40030 . 40036) (INT 40026 . 40029) (punctuation 40024 . 40025) (symbol 40018 . 40024) (punctuation 40017 . 40018) (symbol 40012 . 40016) (open-paren 40011 . 40012) (symbol 39990 . 40011) (VOID 39985 . 39989) (punctuation 39964 . 39965) (close-paren 39963 . 39964) (symbol 39956 . 39963) (LONG 39951 . 39955) (LONG 39946 . 39950) (punctuation 39944 . 39945) (symbol 39940 . 39944) (symbol 39932 . 39939) (punctuation 39930 . 39931) (symbol 39927 . 39930) (punctuation 39926 . 39927) (CHAR 39921 . 39925) (punctuation 39919 . 39920) (symbol 39917 . 39919) (INT 39913 . 39916) (open-paren 39912 . 39913) (symbol 39900 . 39912) (symbol 39892 . 39899) (punctuation 39890 . 39891) (close-paren 39889 . 39890) (symbol 39882 . 39889) (LONG 39877 . 39881) (LONG 39872 . 39876) (punctuation 39870 . 39871) (symbol 39866 . 39870) (symbol 39858 . 39865) (punctuation 39856 . 39857) (symbol 39853 . 39856) (punctuation 39852 . 39853) (CHAR 39847 . 39851) (punctuation 39845 . 39846) (symbol 39843 . 39845) (INT 39839 . 39842) (open-paren 39838 . 39839) (symbol 39830 . 39838) (symbol 39822 . 39829) (punctuation 39820 . 39821) (close-paren 39819 . 39820) (symbol 39812 . 39819) (LONG 39807 . 39811) (LONG 39802 . 39806) (punctuation 39800 . 39801) (symbol 39796 . 39800) (symbol 39788 . 39795) (punctuation 39786 . 39787) (symbol 39783 . 39786) (punctuation 39782 . 39783) (CHAR 39777 . 39781) (punctuation 39775 . 39776) (symbol 39773 . 39775) (INT 39769 . 39772) (open-paren 39768 . 39769) (symbol 39759 . 39768) (symbol 39751 . 39758) (punctuation 39713 . 39714) (close-paren 39712 . 39713) (symbol 39711 . 39712) (punctuation 39710 . 39711) (symbol 39705 . 39709) (open-paren 39704 . 39705) (symbol 39682 . 39704) (LONG 39677 . 39681) (UNSIGNED 39668 . 39676) (punctuation 39666 . 39667) (close-paren 39665 . 39666) (symbol 39664 . 39665) (punctuation 39663 . 39664) (symbol 39658 . 39662) (punctuation 39656 . 39657) (symbol 39655 . 39656) (punctuation 39654 . 39655) (symbol 39649 . 39653) (open-paren 39648 . 39649) (symbol 39630 . 39648) (INT 39626 . 39629) (punctuation 39624 . 39625) (close-paren 39623 . 39624) (symbol 39622 . 39623) (punctuation 39621 . 39622) (symbol 39616 . 39620) (punctuation 39614 . 39615) (symbol 39613 . 39614) (punctuation 39612 . 39613) (symbol 39607 . 39611) (open-paren 39606 . 39607) (symbol 39586 . 39606) (INT 39582 . 39585) (punctuation 39580 . 39581) (close-paren 39579 . 39580) (symbol 39571 . 39579) (INT 39567 . 39570) (open-paren 39566 . 39567) (symbol 39555 . 39566) (punctuation 39554 . 39555) (CHAR 39549 . 39553) (punctuation 39547 . 39548) (close-paren 39546 . 39547) (symbol 39543 . 39546) (punctuation 39542 . 39543) (CHAR 39537 . 39541) (CONST 39531 . 39536) (punctuation 39529 . 39530) (symbol 39523 . 39529) (punctuation 39522 . 39523) (DOUBLE 39515 . 39521) (LONG 39510 . 39514) (punctuation 39508 . 39509) (symbol 39507 . 39508) (punctuation 39506 . 39507) (symbol 39501 . 39505) (punctuation 39499 . 39500) (symbol 39498 . 39499) (punctuation 39497 . 39498) (symbol 39485 . 39496) (open-paren 39484 . 39485) (symbol 39454 . 39484) (INT 39450 . 39453) (punctuation 39448 . 39449) (close-paren 39447 . 39448) (symbol 39441 . 39447) (punctuation 39440 . 39441) (DOUBLE 39433 . 39439) (LONG 39428 . 39432) (punctuation 39426 . 39427) (symbol 39425 . 39426) (punctuation 39424 . 39425) (symbol 39419 . 39423) (open-paren 39418 . 39419) (symbol 39395 . 39418) (INT 39391 . 39394) (punctuation 39389 . 39390) (close-paren 39388 . 39389) (symbol 39382 . 39388) (punctuation 39381 . 39382) (LONG 39376 . 39380) (LONG 39371 . 39375) (punctuation 39369 . 39370) (symbol 39368 . 39369) (punctuation 39367 . 39368) (symbol 39362 . 39366) (open-paren 39361 . 39362) (symbol 39340 . 39361) (INT 39336 . 39339) (punctuation 39334 . 39335) (close-paren 39333 . 39334) (symbol 39330 . 39333) (punctuation 39329 . 39330) (CHAR 39324 . 39328) (CONST 39318 . 39323) (punctuation 39316 . 39317) (symbol 39310 . 39316) (punctuation 39309 . 39310) (DOUBLE 39302 . 39308) (punctuation 39300 . 39301) (symbol 39299 . 39300) (punctuation 39298 . 39299) (symbol 39293 . 39297) (punctuation 39291 . 39292) (symbol 39290 . 39291) (punctuation 39289 . 39290) (symbol 39277 . 39288) (open-paren 39276 . 39277) (symbol 39250 . 39276) (INT 39246 . 39249) (punctuation 39244 . 39245) (close-paren 39243 . 39244) (symbol 39240 . 39243) (punctuation 39239 . 39240) (CHAR 39234 . 39238) (CONST 39228 . 39233) (punctuation 39226 . 39227) (symbol 39220 . 39226) (punctuation 39219 . 39220) (LONG 39214 . 39218) (LONG 39209 . 39213) (punctuation 39207 . 39208) (symbol 39206 . 39207) (punctuation 39205 . 39206) (symbol 39200 . 39204) (punctuation 39198 . 39199) (symbol 39197 . 39198) (punctuation 39196 . 39197) (symbol 39184 . 39195) (open-paren 39183 . 39184) (symbol 39155 . 39183) (INT 39151 . 39154) (punctuation 39149 . 39150) (close-paren 39148 . 39149) (symbol 39144 . 39148) (INT 39140 . 39143) (punctuation 39138 . 39139) (symbol 39137 . 39138) (punctuation 39136 . 39137) (symbol 39131 . 39135) (punctuation 39129 . 39130) (symbol 39128 . 39129) (punctuation 39127 . 39128) (symbol 39115 . 39126) (open-paren 39114 . 39115) (symbol 39105 . 39114) (INT 39101 . 39104) (punctuation 39099 . 39100) (close-paren 39098 . 39099) (symbol 39095 . 39098) (punctuation 39094 . 39095) (CHAR 39089 . 39093) (CONST 39083 . 39088) (punctuation 39081 . 39082) (symbol 39075 . 39081) (punctuation 39074 . 39075) (LONG 39069 . 39073) (punctuation 39067 . 39068) (symbol 39066 . 39067) (punctuation 39065 . 39066) (symbol 39060 . 39064) (punctuation 39058 . 39059) (symbol 39057 . 39058) (punctuation 39056 . 39057) (symbol 39044 . 39055) (open-paren 39043 . 39044) (symbol 39019 . 39043) (INT 39015 . 39018) (punctuation 39013 . 39014) (close-paren 39012 . 39013) (VOID 39008 . 39012) (open-paren 39007 . 39008) (symbol 38984 . 39007) (punctuation 38983 . 38984) (symbol 38978 . 38982) (punctuation 38976 . 38977) (close-paren 38975 . 38976) (VOID 38971 . 38975) (open-paren 38970 . 38971) (symbol 38954 . 38970) (punctuation 38953 . 38954) (symbol 38948 . 38952) (punctuation 38946 . 38947) (close-paren 38945 . 38946) (VOID 38941 . 38945) (open-paren 38940 . 38941) (symbol 38924 . 38940) (punctuation 38923 . 38924) (symbol 38918 . 38922) (punctuation 38916 . 38917) (close-paren 38915 . 38916) (VOID 38911 . 38915) (open-paren 38910 . 38911) (symbol 38892 . 38910) (punctuation 38891 . 38892) (symbol 38886 . 38890) (punctuation 38884 . 38885) (close-paren 38883 . 38884) (VOID 38879 . 38883) (open-paren 38878 . 38879) (symbol 38863 . 38878) (punctuation 38862 . 38863) (symbol 38857 . 38861) (punctuation 38855 . 38856) (close-paren 38854 . 38855) (VOID 38850 . 38854) (open-paren 38849 . 38850) (symbol 38830 . 38849) (punctuation 38829 . 38830) (symbol 38824 . 38828) (punctuation 38822 . 38823) (close-paren 38821 . 38822) (VOID 38817 . 38821) (open-paren 38816 . 38817) (symbol 38800 . 38816) (punctuation 38799 . 38800) (symbol 38794 . 38798) (punctuation 38792 . 38793) (close-paren 38791 . 38792) (symbol 38786 . 38791) (DOUBLE 38779 . 38785) (LONG 38774 . 38778) (open-paren 38773 . 38774) (symbol 38741 . 38773) (punctuation 38740 . 38741) (symbol 38735 . 38739) (punctuation 38733 . 38734) (close-paren 38732 . 38733) (symbol 38727 . 38732) (LONG 38722 . 38726) (LONG 38717 . 38721) (open-paren 38716 . 38717) (symbol 38686 . 38716) (punctuation 38685 . 38686) (symbol 38680 . 38684) (punctuation 38678 . 38679) (close-paren 38677 . 38678) (symbol 38676 . 38677) (punctuation 38675 . 38676) (symbol 38670 . 38674) (open-paren 38669 . 38670) (symbol 38654 . 38669) (symbol 38647 . 38653) (punctuation 38645 . 38646) (close-paren 38644 . 38645) (symbol 38643 . 38644) (punctuation 38642 . 38643) (symbol 38637 . 38641) (open-paren 38636 . 38637) (symbol 38620 . 38636) (punctuation 38619 . 38620) (symbol 38614 . 38618) (punctuation 38612 . 38613) (close-paren 38611 . 38612) (symbol 38610 . 38611) (punctuation 38609 . 38610) (symbol 38604 . 38608) (open-paren 38603 . 38604) (symbol 38586 . 38603) (punctuation 38585 . 38586) (symbol 38580 . 38584) (punctuation 38578 . 38579) (close-paren 38577 . 38578) (symbol 38569 . 38577) (punctuation 38568 . 38569) (LONG 38563 . 38567) (LONG 38558 . 38562) (punctuation 38556 . 38557) (symbol 38555 . 38556) (punctuation 38554 . 38555) (symbol 38549 . 38553) (open-paren 38548 . 38549) (symbol 38517 . 38548) (INT 38513 . 38516) (punctuation 38511 . 38512) (close-paren 38510 . 38511) (symbol 38509 . 38510) (punctuation 38508 . 38509) (symbol 38503 . 38507) (open-paren 38502 . 38503) (symbol 38487 . 38502) (punctuation 38486 . 38487) (symbol 38481 . 38485) (punctuation 38479 . 38480) (close-paren 38478 . 38479) (symbol 38475 . 38478) (symbol 38468 . 38474) (punctuation 38466 . 38467) (symbol 38463 . 38466) (punctuation 38462 . 38463) (CHAR 38457 . 38461) (open-paren 38456 . 38457) (symbol 38438 . 38456) (punctuation 38437 . 38438) (symbol 38432 . 38436) (punctuation 38430 . 38431) (close-paren 38429 . 38430) (symbol 38426 . 38429) (punctuation 38425 . 38426) (VOID 38420 . 38424) (punctuation 38418 . 38419) (symbol 38414 . 38418) (INT 38410 . 38413) (open-paren 38409 . 38410) (symbol 38397 . 38409) (punctuation 38396 . 38397) (symbol 38391 . 38395) (punctuation 38389 . 38390) (close-paren 38388 . 38389) (symbol 38387 . 38388) (punctuation 38386 . 38387) (symbol 38381 . 38385) (open-paren 38380 . 38381) (symbol 38366 . 38380) (VOID 38361 . 38365) (punctuation 38359 . 38360) (close-paren 38358 . 38359) (symbol 38357 . 38358) (punctuation 38356 . 38357) (symbol 38351 . 38355) (open-paren 38350 . 38351) (symbol 38336 . 38350) (VOID 38331 . 38335) (punctuation 38329 . 38330) (close-paren 38328 . 38329) (symbol 38327 . 38328) (punctuation 38326 . 38327) (symbol 38321 . 38325) (open-paren 38320 . 38321) (symbol 38307 . 38320) (VOID 38302 . 38306) (punctuation 38300 . 38301) (close-paren 38299 . 38300) (symbol 38298 . 38299) (punctuation 38297 . 38298) (symbol 38292 . 38296) (open-paren 38291 . 38292) (symbol 38277 . 38291) (VOID 38272 . 38276) (punctuation 38270 . 38271) (close-paren 38269 . 38270) (symbol 38268 . 38269) (punctuation 38267 . 38268) (symbol 38262 . 38266) (open-paren 38261 . 38262) (symbol 38245 . 38261) (VOID 38240 . 38244) (punctuation 38238 . 38239) (close-paren 38237 . 38238) (symbol 38234 . 38237) (punctuation 38233 . 38234) (symbol 38228 . 38232) (open-paren 38227 . 38228) (symbol 38214 . 38227) (punctuation 38213 . 38214) (symbol 38208 . 38212) (punctuation 38206 . 38207) (close-paren 38205 . 38206) (symbol 38204 . 38205) (punctuation 38203 . 38204) (symbol 38198 . 38202) (open-paren 38197 . 38198) (symbol 38185 . 38197) (VOID 38180 . 38184) (punctuation 38178 . 38179) (close-paren 38177 . 38178) (symbol 38176 . 38177) (punctuation 38175 . 38176) (VOID 38170 . 38174) (open-paren 38169 . 38170) (symbol 38157 . 38169) (VOID 38152 . 38156) (punctuation 38115 . 38116) (close-paren 38114 . 38115) (symbol 38113 . 38114) (punctuation 38112 . 38113) (symbol 38100 . 38111) (open-paren 38099 . 38100) (symbol 38084 . 38099) (VOID 38079 . 38083) (punctuation 38077 . 38078) (close-paren 38076 . 38077) (symbol 38075 . 38076) (punctuation 38074 . 38075) (symbol 38062 . 38073) (open-paren 38061 . 38062) (symbol 38043 . 38061) (VOID 38038 . 38042) (punctuation 38036 . 38037) (close-paren 38035 . 38036) (symbol 38031 . 38035) (INT 38027 . 38030) (open-paren 38026 . 38027) (symbol 38003 . 38026) (VOID 37998 . 38002) (punctuation 37996 . 37997) (close-paren 37995 . 37996) (symbol 37992 . 37995) (punctuation 37991 . 37992) (symbol 37986 . 37990) (punctuation 37984 . 37985) (symbol 37982 . 37984) (punctuation 37981 . 37982) (symbol 37973 . 37980) (open-paren 37972 . 37973) (symbol 37957 . 37972) (VOID 37952 . 37956) (punctuation 37950 . 37951) (close-paren 37949 . 37950) (symbol 37948 . 37949) (punctuation 37947 . 37948) (symbol 37935 . 37946) (open-paren 37934 . 37935) (symbol 37917 . 37934) (VOID 37912 . 37916) (punctuation 37910 . 37911) (close-paren 37909 . 37910) (symbol 37908 . 37909) (punctuation 37907 . 37908) (symbol 37895 . 37906) (open-paren 37894 . 37895) (symbol 37874 . 37894) (VOID 37869 . 37873) (punctuation 37867 . 37868) (close-paren 37866 . 37867) (symbol 37865 . 37866) (punctuation 37864 . 37865) (symbol 37852 . 37863) (open-paren 37851 . 37852) (symbol 37831 . 37851) (VOID 37826 . 37830) (punctuation 37824 . 37825) (close-paren 37823 . 37824) (symbol 37822 . 37823) (punctuation 37821 . 37822) (symbol 37809 . 37820) (open-paren 37808 . 37809) (symbol 37794 . 37808) (VOID 37789 . 37793) (punctuation 37760 . 37761) (close-paren 37759 . 37760) (symbol 37754 . 37759) (INT 37750 . 37753) (punctuation 37748 . 37749) (symbol 37747 . 37748) (punctuation 37746 . 37747) (symbol 37734 . 37745) (open-paren 37733 . 37734) (symbol 37716 . 37733) (VOID 37711 . 37715) (punctuation 37709 . 37710) (close-paren 37708 . 37709) (VOID 37704 . 37708) (open-paren 37703 . 37704) (symbol 37676 . 37703) (VOID 37671 . 37675) (punctuation 37669 . 37670) (close-paren 37668 . 37669) (symbol 37667 . 37668) (punctuation 37666 . 37667) (symbol 37654 . 37665) (open-paren 37653 . 37654) (symbol 37629 . 37653) (VOID 37624 . 37628) (punctuation 37622 . 37623) (close-paren 37621 . 37622) (symbol 37618 . 37621) (INT 37614 . 37617) (punctuation 37612 . 37613) (symbol 37605 . 37612) (punctuation 37604 . 37605) (symbol 37599 . 37603) (open-paren 37598 . 37599) (symbol 37583 . 37598) (VOID 37578 . 37582) (punctuation 37576 . 37577) (close-paren 37575 . 37576) (symbol 37570 . 37575) (punctuation 37569 . 37570) (symbol 37555 . 37568) (open-paren 37554 . 37555) (symbol 37540 . 37554) (VOID 37535 . 37539) (punctuation 37533 . 37534) (close-paren 37532 . 37533) (symbol 37531 . 37532) (punctuation 37530 . 37531) (symbol 37525 . 37529) (punctuation 37523 . 37524) (symbol 37518 . 37523) (punctuation 37517 . 37518) (symbol 37503 . 37516) (open-paren 37502 . 37503) (symbol 37489 . 37502) (INT 37485 . 37488) (punctuation 37483 . 37484) (close-paren 37482 . 37483) (symbol 37477 . 37482) (INT 37473 . 37476) (punctuation 37471 . 37472) (symbol 37466 . 37471) (punctuation 37465 . 37466) (symbol 37460 . 37464) (punctuation 37458 . 37459) (symbol 37453 . 37458) (punctuation 37452 . 37453) (symbol 37438 . 37451) (open-paren 37437 . 37438) (symbol 37423 . 37437) (VOID 37418 . 37422) (punctuation 37416 . 37417) (close-paren 37415 . 37416) (symbol 37410 . 37415) (punctuation 37409 . 37410) (symbol 37395 . 37408) (open-paren 37394 . 37395) (symbol 37383 . 37394) (punctuation 37382 . 37383) (symbol 37377 . 37381) (punctuation 37375 . 37376) (close-paren 37374 . 37375) (symbol 37369 . 37374) (punctuation 37368 . 37369) (symbol 37354 . 37367) (punctuation 37352 . 37353) (symbol 37350 . 37352) (punctuation 37349 . 37350) (symbol 37332 . 37348) (open-paren 37331 . 37332) (symbol 37319 . 37331) (INT 37315 . 37318) (punctuation 37313 . 37314) (close-paren 37312 . 37313) (symbol 37310 . 37312) (punctuation 37309 . 37310) (symbol 37292 . 37308) (open-paren 37291 . 37292) (symbol 37268 . 37291) (VOID 37263 . 37267) (punctuation 37261 . 37262) (close-paren 37260 . 37261) (symbol 37251 . 37260) (CHAR 37246 . 37250) (UNSIGNED 37237 . 37245) (punctuation 37235 . 37236) (symbol 37230 . 37235) (LONG 37225 . 37229) (punctuation 37223 . 37224) (symbol 37216 . 37223) (punctuation 37215 . 37216) (symbol 37210 . 37214) (open-paren 37209 . 37210) (symbol 37189 . 37209) (punctuation 37188 . 37189) (symbol 37171 . 37187) (punctuation 37169 . 37170) (close-paren 37168 . 37169) (symbol 37161 . 37168) (punctuation 37160 . 37161) (symbol 37155 . 37159) (open-paren 37154 . 37155) (symbol 37140 . 37154) (LONG 37135 . 37139) (UNSIGNED 37126 . 37134) (punctuation 37124 . 37125) (close-paren 37123 . 37124) (symbol 37118 . 37123) (INT 37114 . 37117) (punctuation 37112 . 37113) (symbol 37105 . 37112) (punctuation 37104 . 37105) (symbol 37099 . 37103) (open-paren 37098 . 37099) (symbol 37087 . 37098) (punctuation 37086 . 37087) (symbol 37081 . 37085) (punctuation 37079 . 37080) (close-paren 37078 . 37079) (symbol 37073 . 37078) (INT 37069 . 37072) (punctuation 37067 . 37068) (symbol 37062 . 37067) (punctuation 37061 . 37062) (symbol 37056 . 37060) (punctuation 37054 . 37055) (symbol 37047 . 37054) (punctuation 37046 . 37047) (symbol 37041 . 37045) (open-paren 37040 . 37041) (symbol 37028 . 37040) (VOID 37023 . 37027) (punctuation 37021 . 37022) (close-paren 37020 . 37021) (symbol 37015 . 37020) (punctuation 37014 . 37015) (symbol 37009 . 37013) (punctuation 37007 . 37008) (symbol 37000 . 37007) (punctuation 36999 . 37000) (symbol 36994 . 36998) (open-paren 36993 . 36994) (symbol 36972 . 36993) (VOID 36967 . 36971) (punctuation 36801 . 36802) (close-paren 36758 . 36759) (punctuation 36757 . 36758) (punctuation 36756 . 36757) (punctuation 36755 . 36756) (punctuation 36753 . 36754) (symbol 36750 . 36753) (punctuation 36749 . 36750) (CHAR 36744 . 36748) (CONST 36738 . 36743) (punctuation 36736 . 36737) (symbol 36735 . 36736) (punctuation 36734 . 36735) (symbol 36722 . 36733) (open-paren 36721 . 36722) (symbol 36701 . 36721) (VOID 36696 . 36700) (punctuation 36694 . 36695) (close-paren 36651 . 36652) (punctuation 36650 . 36651) (punctuation 36649 . 36650) (punctuation 36648 . 36649) (punctuation 36646 . 36647) (symbol 36643 . 36646) (punctuation 36642 . 36643) (CHAR 36637 . 36641) (CONST 36631 . 36636) (punctuation 36629 . 36630) (symbol 36628 . 36629) (punctuation 36627 . 36628) (symbol 36615 . 36626) (open-paren 36614 . 36615) (symbol 36595 . 36614) (VOID 36590 . 36594) (punctuation 36571 . 36572) (close-paren 36570 . 36571) (VOID 36566 . 36570) (open-paren 36565 . 36566) (symbol 36549 . 36565) (VOID 36544 . 36548) (punctuation 36542 . 36543) (close-paren 36541 . 36542) (VOID 36537 . 36541) (open-paren 36536 . 36537) (symbol 36512 . 36536) (VOID 36507 . 36511) (punctuation 36505 . 36506) (close-paren 36504 . 36505) (CLASS 36499 . 36504) (INT 36495 . 36498) (open-paren 36494 . 36495) (symbol 36471 . 36494) (punctuation 36470 . 36471) (CHAR 36465 . 36469) (punctuation 36463 . 36464) (close-paren 36462 . 36463) (symbol 36458 . 36462) (punctuation 36457 . 36458) (CHAR 36452 . 36456) (open-paren 36451 . 36452) (symbol 36426 . 36451) (INT 36422 . 36425) (punctuation 36420 . 36421) (close-paren 36419 . 36420) (symbol 36418 . 36419) (punctuation 36417 . 36418) (symbol 36405 . 36416) (open-paren 36404 . 36405) (symbol 36362 . 36404) (VOID 36357 . 36361) (punctuation 36355 . 36356) (close-paren 36354 . 36355) (VOID 36350 . 36354) (open-paren 36349 . 36350) (symbol 36322 . 36349) (VOID 36317 . 36321) (punctuation 36315 . 36316) (close-paren 36314 . 36315) (symbol 36313 . 36314) (punctuation 36312 . 36313) (symbol 36300 . 36311) (open-paren 36299 . 36300) (symbol 36267 . 36299) (LONG 36262 . 36266) (UNSIGNED 36253 . 36261) (punctuation 36251 . 36252) (close-paren 36250 . 36251) (symbol 36244 . 36250) (punctuation 36243 . 36244) (symbol 36238 . 36242) (punctuation 36236 . 36237) (symbol 36235 . 36236) (INT 36231 . 36234) (punctuation 36229 . 36230) (symbol 36228 . 36229) (punctuation 36227 . 36228) (symbol 36215 . 36226) (open-paren 36214 . 36215) (symbol 36186 . 36214) (VOID 36181 . 36185) (punctuation 36179 . 36180) (close-paren 36178 . 36179) (punctuation 36177 . 36178) (punctuation 36176 . 36177) (punctuation 36175 . 36176) (punctuation 36173 . 36174) (symbol 36169 . 36173) (INT 36165 . 36168) (punctuation 36163 . 36164) (symbol 36162 . 36163) (punctuation 36161 . 36162) (symbol 36149 . 36160) (open-paren 36148 . 36149) (symbol 36122 . 36148) (VOID 36117 . 36121) (punctuation 36115 . 36116) (close-paren 36114 . 36115) (VOID 36110 . 36114) (open-paren 36109 . 36110) (symbol 36086 . 36109) (symbol 36082 . 36085) (punctuation 36080 . 36081) (close-paren 36079 . 36080) (symbol 36073 . 36079) (punctuation 36072 . 36073) (symbol 36060 . 36071) (open-paren 36059 . 36060) (symbol 36040 . 36059) (symbol 36036 . 36039) (punctuation 36034 . 36035) (close-paren 36033 . 36034) (symbol 36013 . 36033) (punctuation 36012 . 36013) (LONG 36007 . 36011) (UNSIGNED 35998 . 36006) (punctuation 35970 . 35971) (symbol 35951 . 35970) (punctuation 35950 . 35951) (LONG 35945 . 35949) (UNSIGNED 35936 . 35944) (open-paren 35935 . 35936) (symbol 35915 . 35935) (VOID 35910 . 35914) (punctuation 35908 . 35909) (close-paren 35907 . 35908) (symbol 35906 . 35907) (punctuation 35905 . 35906) (VOID 35900 . 35904) (open-paren 35899 . 35900) (symbol 35880 . 35899) (punctuation 35879 . 35880) (VOID 35874 . 35878) (punctuation 35872 . 35873) (close-paren 35871 . 35872) (symbol 35868 . 35871) (punctuation 35867 . 35868) (symbol 35855 . 35866) (punctuation 35853 . 35854) (symbol 35850 . 35853) (punctuation 35849 . 35850) (symbol 35837 . 35848) (open-paren 35836 . 35837) (symbol 35814 . 35836) (VOID 35809 . 35813) (punctuation 35807 . 35808) (close-paren 35806 . 35807) (symbol 35800 . 35806) (LONG 35795 . 35799) (punctuation 35793 . 35794) (symbol 35792 . 35793) (punctuation 35791 . 35792) (symbol 35779 . 35790) (open-paren 35778 . 35779) (symbol 35758 . 35778) (VOID 35753 . 35757) (punctuation 35751 . 35752) (close-paren 35750 . 35751) (symbol 35748 . 35750) (LONG 35743 . 35747) (LONG 35738 . 35742) (punctuation 35736 . 35737) (symbol 35735 . 35736) (punctuation 35734 . 35735) (symbol 35722 . 35733) (open-paren 35721 . 35722) (symbol 35705 . 35721) (VOID 35700 . 35704) (punctuation 35698 . 35699) (close-paren 35697 . 35698) (symbol 35696 . 35697) (DOUBLE 35689 . 35695) (punctuation 35687 . 35688) (symbol 35686 . 35687) (punctuation 35685 . 35686) (symbol 35673 . 35684) (open-paren 35672 . 35673) (symbol 35658 . 35672) (VOID 35653 . 35657) (punctuation 35651 . 35652) (close-paren 35650 . 35651) (symbol 35644 . 35650) (punctuation 35643 . 35644) (CHAR 35638 . 35642) (punctuation 35636 . 35637) (symbol 35635 . 35636) (punctuation 35634 . 35635) (symbol 35622 . 35633) (open-paren 35621 . 35622) (symbol 35607 . 35621) (VOID 35602 . 35606) (punctuation 35600 . 35601) (close-paren 35599 . 35600) (symbol 35596 . 35599) (punctuation 35595 . 35596) (CHAR 35590 . 35594) (punctuation 35588 . 35589) (symbol 35587 . 35588) (punctuation 35586 . 35587) (symbol 35574 . 35585) (open-paren 35573 . 35574) (symbol 35560 . 35573) (VOID 35555 . 35559) (punctuation 35553 . 35554) (close-paren 35552 . 35553) (symbol 35551 . 35552) (symbol 35547 . 35550) (punctuation 35545 . 35546) (symbol 35544 . 35545) (punctuation 35543 . 35544) (symbol 35531 . 35542) (open-paren 35530 . 35531) (symbol 35519 . 35530) (VOID 35514 . 35518) (punctuation 35512 . 35513) (close-paren 35511 . 35512) (symbol 35508 . 35511) (punctuation 35507 . 35508) (symbol 35502 . 35506) (punctuation 35500 . 35501) (symbol 35499 . 35500) (punctuation 35498 . 35499) (symbol 35486 . 35497) (open-paren 35485 . 35486) (symbol 35477 . 35485) (VOID 35472 . 35476) (punctuation 35470 . 35471) (close-paren 35469 . 35470) (symbol 35465 . 35469) (INT 35461 . 35464) (punctuation 35459 . 35460) (symbol 35451 . 35459) (punctuation 35450 . 35451) (VOID 35445 . 35449) (punctuation 35443 . 35444) (symbol 35441 . 35443) (INT 35437 . 35440) (punctuation 35435 . 35436) (symbol 35433 . 35435) (punctuation 35432 . 35433) (symbol 35420 . 35431) (open-paren 35419 . 35420) (symbol 35406 . 35419) (VOID 35401 . 35405) (punctuation 35399 . 35400) (close-paren 35398 . 35399) (symbol 35396 . 35398) (LONG 35391 . 35395) (LONG 35386 . 35390) (punctuation 35384 . 35385) (symbol 35383 . 35384) (punctuation 35382 . 35383) (symbol 35370 . 35381) (open-paren 35369 . 35370) (symbol 35349 . 35369) (VOID 35344 . 35348) (punctuation 35342 . 35343) (close-paren 35341 . 35342) (symbol 35338 . 35341) (symbol 35331 . 35337) (punctuation 35329 . 35330) (symbol 35328 . 35329) (punctuation 35327 . 35328) (VOID 35322 . 35326) (punctuation 35320 . 35321) (symbol 35319 . 35320) (punctuation 35318 . 35319) (symbol 35306 . 35317) (open-paren 35305 . 35306) (symbol 35286 . 35305) (VOID 35281 . 35285) (punctuation 35279 . 35280) (close-paren 35278 . 35279) (symbol 35277 . 35278) (punctuation 35276 . 35277) (CHAR 35271 . 35275) (punctuation 35269 . 35270) (symbol 35268 . 35269) (punctuation 35267 . 35268) (symbol 35255 . 35266) (open-paren 35254 . 35255) (symbol 35235 . 35254) (VOID 35230 . 35234) (punctuation 35228 . 35229) (close-paren 35227 . 35228) (symbol 35224 . 35227) (punctuation 35223 . 35224) (symbol 35218 . 35222) (punctuation 35216 . 35217) (symbol 35215 . 35216) (punctuation 35214 . 35215) (symbol 35202 . 35213) (open-paren 35201 . 35202) (symbol 35189 . 35201) (VOID 35184 . 35188) (punctuation 35182 . 35183) (close-paren 35181 . 35182) (symbol 35177 . 35181) (INT 35173 . 35176) (punctuation 35171 . 35172) (symbol 35163 . 35171) (punctuation 35162 . 35163) (VOID 35157 . 35161) (punctuation 35155 . 35156) (symbol 35153 . 35155) (INT 35149 . 35152) (punctuation 35147 . 35148) (symbol 35145 . 35147) (punctuation 35144 . 35145) (symbol 35132 . 35143) (open-paren 35131 . 35132) (symbol 35112 . 35131) (VOID 35107 . 35111) (punctuation 35105 . 35106) (close-paren 35104 . 35105) (symbol 35100 . 35104) (INT 35096 . 35099) (punctuation 35094 . 35095) (symbol 35086 . 35094) (punctuation 35085 . 35086) (VOID 35080 . 35084) (punctuation 35078 . 35079) (symbol 35076 . 35078) (INT 35072 . 35075) (punctuation 35070 . 35071) (symbol 35068 . 35070) (punctuation 35067 . 35068) (symbol 35055 . 35066) (open-paren 35054 . 35055) (symbol 35037 . 35054) (VOID 35032 . 35036) (punctuation 35030 . 35031) (close-paren 35029 . 35030) (symbol 35025 . 35029) (INT 35021 . 35024) (punctuation 35019 . 35020) (symbol 35011 . 35019) (punctuation 35010 . 35011) (VOID 35005 . 35009) (punctuation 35003 . 35004) (symbol 35001 . 35003) (INT 34997 . 35000) (punctuation 34995 . 34996) (symbol 34993 . 34995) (punctuation 34992 . 34993) (symbol 34980 . 34991) (open-paren 34979 . 34980) (symbol 34963 . 34979) (VOID 34958 . 34962) (punctuation 34956 . 34957) (close-paren 34955 . 34956) (symbol 34954 . 34955) (punctuation 34953 . 34954) (symbol 34941 . 34952) (open-paren 34940 . 34941) (symbol 34922 . 34940) (VOID 34917 . 34921) (punctuation 34915 . 34916) (close-paren 34914 . 34915) (symbol 34913 . 34914) (symbol 34909 . 34912) (punctuation 34907 . 34908) (symbol 34906 . 34907) (punctuation 34905 . 34906) (symbol 34893 . 34904) (open-paren 34892 . 34893) (symbol 34881 . 34892) (VOID 34876 . 34880) (punctuation 34874 . 34875) (close-paren 34873 . 34874) (symbol 34867 . 34873) (LONG 34862 . 34866) (punctuation 34860 . 34861) (symbol 34856 . 34860) (punctuation 34855 . 34856) (VOID 34850 . 34854) (punctuation 34848 . 34849) (symbol 34847 . 34848) (punctuation 34846 . 34847) (symbol 34834 . 34845) (open-paren 34833 . 34834) (symbol 34807 . 34833) (VOID 34802 . 34806) (punctuation 34800 . 34801) (close-paren 34799 . 34800) (symbol 34798 . 34799) (punctuation 34797 . 34798) (symbol 34785 . 34796) (open-paren 34784 . 34785) (symbol 34758 . 34784) (punctuation 34757 . 34758) (VOID 34752 . 34756) (punctuation 34750 . 34751) (close-paren 34749 . 34750) (symbol 34746 . 34749) (punctuation 34745 . 34746) (symbol 34740 . 34744) (punctuation 34738 . 34739) (symbol 34737 . 34738) (punctuation 34736 . 34737) (symbol 34724 . 34735) (open-paren 34723 . 34724) (symbol 34715 . 34723) (VOID 34710 . 34714) (punctuation 34708 . 34709) (close-paren 34707 . 34708) (symbol 34703 . 34707) (INT 34699 . 34702) (punctuation 34697 . 34698) (symbol 34689 . 34697) (punctuation 34688 . 34689) (VOID 34683 . 34687) (punctuation 34681 . 34682) (symbol 34679 . 34681) (INT 34675 . 34678) (punctuation 34673 . 34674) (symbol 34671 . 34673) (punctuation 34670 . 34671) (symbol 34658 . 34669) (open-paren 34657 . 34658) (symbol 34640 . 34657) (VOID 34635 . 34639) (punctuation 34633 . 34634) (close-paren 34632 . 34633) (symbol 34631 . 34632) (punctuation 34630 . 34631) (symbol 34618 . 34629) (open-paren 34617 . 34618) (symbol 34606 . 34617) (VOID 34601 . 34605) (punctuation 34599 . 34600) (close-paren 34598 . 34599) (symbol 34597 . 34598) (punctuation 34596 . 34597) (symbol 34584 . 34595) (open-paren 34583 . 34584) (symbol 34573 . 34583) (VOID 34568 . 34572) (punctuation 34566 . 34567) (close-paren 34565 . 34566) (VOID 34561 . 34565) (open-paren 34560 . 34561) (symbol 34540 . 34560) (VOID 34535 . 34539) (punctuation 34533 . 34534) (close-paren 34532 . 34533) (symbol 34530 . 34532) (INT 34526 . 34529) (open-paren 34525 . 34526) (symbol 34513 . 34525) (punctuation 34512 . 34513) (symbol 34500 . 34511) (punctuation 34434 . 34435) (close-paren 34433 . 34434) (symbol 34426 . 34433) (INT 34422 . 34425) (open-paren 34421 . 34422) (symbol 34408 . 34421) (VOID 34403 . 34407) (punctuation 34401 . 34402) (close-paren 34400 . 34401) (symbol 34399 . 34400) (symbol 34390 . 34398) (punctuation 34388 . 34389) (symbol 34387 . 34388) (punctuation 34386 . 34387) (CHAR 34381 . 34385) (UNSIGNED 34372 . 34380) (CONST 34366 . 34371) (punctuation 34364 . 34365) (symbol 34361 . 34364) (symbol 34352 . 34360) (open-paren 34351 . 34352) (symbol 34346 . 34351) (symbol 34337 . 34345) (punctuation 34335 . 34336) (close-paren 34334 . 34335) (symbol 34331 . 34334) (INT 34327 . 34330) (UNSIGNED 34318 . 34326) (punctuation 34316 . 34317) (symbol 34315 . 34316) (punctuation 34314 . 34315) (CHAR 34309 . 34313) (open-paren 34308 . 34309) (symbol 34291 . 34308) (VOID 34286 . 34290) (punctuation 34284 . 34285) (close-paren 34283 . 34284) (VOID 34279 . 34283) (open-paren 34278 . 34279) (symbol 34272 . 34278) (LONG 34267 . 34271) (LONG 34262 . 34266) (punctuation 34260 . 34261) (close-paren 34259 . 34260) (VOID 34255 . 34259) (open-paren 34254 . 34255) (symbol 34248 . 34254) (LONG 34243 . 34247) (LONG 34238 . 34242) (close-paren 33497 . 33498) (open-paren 33383 . 33384) (STRUCT 33376 . 33382) (TYPEDEF 33368 . 33375) (close-paren 33082 . 33083) (open-paren 32987 . 32988) (STRUCT 32980 . 32986) (TYPEDEF 32972 . 32979) (close-paren 32903 . 32904) (open-paren 32777 . 32778) (STRUCT 32770 . 32776) (TYPEDEF 32762 . 32769) (close-paren 32683 . 32684) (open-paren 32538 . 32539) (STRUCT 32531 . 32537) (TYPEDEF 32523 . 32530) (close-paren 32448 . 32449) (open-paren 32413 . 32414) (symbol 32393 . 32412) (STRUCT 32386 . 32392) (TYPEDEF 32378 . 32385) (close-paren 32358 . 32359) (open-paren 32276 . 32277) (symbol 32259 . 32275) (STRUCT 32252 . 32258) (TYPEDEF 32244 . 32251) (punctuation 32241 . 32242) (close-paren 32240 . 32241) (open-paren 32195 . 32196) (symbol 32178 . 32194) (STRUCT 32171 . 32177) (punctuation 32168 . 32169) (close-paren 32167 . 32168) (open-paren 31549 . 31550) (symbol 31536 . 31548) (STRUCT 31529 . 31535) (punctuation 31527 . 31528) (close-paren 31526 . 31527) (symbol 31521 . 31526) (INT 31517 . 31520) (punctuation 31515 . 31516) (symbol 31508 . 31515) (punctuation 31507 . 31508) (INT 31503 . 31506) (punctuation 31501 . 31502) (symbol 31497 . 31501) (INT 31493 . 31496) (punctuation 31491 . 31492) (symbol 31487 . 31491) (punctuation 31486 . 31487) (punctuation 31485 . 31486) (symbol 31480 . 31484) (punctuation 31478 . 31479) (symbol 31475 . 31478) (punctuation 31474 . 31475) (symbol 31461 . 31473) (STRUCT 31454 . 31460) (open-paren 31453 . 31454) (symbol 31437 . 31453) (punctuation 31436 . 31437) (INT 31432 . 31435) (TYPEDEF 31424 . 31431) (punctuation 31422 . 31423) (close-paren 31421 . 31422) (symbol 31420 . 31421) (punctuation 31419 . 31420) (symbol 31407 . 31418) (open-paren 31406 . 31407) (symbol 31390 . 31406) (VOID 31385 . 31389) (TYPEDEF 31377 . 31384) (close-paren 31359 . 31360) (open-paren 31313 . 31314) (symbol 31299 . 31312) (STRUCT 31292 . 31298) (TYPEDEF 31284 . 31291) (punctuation 31281 . 31282) (close-paren 31280 . 31281) (open-paren 20305 . 20306) (symbol 20293 . 20304) (STRUCT 20286 . 20292) (close-paren 20084 . 20085) (open-paren 20048 . 20049) (symbol 20035 . 20047) (STRUCT 20028 . 20034) (TYPEDEF 20020 . 20027) (close-paren 19830 . 19831) (open-paren 19753 . 19754) (symbol 19745 . 19752) (STRUCT 19738 . 19744) (TYPEDEF 19730 . 19737) (close-paren 19373 . 19374) (open-paren 19258 . 19259) (symbol 19233 . 19257) (STRUCT 19226 . 19232) (TYPEDEF 19218 . 19225) (close-paren 19209 . 19210) (open-paren 19171 . 19172) (symbol 19166 . 19170) (STRUCT 19159 . 19165) (TYPEDEF 19151 . 19158) (close-paren 19137 . 19138) (open-paren 19053 . 19054) (symbol 19043 . 19052) (STRUCT 19036 . 19042) (TYPEDEF 19028 . 19035) (close-paren 19010 . 19011) (open-paren 18830 . 18831) (symbol 18816 . 18829) (STRUCT 18809 . 18815) (TYPEDEF 18801 . 18808) (punctuation 18747 . 18748) (close-paren 18746 . 18747) (open-paren 18063 . 18064) (symbol 18043 . 18062) (STRUCT 18036 . 18042) (punctuation 18033 . 18034) (close-paren 18032 . 18033) (open-paren 17993 . 17994) (symbol 17983 . 17992) (STRUCT 17976 . 17982) (close-paren 17960 . 17961) (open-paren 16114 . 16115) (symbol 16102 . 16113) (STRUCT 16095 . 16101) (TYPEDEF 16087 . 16094) (close-paren 15977 . 15978) (open-paren 15943 . 15944) (symbol 15933 . 15942) (STRUCT 15926 . 15932) (TYPEDEF 15918 . 15925) (close-paren 15234 . 15235) (open-paren 14798 . 14799) (symbol 14784 . 14797) (STRUCT 14777 . 14783) (TYPEDEF 14769 . 14776) (close-paren 14754 . 14755) (open-paren 14629 . 14630) (symbol 14618 . 14628) (STRUCT 14611 . 14617) (TYPEDEF 14603 . 14610) (close-paren 14590 . 14591) (open-paren 14527 . 14528) (symbol 14518 . 14526) (STRUCT 14511 . 14517) (TYPEDEF 14503 . 14510) (close-paren 14461 . 14462) (open-paren 14088 . 14089) (symbol 14080 . 14087) (STRUCT 14073 . 14079) (TYPEDEF 14065 . 14072) (close-paren 13614 . 13615) (open-paren 13417 . 13418) (symbol 13405 . 13416) (STRUCT 13398 . 13404) (TYPEDEF 13390 . 13397) (close-paren 8550 . 8551))
      :lexical-table 
        '(("__REDIS_H")
          ("REDIS_SLOWLOG_MAX_LEN" . ((number "128" 3636 . 3639)))
          ("REDIS_HASH" . ((number "4" 5477 . 5478)))
          ("REDIS_RDB_14BITLEN" . ((number "1" 6944 . 6945)))
          ("REDIS_MASTER" . ((semantic-list "(1<<1)" 7799 . 7805)))
          ("REDIS_UNIX_SOCKET" . ((semantic-list "(1<<11)" 8606 . 8613)))
          ("REDIS_DIRTY_EXEC" . ((semantic-list "(1<<12)" 8685 . 8692)))
          ("REDIS_REPL_WAIT_BGSAVE_START" . ((number "3" 9914 . 9915)))
          ("REDIS_NOTUSED" (spp-arg-list ("V") 10630 . 10633) . ((semantic-list "((void) V)" 10634 . 10644)))
          ("REDIS_ZSET_MAX_ZIPLIST_VALUE" . ((number "64" 11201 . 11203)))
          ("REDIS_PROPAGATE_NONE" . ((number "0" 12278 . 12279)))
          ("REDIS_PROPAGATE_AOF" . ((number "1" 12308 . 12309)))
          ("REDIS_HASH_KEY" . ((number "1" 33541 . 33542)))
          ("REDIS_GETKEYS_ALL" . ((number "0" 45571 . 45572)))
          ("REDIS_REPL_TIMEOUT" . ((number "60" 3775 . 3777)))
          ("REDIS_RUN_ID_SIZE" . ((number "40" 3844 . 3846)))
          ("REDIS_CMD_FORCE_REPLICATION" . ((number "8" 4858 . 4859)))
          ("REDIS_STRING" . ((number "0" 5394 . 5395)))
          ("REDIS_ENCODING_ZIPLIST" . ((number "5" 6022 . 6023)))
          ("REDIS_AOF_WAIT_REWRITE" . ((number "2" 7645 . 7646)))
          ("REDIS_CLIENT_LIMIT_CLASS_PUBSUB" . ((number "2" 9068 . 9069)))
          ("REDIS_CLIENT_LIMIT_NUM_CLASSES" . ((number "3" 9109 . 9110)))
          ("REDIS_REPL_RECEIVE_PONG" . ((number "3" 9358 . 9359)))
          ("REDIS_DEBUG" . ((number "0" 10437 . 10438)))
          ("REDIS_LIST_MAX_ZIPLIST_VALUE" . ((number "64" 11077 . 11079)))
          ("REDIS_MAXMEMORY_NO_EVICTION" . ((number "5" 11576 . 11577)))
          ("REDIS_SHUTDOWN_SAVE" . ((number "1" 11762 . 11763)))
          ("REDIS_SHARED_INTEGERS" . ((number "10000" 3309 . 3314)))
          ("REDIS_SHARED_BULKHDR_LEN" . ((number "32" 3348 . 3350)))
          ("REDIS_CMD_DENYOOM" . ((number "4" 4789 . 4790)))
          ("REDIS_AOF_OFF" . ((number "0" 7531 . 7532)))
          ("REDIS_CLIENT_LIMIT_CLASS_SLAVE" . ((number "1" 9026 . 9027)))
          ("REDIS_REPL_SYNCIO_TIMEOUT" . ((number "5" 9585 . 9586)))
          ("ZSKIPLIST_P" . ((number "0.25" 10737 . 10741)))
          ("REDIS_HASH_MAX_ZIPLIST_VALUE" . ((number "64" 10994 . 10996)))
          ("REDIS_LIST_MAX_ZIPLIST_ENTRIES" . ((number "512" 11036 . 11039)))
          ("REDIS_GETKEYS_PRELOAD" . ((number "1" 45603 . 45604)))
          ("REDIS_AOF_REWRITE_ITEMS_PER_CMD" . ((number "64" 3559 . 3561)))
          ("REDIS_OPS_SEC_SAMPLES" . ((number "16" 3877 . 3879)))
          ("REDIS_REPLY_CHUNK_BYTES" . ((semantic-list "(16*1024)" 4180 . 4189)))
          ("REDIS_CMD_LOADING" . ((number "512" 5202 . 5205)))
          ("REDIS_RDB_ENCVAL" . ((number "3" 7000 . 7001)))
          ("REDIS_MULTI" . ((semantic-list "(1<<3)" 7943 . 7949)))
          ("REDIS_REPL_TRANSFER" . ((number "4" 9414 . 9415)))
          ("REDIS_REPL_CONNECTED" . ((number "5" 9478 . 9479)))
          ("UNIT_MILLISECONDS" . ((number "1" 11710 . 11711)))
          ("REDIS_OK" . ((number "0" 2586 . 2587)))
          ("REDIS_DEFAULT_HZ" . ((number "10" 2690 . 2692)))
          ("REDIS_MAX_HZ" . ((number "500" 2796 . 2799)))
          ("REDIS_AUTHPASS_MAX_LEN" . ((number "512" 3703 . 3706)))
          ("REDIS_AOF_AUTOSYNC_BYTES" . ((semantic-list "(1024*1024*32)" 4362 . 4376)))
          ("REDIS_ENCODING_ZIPMAP" . ((number "3" 5891 . 5892)))
          ("REDIS_RDB_32BITLEN" . ((number "2" 6973 . 6974)))
          ("REDIS_REQ_INLINE" . ((number "1" 8794 . 8795)))
          ("REDIS_REPL_NONE" . ((number "0" 9179 . 9180)))
          ("REDIS_HEAD" . ((number "0" 10246 . 10247)))
          ("REDIS_SORT_ASC" . ((number "1" 10340 . 10341)))
          ("REDIS_SORT_DESC" . ((number "2" 10366 . 10367)))
          ("REDIS_VERBOSE" . ((number "1" 10461 . 10462)))
          ("AOF_FSYNC_EVERYSEC" . ((number "2" 10874 . 10875)))
          ("UNIT_SECONDS" . ((number "0" 11682 . 11683)))
          ("REDIS_CALL_FULL" . ((semantic-list "(REDIS_CALL_SLOWLOG | REDIS_CALL_STATS | REDIS_CALL_PROPAGATE)" 12127 . 12189)))
          ("REDIS_MIN_HZ" . ((number "1" 2762 . 2763)))
          ("REDIS_DEFAULT_DBNUM" . ((number "16" 2967 . 2969)))
          ("REDIS_DBCRON_DBS_PER_CALL" . ((number "16" 3196 . 3198)))
          ("REDIS_MAX_CLIENTS" . ((number "10000" 3666 . 3671)))
          ("REDIS_HT_MINFILL" . ((number "10" 4465 . 4467)))
          ("REDIS_CMD_READONLY" . ((number "2" 4731 . 4732)))
          ("REDIS_CMD_SKIP_MONITOR" . ((number "2048" 5325 . 5329)))
          ("REDIS_ENCODING_INTSET" . ((number "6" 6079 . 6080)))
          ("REDIS_RDB_ENC_INT16" . ((number "1" 7319 . 7320)))
          ("REDIS_REQ_MULTIBULK" . ((number "2" 8824 . 8825)))
          ("REDIS_WARNING" . ((number "3" 10508 . 10509)))
          ("REDIS_LUA_TIME_LIMIT" . ((number "5000" 11624 . 11628)))
          ("REDIS_PROPAGATE_REPL" . ((number "2" 12339 . 12340)))
          ("redisPanic" (spp-arg-list ("_e") 12917 . 12921) . 
              ((symbol "_redisPanic" 12922 . 12933) (semantic-list "(#_e,__FILE__,__LINE__)" 12933 . 12956) (punctuation "," 12956 . 12957) (symbol "_exit" 12957 . 12962) (semantic-list "(1)" 12962 . 12965)))
          ("initStaticStringObject" (spp-arg-list ("_var" "_ptr") 13911 . 13922) . 
              ((DO "do" 13923 . 13925) (semantic-list "{ \\
    _var.refcount = 1; \\
    _var.type = REDIS_STRING; \\
    _var.encoding = REDIS_ENCODING_RAW; \\
    _var.ptr = _ptr; \\
}" 13926 . 14053) (WHILE "while" 14054 . 14059) (semantic-list "(0)" 14059 . 14062) (punctuation ";" 14062 . 14063)))
          ("REDIS_HASH_VALUE" . ((number "2" 33568 . 33569)))
          ("REDIS_MAXIDLETIME" . ((number "0" 2888 . 2889)))
          ("REDIS_CMD_ADMIN" . ((number "16" 4905 . 4907)))
          ("REDIS_CMD_RANDOM" . ((number "128" 5083 . 5086)))
          ("REDIS_ENCODING_INT" . ((number "1" 5769 . 5770)))
          ("REDIS_RDB_LENERR" . ((symbol "UINT_MAX" 7027 . 7035)))
          ("REDIS_SLAVE" . ((semantic-list "(1<<0)" 7733 . 7739)))
          ("REDIS_CLOSE_AFTER_REPLY" . ((semantic-list "(1<<6)" 8181 . 8187)))
          ("REDIS_LOG_RAW" . ((semantic-list "(1<<10)" 10532 . 10539)))
          ("REDIS_SET_MAX_INTSET_ENTRIES" . ((number "512" 11117 . 11120)))
          ("REDIS_ZSET_MAX_ZIPLIST_ENTRIES" . ((number "128" 11160 . 11163)))
          ("REDIS_OP_DIFF" . ((number "1" 11280 . 11281)))
          ("REDIS_MAXMEMORY_VOLATILE_RANDOM" . ((number "2" 11459 . 11460)))
          ("REDIS_LRU_CLOCK_RESOLUTION" . ((number "10" 13349 . 13351)))
          ("REDIS_SLOWLOG_LOG_SLOWER_THAN" . ((number "10000" 3600 . 3605)))
          ("REDIS_REPL_PING_SLAVE_PERIOD" . ((number "10" 3815 . 3817)))
          ("REDIS_INLINE_MAX_SIZE" . ((semantic-list "(1024*64)" 4246 . 4255)))
          ("REDIS_CMD_STALE" . ((number "1024" 5259 . 5263)))
          ("REDIS_ZSET" . ((number "3" 5456 . 5457)))
          ("REDIS_RDB_6BITLEN" . ((number "0" 6915 . 6916)))
          ("REDIS_RDB_ENC_INT32" . ((number "2" 7383 . 7384)))
          ("REDIS_AOF_ON" . ((number "1" 7583 . 7584)))
          ("REDIS_CLIENT_LIMIT_CLASS_NORMAL" . ((number "0" 8985 . 8986)))
          ("REDIS_SORT_GET" . ((number "0" 10315 . 10316)))
          ("AOF_FSYNC_NO" . ((number "0" 10818 . 10819)))
          ("REDIS_SERVERPORT" . ((number "6379" 2833 . 2837)))
          ("REDIS_AOF_REWRITE_PERC" . ((number "100" 3468 . 3471)))
          ("REDIS_IOBUF_LEN" . ((semantic-list "(1024*16)" 4107 . 4116)))
          ("REDIS_REPL_WAIT_BGSAVE_END" . ((number "4" 9997 . 9998)))
          ("REDIS_MAXMEMORY_VOLATILE_LRU" . ((number "0" 11378 . 11379)))
          ("REDIS_CALL_PROPAGATE" . ((number "4" 12101 . 12102)))
          ("REDIS_CONFIGLINE_MAX" . ((number "1024" 3002 . 3006)))
          ("REDIS_MAX_WRITE_PER_EVENT" . ((semantic-list "(1024*64)" 3233 . 3242)))
          ("REDIS_CMD_WRITE" . ((number "1" 4669 . 4670)))
          ("REDIS_CMD_PUBSUB" . ((number "32" 4965 . 4967)))
          ("REDIS_ENCODING_HT" . ((number "2" 5826 . 5827)))
          ("REDIS_RDB_ENC_INT8" . ((number "0" 7255 . 7256)))
          ("REDIS_RDB_ENC_LZF" . ((number "3" 7445 . 7446)))
          ("REDIS_MONITOR" . ((semantic-list "(1<<2)" 7866 . 7872)))
          ("REDIS_CLOSE_ASAP" . ((semantic-list "(1<<10" 8544 . 8550)))
          ("REDIS_OP_INTER" . ((number "2" 11305 . 11306)))
          ("REDIS_MAXMEMORY_ALLKEYS_LRU" . ((number "3" 11497 . 11498)))
          ("REDIS_CALL_NONE" . ((number "0" 12014 . 12015)))
          ("REDIS_CALL_STATS" . ((number "2" 12070 . 12071)))
          ("redisAssertWithInfo" (spp-arg-list ("_c" "_o" "_e") 12722 . 12732) . ((semantic-list "((_e)?(void)0 : (_redisAssertWithInfo(_c,_o,#_e,__FILE__,__LINE__),_exit(1)))" 12733 . 12810)))
          ("redisDebug" (spp-arg-list ("fmt" "...") 52086 . 52096) . ((symbol "printf" 52103 . 52109) (semantic-list "(\"DEBUG %s:%d > \" fmt \"\\n\", __FILE__, __LINE__, __VA_ARGS__)" 52109 . 52169)))
          ("redisDebugMark" (spp-arg-list nil 52192 . 52194) . ((symbol "printf" 52201 . 52207) (semantic-list "(\"-- MARK %s:%d --\\n\", __FILE__, __LINE__)" 52207 . 52249)))
          ("REDIS_EXPIRELOOKUPS_PER_CRON" . ((number "10" 3047 . 3049)))
          ("REDIS_DEFAULT_SLAVE_PRIORITY" . ((number "100" 3744 . 3747)))
          ("REDIS_CMD_NOSCRIPT" . ((number "64" 5027 . 5029)))
          ("REDIS_CMD_SORT_FOR_SCRIPT" . ((number "256" 5151 . 5154)))
          ("REDIS_LIST" . ((number "1" 5415 . 5416)))
          ("REDIS_SET" . ((number "2" 5435 . 5436)))
          ("REDIS_ENCODING_LINKEDLIST" . ((number "4" 5952 . 5953)))
          ("REDIS_LUA_CLIENT" . ((semantic-list "(1<<8)" 8392 . 8398)))
          ("REDIS_REPL_CONNECT" . ((number "1" 9236 . 9237)))
          ("REDIS_SHUTDOWN_NOSAVE" . ((number "2" 11907 . 11908)))
          ("REDIS_SHARED_SELECT_CMDS" . ((number "10" 3276 . 3278)))
          ("REDIS_ENCODING_SKIPLIST" . ((number "7" 6138 . 6139)))
          ("REDIS_ASKING" . ((semantic-list "(1<<9)" 8469 . 8475)))
          ("REDIS_REPL_CONNECTING" . ((number "2" 9297 . 9298)))
          ("REDIS_REPL_SEND_BULK" . ((number "5" 10084 . 10085)))
          ("REDIS_HASH_MAX_ZIPLIST_ENTRIES" . ((number "512" 10953 . 10956)))
          ("REDIS_OP_UNION" . ((number "0" 11256 . 11257)))
          ("REDIS_CALL_SLOWLOG" . ((number "1" 12043 . 12044)))
          ("REDIS_ERR" . ((punctuation "-" 2620 . 2621) (number "1" 2621 . 2622)))
          ("REDIS_EXPIRELOOKUPS_TIME_PERC" . ((number "25" 3123 . 3125)))
          ("REDIS_MAX_LOGMSG_LEN" . ((number "1024" 3383 . 3387)))
          ("REDIS_AOF_REWRITE_MIN_SIZE" . ((semantic-list "(1024*1024)" 3507 . 3518)))
          ("REDIS_BGSAVE_RETRY_DELAY" . ((number "5" 3913 . 3914)))
          ("REDIS_MAX_QUERYBUF_LEN" . ((semantic-list "(1024*1024*1024)" 4030 . 4046)))
          ("REDIS_MBULK_BIG_ARG" . ((semantic-list "(1024*32)" 4319 . 4328)))
          ("REDIS_ENCODING_RAW" . ((number "0" 5711 . 5712)))
          ("REDIS_BLOCKED" . ((semantic-list "(1<<4)" 8014 . 8020)))
          ("REDIS_DIRTY_CAS" . ((semantic-list "(1<<5)" 8097 . 8103)))
          ("REDIS_UNBLOCKED" . ((semantic-list "(1<<7)" 8252 . 8258)))
          ("REDIS_REPL_ONLINE" . ((number "6" 10148 . 10149)))
          ("REDIS_TAIL" . ((number "1" 10267 . 10268)))
          ("REDIS_SORTKEY_MAX" . ((number "1024" 10394 . 10398)))
          ("REDIS_NOTICE" . ((number "2" 10484 . 10485)))
          ("ZSKIPLIST_MAXLEVEL" . ((number "32" 10673 . 10675)))
          ("AOF_FSYNC_ALWAYS" . ((number "1" 10845 . 10846)))
          ("REDIS_MAXMEMORY_VOLATILE_TTL" . ((number "1" 11417 . 11418)))
          ("REDIS_MAXMEMORY_ALLKEYS_RANDOM" . ((number "4" 11538 . 11539)))
          ("run_with_period" (spp-arg-list ("_ms_") 12538 . 12544) . ((IF "if" 12545 . 12547) (semantic-list "((_ms_ <= 1000/server.hz) || !(server.cronloops%((_ms_)/(1000/server.hz))))" 12548 . 12623)))
          ("redisAssert" (spp-arg-list ("_e") 12830 . 12834) . ((semantic-list "((_e)?(void)0 : (_redisAssert(#_e,__FILE__,__LINE__),_exit(1)))" 12835 . 12898)))
          ("REDIS_LRU_CLOCK_MAX" . ((semantic-list "((1<<21)-1)" 13274 . 13285)))
          )
)
    (semanticdb-table "t_hash.c"
      :major-mode 'c-mode
      :tags 
        '( ("redis.h" include nil nil [1612 1630])
            ("math.h" include (:system-flag t) nil [1631 1648])
            ("hashTypeTryConversion" function
               (:arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2066 2074])
                    ("argv" variable
                       (:pointer 2
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2075 2087])
                    ("start" variable (:type "int") (reparse-symbol arg-sub-list) [2088 2098])
                    ("end" variable (:type "int") (reparse-symbol arg-sub-list) [2099 2107]))                  
                :type "void")
                nil [2039 2433])
            ("hashTypeTryObjectEncoding" function
               (:arguments 
                  ( ("subject" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2529 2543])
                    ("o1" variable
                       (:pointer 2
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2544 2554])
                    ("o2" variable
                       (:pointer 2
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2555 2565]))                  
                :type "void")
                nil [2498 2717])
            ("hashTypeGetFromZiplist" function
               (:arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2862 2870])
                    ("field" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2871 2883])
                    ("vstr" variable
                       (:pointer 2
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [2911 2932])
                    ("vlen" variable
                       (:pointer 1
                        :type "unsigned int")
                        (reparse-symbol arg-sub-list) [2960 2979])
                    ("vll" variable
                       (:pointer 1
                        :type "long long")
                        (reparse-symbol arg-sub-list) [3007 3022]))                  
                :type "int")
                nil [2835 3701])
            ("hashTypeGetFromHashTable" function
               (:arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3851 3859])
                    ("field" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3860 3872])
                    ("value" variable
                       (:pointer 2
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3873 3886]))                  
                :type "int")
                nil [3822 4070])
            ("hashTypeGetObject" function
               (:pointer 1
                :arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4419 4427])
                    ("field" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4428 4440]))                  
                :type ("robj" type (:type "class") nil nil))
                nil [4395 5175])
            ("hashTypeExists" function
               (:arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5313 5321])
                    ("field" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5322 5334]))                  
                :type "int")
                nil [5294 5796])
            ("hashTypeSet" function
               (:arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6031 6039])
                    ("field" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6040 6052])
                    ("value" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6053 6065]))                  
                :type "int")
                nil [6015 7740])
            ("hashTypeDelete" function
               (:arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7841 7849])
                    ("field" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7850 7862]))                  
                :type "int")
                nil [7822 8792])
            ("hashTypeLength" function
               (:arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8870 8878]))                  
                :type "unsigned long")
                nil [8841 9188])
            ("hashTypeInitIterator" function
               (:pointer 1
                :arguments 
                  ( ("subject" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9229 9243]))                  
                :type ("hashTypeIterator" type (:type "class") nil nil))
                nil [9190 9655])
            ("hashTypeReleaseIterator" function
               (:arguments 
                  ( ("hi" variable
                       (:pointer 1
                        :type ("hashTypeIterator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9686 9707]))                  
                :type "void")
                nil [9657 9815])
            ("hashTypeNext" function
               (:arguments 
                  ( ("hi" variable
                       (:pointer 1
                        :type ("hashTypeIterator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9979 10000]))                  
                :type "int")
                nil [9962 10985])
            ("hashTypeCurrentFromZiplist" function
               (:arguments 
                  ( ("hi" variable
                       (:pointer 1
                        :type ("hashTypeIterator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11175 11196])
                    ("what" variable (:type "int") (reparse-symbol arg-sub-list) [11197 11206])
                    ("vstr" variable
                       (:pointer 2
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [11239 11260])
                    ("vlen" variable
                       (:pointer 1
                        :type "unsigned int")
                        (reparse-symbol arg-sub-list) [11293 11312])
                    ("vll" variable
                       (:pointer 1
                        :type "long long")
                        (reparse-symbol arg-sub-list) [11345 11360]))                  
                :type "void")
                nil [11143 11646])
            ("hashTypeCurrentFromHashTable" function
               (:arguments 
                  ( ("hi" variable
                       (:pointer 1
                        :type ("hashTypeIterator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11840 11861])
                    ("what" variable (:type "int") (reparse-symbol arg-sub-list) [11862 11871])
                    ("dst" variable
                       (:pointer 2
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11872 11883]))                  
                :type "void")
                nil [11806 12062])
            ("hashTypeCurrentObject" function
               (:pointer 1
                :arguments 
                  ( ("hi" variable
                       (:pointer 1
                        :type ("hashTypeIterator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12329 12350])
                    ("what" variable (:type "int") (reparse-symbol arg-sub-list) [12351 12360]))                  
                :type ("robj" type (:type "class") nil nil))
                nil [12301 12981])
            ("hashTypeLookupWriteOrCreate" function
               (:pointer 1
                :arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13017 13032])
                    ("key" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13033 13043]))                  
                :type ("robj" type (:type "class") nil nil))
                nil [12983 13319])
            ("hashTypeConvertZiplist" function
               (:arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13349 13357])
                    ("enc" variable (:type "int") (reparse-symbol arg-sub-list) [13358 13366]))                  
                :type "void")
                nil [13321 14473])
            ("hashTypeConvert" function
               (:arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14496 14504])
                    ("enc" variable (:type "int") (reparse-symbol arg-sub-list) [14505 14513]))                  
                :type "void")
                nil [14475 14760])
            ("hsetCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14963 14978]))                  
                :type "void")
                nil [14946 15352])
            ("hsetnxCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15373 15388]))                  
                :type "void")
                nil [15354 15828])
            ("hmsetCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15848 15863]))                  
                :type "void")
                nil [15830 16379])
            ("hincrbyCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16401 16416]))                  
                :type "void")
                nil [16381 17476])
            ("hincrbyfloatCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17503 17518]))                  
                :type "void")
                nil [17478 18712])
            ("addHashFieldToReply" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18746 18761])
                    ("o" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18762 18770])
                    ("field" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18771 18783]))                  
                :type "void")
                nil [18714 19684])
            ("hgetCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19703 19718]))                  
                :type "void")
                nil [19686 19899])
            ("hmgetCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19919 19934]))                  
                :type "void")
                nil [19901 20396])
            ("hdelCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20415 20430]))                  
                :type "void")
                nil [20398 20968])
            ("hlenCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20987 21002]))                  
                :type "void")
                nil [20970 21179])
            ("addHashIteratorCursorToReply" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21222 21237])
                    ("hi" variable
                       (:pointer 1
                        :type ("hashTypeIterator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21238 21259])
                    ("what" variable (:type "int") (reparse-symbol arg-sub-list) [21260 21269]))                  
                :type "void")
                nil [21181 21864])
            ("genericHgetallCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21893 21908])
                    ("flags" variable (:type "int") (reparse-symbol arg-sub-list) [21909 21919]))                  
                :type "void")
                nil [21866 22742])
            ("hkeysCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22762 22777]))                  
                :type "void")
                nil [22744 22826])
            ("hvalsCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22846 22861]))                  
                :type "void")
                nil [22828 22912])
            ("hgetallCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22934 22949]))                  
                :type "void")
                nil [22914 23015])
            ("hexistsCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23037 23052]))                  
                :type "void")
                nil [23017 23262]))          
      :file "t_hash.c"
      :pointmax 23263
      :fsize 23262
      :lastmodtime '(20863 50188 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "networking.c"
      :major-mode 'c-mode
      :tags 
        '( ("redis.h" include nil nil [1612 1630])
            ("sys/uio.h" include (:system-flag t) nil [1631 1651])
            ("setProtocolError" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1682 1697])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1698 1706]))                  
                :type "void")
                nil [1653 1707])
            ("zmalloc_size_sds" function
               (:arguments 
                  ( ("s" variable (:type ("sds" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2013 2019]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [1989 2073])
            ("dupClientReplyValue" function
               (:pointer 1
                :arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [2101 2109]))                  
                :type "void")
                nil [2075 2155])
            ("listMatchObjects" function
               (:arguments 
                  ( ("a" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [2178 2186])
                    ("b" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [2187 2195]))                  
                :type "int")
                nil [2157 2235])
            ("createClient" function
               (:pointer 1
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [2263 2270]))                  
                :type ("redisClient" type (:type "class") nil nil))
                nil [2237 4168])
            ("prepareClientToWrite" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4921 4936]))                  
                :type "int")
                nil [4896 5333])
            ("dupLastObjectIfNeeded" function
               (:pointer 1
                :arguments 
                  ( ("reply" variable
                       (:pointer 1
                        :type ("list" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5480 5492]))                  
                :type ("robj" type (:type "class") nil nil))
                nil [5452 5791])
            ("_addReplyToBuffer" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6037 6052])
                    ("s" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [6053 6061])
                    ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6062 6073]))                  
                :type "int")
                nil [6015 6554])
            ("_addReplyObjectToList" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6583 6598])
                    ("o" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6599 6607]))                  
                :type "void")
                nil [6556 7511])
            ("_addReplySdsToList" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7672 7687])
                    ("s" variable (:type ("sds" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7688 7694]))                  
                :type "void")
                nil [7648 8633])
            ("_addReplyStringToList" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8662 8677])
                    ("s" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [8678 8686])
                    ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8687 8698]))                  
                :type "void")
                nil [8635 9617])
            ("addReply" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9946 9961])
                    ("obj" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9962 9972]))                  
                :type "void")
                nil [9932 11512])
            ("addReplySds" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11531 11546])
                    ("s" variable (:type ("sds" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11547 11553]))                  
                :type "void")
                nil [11514 11899])
            ("addReplyString" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11921 11936])
                    ("s" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [11937 11945])
                    ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11946 11957]))                  
                :type "void")
                nil [11901 12102])
            ("addReplyErrorLength" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12129 12144])
                    ("s" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [12145 12153])
                    ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12154 12165]))                  
                :type "void")
                nil [12104 12263])
            ("addReplyError" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12284 12299])
                    ("err" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [12300 12310]))                  
                :type "void")
                nil [12265 12358])
            ("addReplyErrorFormat" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12385 12400])
                    ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [12401 12417])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [12418 12422]))                  
                :type "void")
                nil [12360 12811])
            ("addReplyStatusLength" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12839 12854])
                    ("s" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [12855 12863])
                    ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12864 12875]))                  
                :type "void")
                nil [12813 12969])
            ("addReplyStatus" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12991 13006])
                    ("status" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [13007 13020]))                  
                :type "void")
                nil [12971 13075])
            ("addReplyStatusFormat" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13103 13118])
                    ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [13119 13135])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [13136 13140]))                  
                :type "void")
                nil [13077 13301])
            ("addDeferredMultiBulkLength" function
               (:pointer 1
                :arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13474 13489]))                  
                :type "void")
                nil [13441 13858])
            ("setDeferredMultiBulkLength" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13962 13977])
                    ("node" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [13978 13989])
                    ("length" variable (:type "long") (reparse-symbol arg-sub-list) [13990 14002]))                  
                :type "void")
                nil [13930 14840])
            ("addReplyDouble" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14897 14912])
                    ("d" variable (:type "double") (reparse-symbol arg-sub-list) [14913 14922]))                  
                :type "void")
                nil [14877 15126])
            ("addReplyLongLongWithPrefix" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15294 15309])
                    ("ll" variable (:type "long long") (reparse-symbol arg-sub-list) [15310 15323])
                    ("prefix" variable (:type "char") (reparse-symbol arg-sub-list) [15324 15336]))                  
                :type "void")
                nil [15262 15946])
            ("addReplyLongLong" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15970 15985])
                    ("ll" variable (:type "long long") (reparse-symbol arg-sub-list) [15986 15999]))                  
                :type "void")
                nil [15948 16164])
            ("addReplyMultiBulkLen" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16192 16207])
                    ("length" variable (:type "long") (reparse-symbol arg-sub-list) [16208 16220]))                  
                :type "void")
                nil [16166 16270])
            ("addReplyBulkLen" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16356 16371])
                    ("obj" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16372 16382]))                  
                :type "void")
                nil [16335 16808])
            ("addReplyBulk" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16869 16884])
                    ("obj" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16885 16895]))                  
                :type "void")
                nil [16851 16977])
            ("addReplyBulkCBuffer" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17039 17054])
                    ("p" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [17055 17063])
                    ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17064 17075]))                  
                :type "void")
                nil [17014 17180])
            ("addReplyBulkCString" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17251 17266])
                    ("s" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [17267 17275]))                  
                :type "void")
                nil [17226 17400])
            ("addReplyBulkLongLong" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17466 17481])
                    ("ll" variable (:type "long long") (reparse-symbol arg-sub-list) [17482 17495]))                  
                :type "void")
                nil [17440 17599])
            ("copyClientOutputBuffer" function
               (:arguments 
                  ( ("dst" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17793 17810])
                    ("src" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17811 17828]))                  
                :type "void")
                nil [17765 18014])
            ("acceptCommonHandler" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [18048 18055])
                    ("flags" variable (:type "int") (reparse-symbol arg-sub-list) [18056 18066]))                  
                :type "void")
                nil [18016 19117])
            ("acceptTcpHandler" function
               (:arguments 
                  ( ("el" variable
                       (:pointer 1
                        :type ("aeEventLoop" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19141 19157])
                    ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [19158 19165])
                    ("privdata" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [19166 19181])
                    ("mask" variable (:type "int") (reparse-symbol arg-sub-list) [19182 19191]))                  
                :type "void")
                nil [19119 19588])
            ("acceptUnixHandler" function
               (:arguments 
                  ( ("el" variable
                       (:pointer 1
                        :type ("aeEventLoop" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19613 19629])
                    ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [19630 19637])
                    ("privdata" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [19638 19653])
                    ("mask" variable (:type "int") (reparse-symbol arg-sub-list) [19654 19663]))                  
                :type "void")
                nil [19590 20056])
            ("freeClientArgv" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20086 20101]))                  
                :type "void")
                nil [20059 20220])
            ("disconnectSlaves" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [20423 20428]))                  
                :type "void")
                nil [20401 20572])
            ("freeClient" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20590 20605]))                  
                :type "void")
                nil [20574 23571])
            ("freeClientAsync" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23894 23909]))                  
                :type "void")
                nil [23873 24040])
            ("freeClientsInAsyncFreeQueue" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [24075 24080]))                  
                :type "void")
                nil [24042 24355])
            ("sendReplyToClient" function
               (:arguments 
                  ( ("el" variable
                       (:pointer 1
                        :type ("aeEventLoop" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24380 24396])
                    ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [24397 24404])
                    ("privdata" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [24405 24420])
                    ("mask" variable (:type "int") (reparse-symbol arg-sub-list) [24421 24430]))                  
                :type "void")
                nil [24357 27488])
            ("resetClient" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27572 27587]))                  
                :type "void")
                nil [27555 27817])
            ("processInlineBuffer" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27843 27858]))                  
                :type "int")
                nil [27819 28950])
            ("setProtocolError" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29094 29109])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [29110 29118]))                  
                :type "void")
                nil [29065 29419])
            ("processMultibulkBuffer" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29448 29463]))                  
                :type "int")
                nil [29421 34291])
            ("processInputBuffer" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [34317 34332]))                  
                :type "void")
                nil [34293 35705])
            ("readQueryFromClient" function
               (:arguments 
                  ( ("el" variable
                       (:pointer 1
                        :type ("aeEventLoop" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [35732 35748])
                    ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [35749 35756])
                    ("privdata" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [35757 35772])
                    ("mask" variable (:type "int") (reparse-symbol arg-sub-list) [35773 35782]))                  
                :type "void")
                nil [35707 37867])
            ("getClientsMaxBuffers" function
               (:arguments 
                  ( ("longest_output_list" variable
                       (:pointer 1
                        :type "unsigned long")
                        (reparse-symbol arg-sub-list) [37895 37930])
                    ("biggest_input_buffer" variable
                       (:pointer 1
                        :type "unsigned long")
                        (reparse-symbol arg-sub-list) [37957 37993]))                  
                :type "void")
                nil [37869 38405])
            ("getClientInfoString" function
               (:arguments 
                  ( ("client" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [38500 38520]))                  
                :type ("sds" type (:type "class") nil nil))
                nil [38476 40556])
            ("getAllClientsInfoString" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [40586 40591]))                  
                :type ("sds" type (:type "class") nil nil))
                nil [40558 40957])
            ("clientCommand" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [40978 40993]))                  
                :type "void")
                nil [40959 43357])
            ("rewriteClientCommandVector" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43570 43585])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [43586 43595])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [43596 43600]))                  
                :type "void")
                nil [43538 44384])
            ("rewriteClientCommandArgument" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44537 44552])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [44553 44559])
                    ("newval" variable
                       (:pointer 1
                        :type ("robj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44560 44573]))                  
                :type "void")
                nil [44503 44945])
            ("getClientOutputBufferMemoryUsage" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45679 45694]))                  
                :type "unsigned long")
                nil [45632 45832])
            ("getClientLimitClass" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [46221 46236]))                  
                :type "int")
                nil [46197 46475])
            ("getClientLimitClassByName" function
               (:arguments 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [46507 46518]))                  
                :type "int")
                nil [46477 46778])
            ("getClientLimitClassName" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [46810 46819])
                    ("" variable (:type ("" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [46814 46820]))                  
                :type "char")
                nil [46780 47089])
            ("checkClientOutputBufferLimits" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [47412 47427]))                  
                :type "int")
                nil [47378 48686])
            ("asyncCloseClientOnOutputBufferLimitReached" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("redisClient" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49171 49186]))                  
                :type "void")
                nil [49123 49583])
            ("flushSlavesOutputBuffers" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [49754 49759]))                  
                :type "void")
                nil [49724 50205]))          
      :file "networking.c"
      :pointmax 50206
      :fsize 50205
      :lastmodtime '(20863 50188 0 0)
      :unmatched-syntax nil))
  :file "!Users!huangyong!games!redis-2.6.13!src!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
