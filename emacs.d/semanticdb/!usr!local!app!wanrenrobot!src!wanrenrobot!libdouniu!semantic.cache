;; Object libdouniu/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "libdouniu/"
  :tables
  (list
    (semanticdb-table "deck.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("algorithm" include (:system-flag t) nil [1 21])
            ("deck.h" include nil nil [22 39])
            ("card_arr" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
0x01, 0x11, 0x21, 0x31,		//A 14 
0x02, 0x12, 0x22, 0x32,		//2 15
0x03, 0x13, 0x23, 0x33,		//3 3
0x04, 0x14, 0x24, 0x34,		//4 4
0x05, 0x15, 0x25, 0x35,		//5 5
0x06, 0x16, 0x26, 0x36,		//6 6
0x07, 0x17, 0x27, 0x37,		//7 7
0x08, 0x18, 0x28, 0x38,		//8 8
0x09, 0x19, 0x29, 0x39,		//9 9
0x0A, 0x1A, 0x2A, 0x3A,		//10 10
0x0B, 0x1B, 0x2B, 0x3B,		//J 11
0x0C, 0x1C, 0x2C, 0x3C,		//Q 12
0x0D, 0x1D, 0x2D, 0x3D,		//K 13
}"
                :type "int")
                nil [41 480])
            ("fill" function
               (:parent "Deck"
                :type "void")
                nil [482 590])
            ("empty" function
               (:parent "Deck"
                :type "void")
                nil [592 630])
            ("count" function
               (:parent "Deck"
                :type "int")
                nil [632 681])
            ("push" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [699 709]))                  
                :type "bool")
                nil [683 751])
            ("pop" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [768 779]))                  
                :type "bool")
                nil [753 871])
            ("shuffle" function
               (:parent "Deck"
                :arguments 
                  ( ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [892 901]))                  
                :type "bool")
                nil [873 994])
            ("get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1022 1043]))                  
                :type "void")
                nil [996 1157])
            ("change_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1188 1196])
                    ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1197 1218]))                  
                :type "void")
                nil [1159 1361])
            ("has_hole_cards" function
               (:parent "Deck"
                :type "bool")
                nil [1363 1492])
            ("debug" function
               (:parent "Deck"
                :type "void")
                nil [1494 1542]))          
      :file "deck.cc"
      :pointmax 1543
      :fsize 1542
      :lastmodtime '(21932 46934 893131 480000)
      :unmatched-syntax nil)
    (semanticdb-table "deck.h"
      :file "deck.h"
      :fsize 465
      :lastmodtime '(21932 46934 893131 480000))
    (semanticdb-table "hole_cards.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("card_type.h" include nil nil [19 41])
            ("hole_cards.h" include nil nil [42 65])
            ("card_type_str" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
	(char *)\"CARD_TYPE_NONNIU\",
	(char *)\"CARD_TYPE_NIUDING\",
	(char *)\"CARD_TYPE_NIUER\",
	(char *)\"CARD_TYPE_NIUSAN\",
	(char *)\"CARD_TYPE_NIUSI\",
	(char *)\"CARD_TYPE_NIUWU\",
	(char *)\"CARD_TYPE_NIULIU\",
	(char *)\"CARD_TYPE_NIUQI\",
	(char *)\"CARD_TYPE_NIUBA\",
	(char *)\"CARD_TYPE_NIUJIU\",
	(char *)\"CARD_TYPE_NIUNIU\",
	(char *)\"CARD_TYPE_ZHADAN\",
    (char *)\"CARD_TYPE_JINNIU\",
	(char *)\"CARD_TYPE_WUXIAONIU\"
}"
                :type "char")
                nil [67 516])
            ("HoleCards" function
               (:constructor-flag t
                :parent "HoleCards"
                :type ("HoleCards" type (:type "class") nil nil))
                nil [518 572])
            ("add_card" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [599 609]))                  
                :type "void")
                nil [574 667])
            ("sort" function
               (:parent "HoleCards"
                :type "void")
                nil [669 729])
            ("analysis" function
               (:parent "HoleCards"
                :type "void")
                nil [731 4572])
            ("compare" function
               (:parent "HoleCards"
                :arguments 
                  ( ("hc" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4597 4611]))                  
                :type "int")
                nil [4574 4921])
            ("set_card_type" function
               (:parent "HoleCards"
                :arguments 
                  ( ("type" variable (:type "int") (reparse-symbol arg-sub-list) [4953 4962]))                  
                :type "void")
                nil [4923 4985])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5014 5035]))                  
                :type "void")
                nil [4987 5051])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5080 5100]))                  
                :type "void")
                nil [5053 5190])
            ("debug" function
               (:parent "HoleCards"
                :type "void")
                nil [5192 5301]))          
      :file "hole_cards.cc"
      :pointmax 5302
      :fsize 5301
      :lastmodtime '(21932 46934 892131 465000)
      :unmatched-syntax nil)
    (semanticdb-table "card.h"
      :file "card.h"
      :fsize 2921
      :lastmodtime '(21932 46934 892131 465000))
    (semanticdb-table "card_type.h"
      :file "card_type.h"
      :fsize 752
      :lastmodtime '(21932 46934 892131 465000))
    (semanticdb-table "hole_cards.h"
      :major-mode 'c-mode
      :tags 
        '( ("_HOLE_CARDS_H_" variable (:constant-flag t) nil [32 46])
            ("vector" include (:system-flag t) nil [48 65])
            ("algorithm" include (:system-flag t) nil [66 86])
            ("card.h" include nil nil [88 105])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [107 127])
            ("HoleCards" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [147 154])
                    ("HoleCards" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [156 168])
                    ("add_card" function
                       (:prototype-flag t
                        :arguments 
                          ( ("c" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [186 193]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [172 194])
                    ("sort" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [198 210])
                    ("analysis" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [214 230])
                    ("compare" function
                       (:prototype-flag t
                        :arguments 
                          ( ("hc" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [246 260]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [234 261])
                    ("set_card_type" function
                       (:prototype-flag t
                        :arguments 
                          ( ("type" variable (:type "int") (reparse-symbol arg-sub-list) [284 293]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [265 294])
                    ("clear" function (:type "void") (reparse-symbol classsubparts) [297 367])
                    ("copy_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("Card" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [388 409]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [372 410])
                    ("copy_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [429 449]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [413 450])
                    ("debug" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [453 466])
                    ("cards" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("Card" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [469 493])
                    ("kicker" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol classsubparts) [495 507])
                    ("oldcards" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("Card" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [509 536])
                    ("card_type" variable (:type "int") (reparse-symbol classsubparts) [540 554])
                    ("ratio" variable (:type "int") (reparse-symbol classsubparts) [556 566]))                  
                :type "class")
                nil [129 569]))          
      :file "hole_cards.h"
      :pointmax 599
      :fsize 598
      :lastmodtime '(21932 46934 893131 480000)
      :unmatched-syntax '((punctuation 367 . 368))
      :lexical-table 
        '(("_HOLE_CARDS_H_")
          )
))
  :file "!usr!local!app!wanrenrobot!src!wanrenrobot!libdouniu!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
