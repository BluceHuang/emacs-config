;; Object libzjh/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "libzjh/"
  :tables
  (list
    (semanticdb-table "deck.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("list" include (:system-flag t) nil [1 16])
            ("map" include (:system-flag t) nil [17 31])
            ("algorithm" include (:system-flag t) nil [32 52])
            ("deck.h" include nil nil [53 70])
            ("card_arr" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{ 0x01, 0x11, 0x21, 0x31,		//A 14
		0x02, 0x12, 0x22, 0x32,		//2 15
		0x03, 0x13, 0x23, 0x33,		//3 3
		0x04, 0x14, 0x24, 0x34,		//4 4
		0x05, 0x15, 0x25, 0x35,		//5 5
		0x06, 0x16, 0x26, 0x36,		//6 6
		0x07, 0x17, 0x27, 0x37,		//7 7
		0x08, 0x18, 0x28, 0x38,		//8 8
		0x09, 0x19, 0x29, 0x39,		//9 9
		0x0A, 0x1A, 0x2A, 0x3A,		//10 10
		0x0B, 0x1B, 0x2B, 0x3B,		//J 11
		0x0C, 0x1C, 0x2C, 0x3C,		//Q 12
		0x0D, 0x1D, 0x2D, 0x3D,		//K 13
		}"
                :type "int")
                nil [72 536])
            ("fill" function
               (:parent "Deck"
                :type "void")
                nil [538 646])
            ("empty" function
               (:parent "Deck"
                :type "void")
                nil [648 686])
            ("size" function
               (:parent "Deck"
                :type "int")
                nil [688 736])
            ("push" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [754 764]))                  
                :type "bool")
                nil [738 806])
            ("pop" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [823 834]))                  
                :type "bool")
                nil [808 924])
            ("myrandom" function
               (:arguments 
                  ( ("i" variable (:type "int") (reparse-symbol arg-sub-list) [939 945]))                  
                :type "int")
                nil [926 974])
            ("shuffle" function
               (:parent "Deck"
                :arguments 
                  ( ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [995 1004]))                  
                :type "bool")
                nil [976 1115])
            ("get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1143 1164]))                  
                :type "void")
                nil [1117 1277])
            ("get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1305 1326])
                    ("card_type" variable (:type "int") (reparse-symbol arg-sub-list) [1327 1341]))                  
                :type "void")
                nil [1279 1851])
            ("change_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1882 1903])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1904 1912]))                  
                :type "void")
                nil [1853 2054])
            ("get_baozi_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2088 2109]))                  
                :type "void")
                nil [2056 2488])
            ("get_shunjin_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2524 2545]))                  
                :type "void")
                nil [2490 3043])
            ("get_jinhua_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3078 3099]))                  
                :type "void")
                nil [3045 3599])
            ("get_shunzi_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3634 3655]))                  
                :type "void")
                nil [3601 4211])
            ("get_duizi_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4245 4266]))                  
                :type "void")
                nil [4213 5151])
            ("get_danpai_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5186 5207]))                  
                :type "void")
                nil [5153 5995])
            ("delete_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("tmp" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6021 6044]))                  
                :type "void")
                nil [5997 6280])
            ("debug" function
               (:parent "Deck"
                :type "void")
                nil [6282 6330])
            ("get_win_type" function
               (:parent "Deck"
                :type "int")
                nil [6332 8735])
            ("set_win_args" function
               (:parent "Deck"
                :arguments 
                  ( ("min" variable (:type "int") (reparse-symbol arg-sub-list) [8761 8769])
                    ("max" variable (:type "int") (reparse-symbol arg-sub-list) [8770 8778]))                  
                :type "void")
                nil [8737 8820])
            ("init_win_orders" function
               (:parent "Deck"
                :type "void")
                nil [8822 10243])
            ("generator_win_orders" function
               (:parent "Deck"
                :type "int")
                nil [10245 14512])
            ("deck_random" function
               (:parent "Deck"
                :arguments 
                  ( ("begin" variable (:type "int") (reparse-symbol arg-sub-list) [14536 14546])
                    ("end" variable (:type "int") (reparse-symbol arg-sub-list) [14547 14555]))                  
                :type "int")
                nil [14514 14633]))          
      :file "deck.cc"
      :pointmax 14634
      :fsize 14633
      :lastmodtime '(22213 11857 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "test.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("deck.h" include nil nil [19 36])
            ("hole_cards.h" include nil nil [37 60])
            ("string.h" include (:system-flag t) nil [61 80])
            ("map" include (:system-flag t) nil [81 95])
            ("cardmap" variable (:type ("map" type
                 (:template-specifier 
                    ( ("string" type nil nil nil)
                      ("int" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [98 123])
            ("card_type_str" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
    (const char *) \"CARD_TYPE_ERROR\",
    (const char *) \"CARD_TYPE_BAOZI\",
    (const char *) \"CARD_TYPE_SHUNJIN\",
    (const char *) \"CARD_TYPE_JINHUA\",
    (const char *) \"CARD_TYPE_SHUNZI\",
    (const char *) \"CARD_TYPE_DUIZI\",
    (const char *) \"CARD_TYPE_DANPAI\",
    (const char *) \"CARD_TYPE_TESHU\"
}"
                :type "char")
                nil [125 474])
            ("initCardMap" function (:type "void") nil [1157 2600])
            ("testzhatan" function (:type "void") nil [2602 3300])
            ("testwuhuaniu" function (:type "void") nil [3302 4063])
            ("random" function
               (:arguments 
                  ( ("start" variable (:type "int") (reparse-symbol arg-sub-list) [4076 4086])
                    ("end" variable (:type "int") (reparse-symbol arg-sub-list) [4087 4095])
                    ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [4096 4105]))                  
                :type "int")
                nil [4065 4191])
            ("random" function
               (:arguments 
                  ( ("start" variable (:type "int") (reparse-symbol arg-sub-list) [4204 4214])
                    ("end" variable (:type "int") (reparse-symbol arg-sub-list) [4215 4223]))                  
                :type "int")
                nil [4193 4304])
            ("get_cards_normal" function (:type "void") nil [4306 6547])
            ("testzhadan1" function (:type "void") nil [6550 7393])
            ("get_cards_normal1" function (:type "void") nil [7396 8897])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [8910 8919])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [8920 8933]))                  
                :type "int")
                nil [8901 12502]))          
      :file "test.cc"
      :pointmax 12504
      :fsize 13325
      :lastmodtime '(22213 11857 0 0)
      :unmatched-syntax nil))
  :file "!usr!local!zjhapp!wanrenbonus!libzjh!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
