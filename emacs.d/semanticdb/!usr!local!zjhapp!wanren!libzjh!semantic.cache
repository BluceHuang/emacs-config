;; Object libzjh/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "libzjh/"
  :tables
  (list
    (semanticdb-table "card_type.h"
      :major-mode 'c++-mode
      :tags 
        '( ("_CARD_TYPE_H_" variable (:constant-flag t) nil [31 44])
            ("CardType" type
               (:members 
                  ( ("CARD_TYPE_ERROR" variable
                       (:constant-flag t
                        :default-value (81 82)
                        :type "int")
                        (reparse-symbol enumsubparts) [63 82])
                    ("CARD_TYPE_BAOZI" variable
                       (:constant-flag t
                        :default-value (113 114)
                        :type "int")
                        (reparse-symbol enumsubparts) [95 114])
                    ("CARD_TYPE_SHUNJIN" variable
                       (:constant-flag t
                        :default-value (145 146)
                        :type "int")
                        (reparse-symbol enumsubparts) [125 146])
                    ("CARD_TYPE_JINHUA" variable
                       (:constant-flag t
                        :default-value (179 180)
                        :type "int")
                        (reparse-symbol enumsubparts) [160 180])
                    ("CARD_TYPE_SHUNZI" variable
                       (:constant-flag t
                        :default-value (210 211)
                        :type "int")
                        (reparse-symbol enumsubparts) [191 211])
                    ("CARD_TYPE_DUIZI" variable
                       (:constant-flag t
                        :default-value (243 244)
                        :type "int")
                        (reparse-symbol enumsubparts) [225 244])
                    ("CARD_TYPE_DANPAI" variable
                       (:constant-flag t
                        :default-value (274 275)
                        :type "int")
                        (reparse-symbol enumsubparts) [255 275])
                    ("CARD_TYPE_TESHU" variable
                       (:constant-flag t
                        :default-value (304 305)
                        :type "int")
                        (reparse-symbol enumsubparts) [286 305]))                  
                :type "enum")
                nil [46 323]))          
      :file "card_type.h"
      :pointmax 352
      :fsize 387
      :lastmodtime '(21946 59475 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_CARD_TYPE_H_")
          )
)
    (semanticdb-table "deck.h"
      :major-mode 'c++-mode
      :tags 
        '( ("_DECK_H_" variable (:constant-flag t) nil [26 34])
            ("vector" include (:system-flag t) nil [36 53])
            ("card.h" include nil nil [55 72])
            ("hole_cards.h" include nil nil [73 96])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [98 118])
            ("tagWinStatus" type
               (:members 
                  ( ("WIN_STATU_ALL_WIN" variable
                       (:constant-flag t
                        :default-value (172 173)
                        :type "int")
                        (reparse-symbol enumsubparts) [152 173])
                    ("WIN_STATU_ALL_LOSE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [179 198])
                    ("WIN_STATU_ONE_WIN1" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [203 222])
                    ("WIN_STATU_ONE_WIN2" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [227 246])
                    ("WIN_STATU_ONE_WIN3" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [251 270])
                    ("WIN_STATU_ONE_WIN4" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [275 294])
                    ("WIN_STATU_TWO_WIN12" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [299 319])
                    ("WIN_STATU_TWO_WIN13" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [324 344])
                    ("WIN_STATU_TWO_WIN14" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [349 369])
                    ("WIN_STATU_TWO_WIN23" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [374 394])
                    ("WIN_STATU_TWO_WIN24" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [399 419])
                    ("WIN_STATU_TWO_WIN34" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [424 444])
                    ("WIN_STATU_THREE_WIN123" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [449 472])
                    ("WIN_STATU_THREE_WIN124" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [477 500])
                    ("WIN_STATU_THREE_WIN134" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [505 528])
                    ("WIN_STATU_THREE_WIN234" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [533 556])
                    ("WIN_STATU_SIZE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [562 578]))                  
                :type "enum")
                nil [120 588])
            ("WinStatus" type
               (:typedef ("tagWinStatus" type (:type "enum") nil nil)
                :type "typedef")
                nil [120 588])
            ("Deck" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [603 610])
                    ("fill" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [612 624])
                    ("empty" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [626 639])
                    ("size" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [641 658])
                    ("push" function
                       (:prototype-flag t
                        :arguments 
                          ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [672 682]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [662 683])
                    ("pop" function
                       (:prototype-flag t
                        :arguments 
                          ( ("card" variable
                               (:reference 1
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [694 705]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [685 706])
                    ("shuffle" function
                       (:prototype-flag t
                        :arguments 
                          ( ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [721 730]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [708 731])
                    ("get_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [755 776]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [735 777])
                    ("get_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [799 820])
                            ("card_type" variable (:type "int") (reparse-symbol arg-sub-list) [821 835]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [779 836])
                    ("change_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [861 882])
                            ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [883 891]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [838 892])
                    ("debug" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [894 907])
                    ("set_win_args" function
                       (:prototype-flag t
                        :arguments 
                          ( ("min" variable (:type "int") (reparse-symbol arg-sub-list) [931 939])
                            ("max" variable (:type "int") (reparse-symbol arg-sub-list) [940 948]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [913 949])
                    ("get_win_type" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [954 974])
                    ("init_win_orders" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [979 1002])
                    ("generator_win_orders" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1007 1035])
                    ("public" label nil (reparse-symbol classsubparts) [1036 1043])
                    ("cards" variable (:type ("vector" type
                         (:template-specifier 
                            ( ("Card" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1045 1064])
                    ("win_orders" variable (:type ("vector" type
                         (:template-specifier 
                            ( ("int" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1070 1093])
                    ("win_orders_back" variable (:type ("vector" type
                         (:template-specifier 
                            ( ("int" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1098 1126])
                    ("win_min" variable (:type "int") (reparse-symbol classsubparts) [1131 1143])
                    ("win_max" variable (:type "int") (reparse-symbol classsubparts) [1166 1178])
                    ("private" label nil (reparse-symbol classsubparts) [1199 1207])
                    ("deck_random" function
                       (:prototype-flag t
                        :arguments 
                          ( ("begin" variable (:type "int") (reparse-symbol arg-sub-list) [1228 1238])
                            ("end" variable (:type "int") (reparse-symbol arg-sub-list) [1239 1247]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1212 1248])
                    ("get_baozi_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1276 1297]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1250 1298])
                    ("get_shunjin_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1328 1349]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1300 1350])
                    ("get_jinhua_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1379 1400]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1352 1401])
                    ("get_shunzi_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1430 1451]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1403 1452])
                    ("get_duizi_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1480 1501]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1454 1502])
                    ("get_danpai_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1531 1552]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1504 1553])
                    ("get_teshu_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1581 1602]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1555 1603])
                    ("delete_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tmp" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("Card" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1623 1646]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1605 1647]))                  
                :type "class")
                nil [590 1650]))          
      :file "deck.h"
      :pointmax 1674
      :fsize 1705
      :lastmodtime '(22184 17380 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_DECK_H_")
          )
)
    (semanticdb-table "hole_cards.h"
      :major-mode 'c++-mode
      :tags 
        '( ("_HOLE_CARDS_H_" variable (:constant-flag t) nil [32 46])
            ("vector" include (:system-flag t) nil [48 65])
            ("algorithm" include (:system-flag t) nil [66 86])
            ("card.h" include nil nil [88 105])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [107 127])
            ("HoleCards" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [147 154])
                    ("HoleCards" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [156 168])
                    ("add_card" function
                       (:prototype-flag t
                        :arguments 
                          ( ("c" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [185 192]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [171 193])
                    ("qsort_compare" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("pCards1" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [224 244])
                            ("pCards2" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [245 265]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [199 266])
                    ("sort" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [269 281])
                    ("analysis" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [284 300])
                    ("compare" function
                       (:prototype-flag t
                        :arguments 
                          ( ("hc" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [315 329]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [303 330])
                    ("clear" function (:type "void") (reparse-symbol classsubparts) [333 401])
                    ("copy_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("Card" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [423 444]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [407 445])
                    ("copy_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [464 484]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [448 485])
                    ("size" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [488 505])
                    ("debug" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [508 521])
                    ("cards" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("Card" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [524 548])
                    ("card_type" variable (:type "int") (reparse-symbol classsubparts) [551 565])
                    ("is_teshu" variable (:type "int") (reparse-symbol classsubparts) [567 580]))                  
                :type "class")
                nil [129 583]))          
      :file "hole_cards.h"
      :pointmax 613
      :fsize 612
      :lastmodtime '(21946 59475 0 0)
      :unmatched-syntax '((punctuation 403 . 404))
      :lexical-table 
        '(("_HOLE_CARDS_H_")
          )
)
    (semanticdb-table "hole_cards.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("card_type.h" include nil nil [19 41])
            ("hole_cards.h" include nil nil [42 65])
            ("card_type_str" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{ (char *) \"CARD_TYPE_ERROR\",
		(char *) \"CARD_TYPE_BAOZI\",
		(char *) \"CARD_TYPE_SHUNJIN\",
		(char *) \"CARD_TYPE_JINHUA\",
		(char *) \"CARD_TYPE_SHUNZI\",
		(char *) \"CARD_TYPE_DUIZI\",
		(char *) \"CARD_TYPE_DANPAI\",
		(char *) \"CARD_TYPE_TESHU\" }"
                :type "char")
                nil [67 350])
            ("HoleCards" function
               (:constructor-flag t
                :parent "HoleCards"
                :type ("HoleCards" type (:type "class") nil nil))
                nil [352 409])
            ("add_card" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [436 446]))                  
                :type "void")
                nil [411 474])
            ("sort" function
               (:parent "HoleCards"
                :type "void")
                nil [476 536])
            ("analysis" function
               (:parent "HoleCards"
                :type "void")
                nil [538 2357])
            ("qsort_compare" function
               (:parent "HoleCards"
                :arguments 
                  ( ("pCards1" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [2388 2408])
                    ("pCards2" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [2409 2429]))                  
                :type "int")
                nil [2359 2655])
            ("compare" function
               (:parent "HoleCards"
                :arguments 
                  ( ("hc" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2680 2694]))                  
                :type "int")
                nil [2657 3327])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3356 3377]))                  
                :type "void")
                nil [3329 3393])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3422 3442]))                  
                :type "void")
                nil [3395 3532])
            ("size" function
               (:parent "HoleCards"
                :type "int")
                nil [3534 3587])
            ("debug" function
               (:parent "HoleCards"
                :type "void")
                nil [3589 3698]))          
      :file "hole_cards.cc"
      :pointmax 3699
      :fsize 3698
      :lastmodtime '(21946 59475 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "card.h"
      :major-mode 'c++-mode
      :tags 
        '( ("_CARD_H_" variable (:constant-flag t) nil [26 34])
            ("string" include (:system-flag t) nil [36 53])
            ("iostream" include (:system-flag t) nil [54 73])
            ("cstdio" include (:system-flag t) nil [74 91])
            ("vector" include (:system-flag t) nil [92 109])
            ("map" include (:system-flag t) nil [110 124])
            ("algorithm" include (:system-flag t) nil [125 145])
            ("card_type.h" include nil nil [147 169])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [171 191])
            ("Card" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [702 709])
                    ((((0) "Face")) type (:superclasses ("" type (:members (("Two" variable (:constant-flag t :default-value (735 736) :type "int") (reparse-symbol enumsubparts) [729 736]) ("Three" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [740 746]) ("Four" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [749 754]) ("Five" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [757 762]) ("Six" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [765 769]) ("Seven" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [772 778]) ("Eight" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [781 787]) ("Nine" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [790 795]) ("Ten" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [798 802]) ("Jack" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [805 810]) ("Queen" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [813 819]) ("King" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [822 827]) ("Ace" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [830 834]) ("FirstFace" variable (:constant-flag t :default-value (850 853) :type "int") (reparse-symbol enumsubparts) [838 853]) ("LastFace" variable (:constant-flag t :default-value (868 871) :type "int") (reparse-symbol enumsubparts) [857 871])) :type "enum") nil nil) :type "typedef") (reparse-symbol classsubparts) [711 880])
                    ((((0) "Suit")) type (:superclasses ("" type (:members (("Diamonds" variable (:constant-flag t :default-value (912 913) :type "int") (reparse-symbol enumsubparts) [901 913]) ("Clubs" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [915 921]) ("Hearts" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [922 929]) ("Spades" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [930 937]) ("FirstSuit" variable (:constant-flag t :default-value (953 961) :type "int") (reparse-symbol enumsubparts) [941 961]) ("LastSuit" variable (:constant-flag t :default-value (974 980) :type "int") (reparse-symbol enumsubparts) [963 980])) :type "enum") nil nil) :type "typedef") (reparse-symbol classsubparts) [883 989])
                    ((("face" 0 nil nil nil)) variable (:type "int") (reparse-symbol classsubparts) [992 1001])
                    ((("suit" 0 nil nil nil)) variable (:type "int") (reparse-symbol classsubparts) [1003 1012])
                    ((("value" 0 nil nil nil)) variable (:type "int") (reparse-symbol classsubparts) [1015 1025])
                    ("Card" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1028 1035])
                    ("get_card" function
                       (:prototype-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1080 1103]))                  
                :type "class")
                nil [689 2686]))          
      :file "card.h"
      :pointmax 2710
      :fsize 2725
      :lastmodtime '(21946 59475 0 0)
      :unmatched-syntax '((semantic-list 2474 . 2683) (semantic-list 2426 . 2472) (symbol 2416 . 2426) (VOID 2411 . 2415) (STATIC 2404 . 2410) (semantic-list 2201 . 2401) (semantic-list 2155 . 2199) (symbol 2145 . 2155) (VOID 2140 . 2144) (STATIC 2133 . 2139) (semantic-list 2074 . 2130) (semantic-list 2050 . 2072) (symbol 2032 . 2050) (VOID 2027 . 2031) (STATIC 2020 . 2026) (semantic-list 1962 . 2017) (semantic-list 1938 . 1960) (symbol 1921 . 1938) (VOID 1916 . 1920) (STATIC 1909 . 1915) (semantic-list 1830 . 1906) (semantic-list 1798 . 1828) (symbol 1782 . 1798) (BOOL 1777 . 1781) (STATIC 1770 . 1776) (semantic-list 1690 . 1767) (semantic-list 1658 . 1688) (symbol 1643 . 1658) (BOOL 1638 . 1642) (STATIC 1631 . 1637) (semantic-list 1378 . 1628) (semantic-list 1346 . 1376) (symbol 1339 . 1346) (INT 1335 . 1338) (STATIC 1328 . 1334) (punctuation 1324 . 1325) (semantic-list 1291 . 1322) (CONST 1284 . 1289) (semantic-list 1268 . 1283) (punctuation 1267 . 1268) (punctuation 1266 . 1267) (OPERATOR 1257 . 1265) (BOOL 1252 . 1256) (punctuation 1249 . 1250) (semantic-list 1217 . 1247) (CONST 1210 . 1215) (semantic-list 1194 . 1209) (punctuation 1193 . 1194) (OPERATOR 1184 . 1192) (BOOL 1179 . 1183) (punctuation 1176 . 1177) (semantic-list 1144 . 1174) (CONST 1137 . 1142) (semantic-list 1121 . 1136) (punctuation 1120 . 1121) (OPERATOR 1111 . 1119) (BOOL 1106 . 1110) (punctuation 1076 . 1077) (semantic-list 1067 . 1076) (symbol 1058 . 1067) (VOID 1053 . 1057) (punctuation 1050 . 1051) (semantic-list 1041 . 1050) (symbol 1037 . 1041))
      :lexical-table 
        '(("_CARD_H_")
          )
)
    (semanticdb-table "card.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("face_symbols" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{ '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K', 'A' }"
                :type "char")
                nil [20 117])
            ("suit_symbols" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{ 'd', 'c', 'h', 's' }"
                :type "char")
                nil [119 171])
            ("Card" function
               (:constructor-flag t
                :parent "Card"
                :type ("Card" type (:type "class") nil nil))
                nil [173 215])
            ("Card" function
               (:constructor-flag t
                :parent "Card"
                :arguments 
                  ( ("val" variable (:type "int") (reparse-symbol arg-sub-list) [228 236]))                  
                :type ("Card" type (:type "class") nil nil))
                nil [217 372])
            ("set_value" function
               (:parent "Card"
                :arguments 
                  ( ("val" variable (:type "int") (reparse-symbol arg-sub-list) [395 403]))                  
                :type "void")
                nil [374 540])
            ("get_card" function
               (:parent "Card"
                :type ("string" type (:type "class") nil nil))
                nil [542 774]))          
      :file "card.cc"
      :pointmax 775
      :fsize 774
      :lastmodtime '(21946 59475 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "test.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("deck.h" include nil nil [19 36])
            ("hole_cards.h" include nil nil [37 60])
            ("string.h" include (:system-flag t) nil [61 80])
            ("map" include (:system-flag t) nil [81 95])
            ("iostream" include (:system-flag t) nil [96 115])
            ("codecvt" include (:system-flag t) nil [116 134])
            ("iconv.h" include nil nil [135 153])
            ("cardmap" variable (:type ("map" type
                 (:template-specifier 
                    ( ("string" type nil nil nil)
                      ("int" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [154 179])
            ("card_type_str" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
    (const char *) \"CARD_TYPE_ERROR\",
    (const char *) \"CARD_TYPE_BAOZI\",
    (const char *) \"CARD_TYPE_SHUNJIN\",
    (const char *) \"CARD_TYPE_JINHUA\",
    (const char *) \"CARD_TYPE_SHUNZI\",
    (const char *) \"CARD_TYPE_DUIZI\",
    (const char *) \"CARD_TYPE_DANPAI\",
    (const char *) \"CARD_TYPE_TESHU\"
}"
                :type "char")
                nil [216 565])
            ("initCardMap" function (:type "void") nil [1248 2691])
            ("testzhatan" function (:type "void") nil [2693 3391])
            ("testwuhuaniu" function (:type "void") nil [3393 4154])
            ("random" function
               (:arguments 
                  ( ("start" variable (:type "int") (reparse-symbol arg-sub-list) [4167 4177])
                    ("end" variable (:type "int") (reparse-symbol arg-sub-list) [4178 4186])
                    ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [4187 4196]))                  
                :type "int")
                nil [4156 4282])
            ("random" function
               (:arguments 
                  ( ("start" variable (:type "int") (reparse-symbol arg-sub-list) [4295 4305])
                    ("end" variable (:type "int") (reparse-symbol arg-sub-list) [4306 4314]))                  
                :type "int")
                nil [4284 4395])
            ("get_cards_normal" function (:type "void") nil [4397 6638])
            ("testzhadan1" function (:type "void") nil [6641 7484])
            ("get_cards_normal1" function (:type "void") nil [7487 8988])
            ("code_convert" function
               (:arguments 
                  ( ("from_charset" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [9008 9027])
                    ("to_charset" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [9027 9044])
                    ("inbuf" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [9044 9062])
                    ("inlen" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9063 9076])
                    ("outbuf" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [9076 9089])
                    ("outlen" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9090 9104]))                  
                :type "int")
                nil [8991 9465])
            ("u2g" function
               (:arguments 
                  ( ("inbuf" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [9499 9517])
                    ("inlen" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9518 9531])
                    ("outbuf" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [9532 9545])
                    ("outlen" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9546 9560]))                  
                :type "int")
                nil [9491 9634])
            ("player_hole_cards" variable
               (:dereference 1
                :type ("HoleCards" type (:type "class") nil nil))
                nil [9637 9668])
            ("banker_hole_cards" variable (:type ("HoleCards" type (:type "class") nil nil)) nil [9669 9697])
            ("type_ratios" variable
               (:dereference 1
                :type "int")
                nil [9698 9717])
            ("wins" variable
               (:dereference 1
                :default-value "{ 0, }"
                :type "int")
                nil [9719 9740])
            ("set_cards_mode" function
               (:arguments 
                  ( ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [9762 9771]))                  
                :type "void")
                nil [9742 15423])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [15434 15443])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [15444 15457]))                  
                :type "int")
                nil [15425 20650]))          
      :file "test.cc"
      :pointmax 20652
      :fsize 21817
      :lastmodtime '(22241 8006 0 0)
      :unmatched-syntax '((semantic-list 195 . 212) (symbol 188 . 195) (string 200 . 211) (symbol 181 . 187) (string 200 . 211) (punctuation 180 . 181)))
    (semanticdb-table "deck.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("list" include (:system-flag t) nil [1 16])
            ("map" include (:system-flag t) nil [17 31])
            ("algorithm" include (:system-flag t) nil [32 52])
            ("deck.h" include nil nil [53 70])
            ("card_arr" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{ 0x01, 0x11, 0x21, 0x31,		//A 14
		0x02, 0x12, 0x22, 0x32,		//2 15
		0x03, 0x13, 0x23, 0x33,		//3 3
		0x04, 0x14, 0x24, 0x34,		//4 4
		0x05, 0x15, 0x25, 0x35,		//5 5
		0x06, 0x16, 0x26, 0x36,		//6 6
		0x07, 0x17, 0x27, 0x37,		//7 7
		0x08, 0x18, 0x28, 0x38,		//8 8
		0x09, 0x19, 0x29, 0x39,		//9 9
		0x0A, 0x1A, 0x2A, 0x3A,		//10 10
		0x0B, 0x1B, 0x2B, 0x3B,		//J 11
		0x0C, 0x1C, 0x2C, 0x3C,		//Q 12
		0x0D, 0x1D, 0x2D, 0x3D,		//K 13
		}"
                :type "int")
                nil [72 536])
            ("fill" function
               (:parent "Deck"
                :type "void")
                nil [538 646])
            ("empty" function
               (:parent "Deck"
                :type "void")
                nil [648 686])
            ("size" function
               (:parent "Deck"
                :type "int")
                nil [688 736])
            ("push" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [754 764]))                  
                :type "bool")
                nil [738 806])
            ("pop" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [823 834]))                  
                :type "bool")
                nil [808 924])
            ("myrandom" function
               (:arguments 
                  ( ("i" variable (:type "int") (reparse-symbol arg-sub-list) [939 945]))                  
                :type "int")
                nil [926 974])
            ("shuffle" function
               (:parent "Deck"
                :arguments 
                  ( ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [995 1004]))                  
                :type "bool")
                nil [976 1115])
            ("get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1143 1164]))                  
                :type "void")
                nil [1117 1277])
            ("get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1305 1326])
                    ("card_type" variable (:type "int") (reparse-symbol arg-sub-list) [1327 1341]))                  
                :type "void")
                nil [1279 1851])
            ("change_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1882 1903])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1904 1912]))                  
                :type "void")
                nil [1853 2054])
            ("get_baozi_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2088 2109]))                  
                :type "void")
                nil [2056 2488])
            ("get_shunjin_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2524 2545]))                  
                :type "void")
                nil [2490 3043])
            ("get_jinhua_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3078 3099]))                  
                :type "void")
                nil [3045 3599])
            ("get_shunzi_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3634 3655]))                  
                :type "void")
                nil [3601 4211])
            ("get_duizi_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4245 4266]))                  
                :type "void")
                nil [4213 5151])
            ("get_danpai_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5186 5207]))                  
                :type "void")
                nil [5153 5995])
            ("delete_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("tmp" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6021 6044]))                  
                :type "void")
                nil [5997 6280])
            ("debug" function
               (:parent "Deck"
                :type "void")
                nil [6282 6330])
            ("get_win_type" function
               (:parent "Deck"
                :type "int")
                nil [6332 8735])
            ("set_win_args" function
               (:parent "Deck"
                :arguments 
                  ( ("min" variable (:type "int") (reparse-symbol arg-sub-list) [8761 8769])
                    ("max" variable (:type "int") (reparse-symbol arg-sub-list) [8770 8778]))                  
                :type "void")
                nil [8737 8820])
            ("init_win_orders" function
               (:parent "Deck"
                :type "void")
                nil [8822 10243])
            ("generator_win_orders" function
               (:parent "Deck"
                :type "int")
                nil [10245 14512])
            ("deck_random" function
               (:parent "Deck"
                :arguments 
                  ( ("begin" variable (:type "int") (reparse-symbol arg-sub-list) [14536 14546])
                    ("end" variable (:type "int") (reparse-symbol arg-sub-list) [14547 14555]))                  
                :type "int")
                nil [14514 14633]))          
      :file "deck.cc"
      :pointmax 14634
      :fsize 14633
      :lastmodtime '(22184 33164 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "test1.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("map" include (:system-flag t) nil [2 16])
            ("vector" include (:system-flag t) nil [17 34])
            ("list" include (:system-flag t) nil [35 50])
            ("iostream" include (:system-flag t) nil [51 70])
            ("sstream" include (:system-flag t) nil [71 89])
            ("string" include (:system-flag t) nil [90 107])
            ("algorithm" include (:system-flag t) nil [108 128])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [130 150])
            ("main" function (:type "int") nil [152 402]))          
      :file "test1.cc"
      :pointmax 403
      :fsize 676
      :lastmodtime '(22186 65147 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "Makefile"
      :major-mode 'makefile-bsdmake-mode
      :tags nil
      :file "Makefile"
      :pointmax 959
      :fsize 1008
      :lastmodtime '(22184 10118 0 0)
      :unmatched-syntax nil))
  :file "!usr!local!zjhapp!wanren!libzjh!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
