;; Object libmajiang/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "libmajiang/"
  :tables
  (list
    (semanticdb-table "hole_cards.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("card_type.h" include nil nil [19 41])
            ("hole_cards.h" include nil nil [42 65])
            ("HoleCards::card_types" variable (:type ("std::priority_queue" type
                 (:template-specifier 
                    ( ("CardTypePriority" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [378 438])
            ("HoleCards::card_types_back" variable (:type ("std::priority_queue" type
                 (:template-specifier 
                    ( ("CardTypePriority" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [439 504])
            ("HoleCards" function
               (:constructor-flag t
                :parent "HoleCards"
                :type ("HoleCards" type (:type "class") nil nil))
                nil [506 696])
            ("init" function
               (:parent "HoleCards"
                :arguments 
                  ( ("duizi" variable (:type "int") (reparse-symbol arg-sub-list) [719 729])
                    ("ghost" variable (:type "int") (reparse-symbol arg-sub-list) [730 740])
                    ("gh_card" variable (:type "int") (reparse-symbol arg-sub-list) [741 753])
                    ("feng" variable (:type "int") (reparse-symbol arg-sub-list) [754 763]))                  
                :type "void")
                nil [698 858])
            ("add_card" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [885 895]))                  
                :type "void")
                nil [860 953])
            ("sort" function
               (:parent "HoleCards"
                :type "void")
                nil [955 1014])
            ("analysis" function
               (:parent "HoleCards"
                :type "void")
                nil [1016 3949])
            ("compare" function
               (:parent "HoleCards"
                :arguments 
                  ( ("hc" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3974 3988]))                  
                :type "int")
                nil [3951 4003])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4032 4053]))                  
                :type "void")
                nil [4005 4069])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4098 4118]))                  
                :type "void")
                nil [4071 4208])
            ("size" function
               (:parent "HoleCards"
                :type "int")
                nil [4210 4263])
            ("debug" function
               (:parent "HoleCards"
                :type "void")
                nil [4265 4378])
            ("handler_chu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [4408 4418]))                  
                :type "void")
                nil [4380 4759])
            ("handler_chi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [4789 4799])
                    ("pattern" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [4800 4815])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [4816 4825]))                  
                :type "void")
                nil [4761 5884])
            ("handler_peng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [5915 5925])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [5926 5935]))                  
                :type "void")
                nil [5886 6945])
            ("handler_gang" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [6976 6986])
                    ("gang_flag" variable (:type "int") (reparse-symbol arg-sub-list) [6987 7001])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [7002 7011]))                  
                :type "void")
                nil [6947 9271])
            ("permit_ting" function
               (:parent "HoleCards"
                :type "bool")
                nil [9273 9389])
            ("permit_gang" function
               (:parent "HoleCards"
                :type "bool")
                nil [9391 10971])
            ("permit_gang" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [11001 11011]))                  
                :type "bool")
                nil [10973 11714])
            ("permit_peng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [11744 11754]))                  
                :type "bool")
                nil [11716 12244])
            ("is_shunzi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card1" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12272 12284])
                    ("card2" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12285 12297])
                    ("card3" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12298 12310]))                  
                :type "bool")
                nil [12246 14086])
            ("is_same" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14112 14123])
                    ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14124 14135]))                  
                :type "bool")
                nil [14088 14340])
            ("is_same" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14366 14377])
                    ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14378 14389])
                    ("card3" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14390 14401]))                  
                :type "bool")
                nil [14342 14538])
            ("has_card" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [14824 14834])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [14835 14844]))                  
                :type "bool")
                nil [14799 15426])
            ("permit_hu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [15454 15464]))                  
                :type "bool")
                nil [15428 16712])
            ("permit_hu" function
               (:parent "HoleCards"
                :type "bool")
                nil [16714 17897])
            ("permit_chi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [17926 17936]))                  
                :type "bool")
                nil [17899 19381])
            ("is_complete" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [19411 19432])
                    ("mhole_cards" variable
                       (:pointer 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("std::vector" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [19433 19478]))                  
                :type "bool")
                nil [19383 24557])
            ("is_complete" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [24587 24608])
                    ("d1" variable (:type "int") (reparse-symbol arg-sub-list) [24609 24616])
                    ("d2" variable (:type "int") (reparse-symbol arg-sub-list) [24617 24624])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [24625 24634]))                  
                :type "bool")
                nil [24559 25456])
            ("handler_ting" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [25486 25496]))                  
                :type "int")
                nil [25458 26017])
            ("normal_cards_analysis" function
               (:parent "HoleCards"
                :arguments 
                  ( ("newcards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26057 26080])
                    ("value" variable (:type "int") (reparse-symbol arg-sub-list) [26081 26091])
                    ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26092 26103]))                  
                :type "bool")
                nil [26019 26823])
            ("hu_cards_analysis" function
               (:parent "HoleCards"
                :arguments 
                  ( ("newcards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26859 26882]))                  
                :type "bool")
                nil [26825 29244])
            ("ghost_cards_analysis" function
               (:parent "HoleCards"
                :arguments 
                  ( ("newcards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29283 29306])
                    ("value" variable (:type "int") (reparse-symbol arg-sub-list) [29307 29317])
                    ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29318 29329]))                  
                :type "bool")
                nil [29246 31567])
            ("analysis" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31600 31610]))                  
                :type "void")
                nil [31575 33030])
            ("analysis_card_type" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [33067 33077]))                  
                :type "void")
                nil [33032 33874])
            ("is_duidui_hu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [33905 33926]))                  
                :type "bool")
                nil [33876 35062])
            ("is_peng_peng_hu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [35096 35117]))                  
                :type "bool")
                nil [35064 35538])
            ("is_shi_san_yao" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [35571 35592]))                  
                :type "bool")
                nil [35540 36499])
            ("register_type_handler" function
               (:parent "HoleCards"
                :arguments 
                  ( ("type" variable (:type "int") (reparse-symbol arg-sub-list) [36539 36548])
                    ("priority" variable (:type "int") (reparse-symbol arg-sub-list) [36549 36562]))                  
                :type "void")
                nil [36501 36662])
            ("clear_type_handler" function
               (:parent "HoleCards"
                :type "void")
                nil [36664 36853])
            ("handler_card_type_call" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [36894 36915]))                  
                :type "bool")
                nil [36855 42847])
            ("is_haohua_qi_xiao_dui" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [42895 42916]))                  
                :type "bool")
                nil [42857 43489])
            ("is_shuang_haohua_qi_xiao_dui" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [43545 43566]))                  
                :type "bool")
                nil [43500 44139])
            ("is_san_haohua_qi_xiao_dui" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [44192 44213]))                  
                :type "bool")
                nil [44150 44836])
            ("is_xiao_san_yuan" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [44878 44899]))                  
                :type "bool")
                nil [44845 46744])
            ("is_da_san_yuan" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [46784 46805]))                  
                :type "bool")
                nil [46753 48255])
            ("is_xiao_si_xi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [48294 48315]))                  
                :type "bool")
                nil [48264 50101])
            ("is_da_si_xi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [50138 50159]))                  
                :type "bool")
                nil [50110 51787])
            ("is_yao_jiu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [51822 51843]))                  
                :type "bool")
                nil [51795 52764])
            ("is_hun_yao_jiu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [52804 52825]))                  
                :type "bool")
                nil [52773 54009])
            ("is_qing_yao_jiu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [54050 54071]))                  
                :type "bool")
                nil [54018 55096])
            ("is_jiu_lian_bao_deng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [55143 55164]))                  
                :type "bool")
                nil [55106 56213])
            ("is_hun_peng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [56249 56270]))                  
                :type "bool")
                nil [56221 56409])
            ("is_qing_peng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [56446 56467]))                  
                :type "bool")
                nil [56417 56607])
            ("is_zi_yi_se" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [56643 56664]))                  
                :type "bool")
                nil [56615 57402])
            ("is_quan_qiu_ren" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [57443 57464]))                  
                :type "bool")
                nil [57411 57569])
            ("is_qing_yi_se" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [57608 57629]))                  
                :type "bool")
                nil [57578 58505])
            ("is_hun_yi_se" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [58543 58564]))                  
                :type "bool")
                nil [58514 59573])
            ("is_ping_hu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [59612 59633]))                  
                :type "bool")
                nil [59585 60137])
            ("is_ji_hu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [60176 60197]))                  
                :type "bool")
                nil [60151 60310])
            ("is_shi_ba_luo_han" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [60353 60374]))                  
                :type "bool")
                nil [60319 60455])
            ("set_shi_san_yao" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "bool") (reparse-symbol arg-sub-list) [60489 60500]))                  
                :type "void")
                nil [60457 60536])
            ("set_si_ghost" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "bool") (reparse-symbol arg-sub-list) [60567 60578]))                  
                :type "void")
                nil [60538 60611])
            ("set_ghost" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [60639 60649]))                  
                :type "void")
                nil [60613 60677]))          
      :file "hole_cards.cc"
      :pointmax 60678
      :fsize 61746
      :lastmodtime '(22790 42503 0 0)
      :unmatched-syntax nil))
  :file "!usr!local!fmapp!tdmajiang!libmajiang!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
