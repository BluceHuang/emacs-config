;; Object platform/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "platform/"
  :tables
  (list
    (semanticdb-table "CCPlatformMacros.h"
      :major-mode 'c++-mode
      :tags 
        '( ("__CC_PLATFORM_MACROS_H__" variable (:constant-flag t) nil [1303 1327])
            ("ccConfig.h" include nil nil [1377 1398])
            ("CCPlatformConfig.h" include nil nil [1399 1428])
            ("CCPlatformDefine.h" include nil nil [1429 1458])
            ("CREATE_FUNC" variable (:constant-flag t) nil [1598 1609])
            ("NODE_FUNC" variable (:constant-flag t) nil [2095 2104])
            ("CC_ENABLE_CACHE_TEXTURE_DATA" variable (:constant-flag t) nil [2736 2764])
            ("CC_REBIND_INDICES_BUFFER" variable (:constant-flag t) nil [3176 3200])
            ("NS_CC_BEGIN" variable (:constant-flag t) nil [3332 3343])
            ("NS_CC_END" variable (:constant-flag t) nil [3396 3405])
            ("USING_NS_CC" variable (:constant-flag t) nil [3442 3453])
            ("CC_PROPERTY_READONLY" variable (:constant-flag t) nil [4051 4071])
            ("CC_PROPERTY_READONLY_PASS_BY_REF" variable (:constant-flag t) nil [4182 4214])
            ("CC_PROPERTY" variable (:constant-flag t) nil [4871 4882])
            ("CC_PROPERTY_PASS_BY_REF" variable (:constant-flag t) nil [5042 5065])
            ("CC_SYNTHESIZE_READONLY" variable (:constant-flag t) nil [5670 5692])
            ("CC_SYNTHESIZE_READONLY_PASS_BY_REF" variable (:constant-flag t) nil [5828 5862])
            ("CC_SYNTHESIZE" variable (:constant-flag t) nil [6517 6530])
            ("CC_SYNTHESIZE_PASS_BY_REF" variable (:constant-flag t) nil [6732 6757])
            ("CC_SYNTHESIZE_RETAIN" variable (:constant-flag t) nil [6973 6993])
            ("CC_SAFE_DELETE" variable (:constant-flag t) nil [7326 7340])
            ("CC_SAFE_DELETE_ARRAY" variable (:constant-flag t) nil [7410 7430])
            ("CC_SAFE_FREE" variable (:constant-flag t) nil [7495 7507])
            ("CC_SAFE_RELEASE" variable (:constant-flag t) nil [7578 7593])
            ("CC_SAFE_RELEASE_NULL" variable (:constant-flag t) nil [7658 7678])
            ("CC_SAFE_RETAIN" variable (:constant-flag t) nil [7748 7762])
            ("CC_BREAK_IF" variable (:constant-flag t) nil [7826 7837])
            ("__CCLOGWITHFUNCTION" variable (:constant-flag t) nil [7879 7898])
            ("CCLOG" variable (:constant-flag t) nil [8075 8080])
            ("CCLOGINFO" variable (:constant-flag t) nil [8116 8125])
            ("CCLOGERROR" variable (:constant-flag t) nil [8157 8167])
            ("CCLOGWARN" variable (:constant-flag t) nil [8198 8207])
            ("LUALOG" variable (:constant-flag t) nil [8923 8929])
            ("CC_DISABLE_COPY" variable (:constant-flag t) nil [9192 9207])
            ("CC_DEPRECATED_ATTRIBUTE" variable (:constant-flag t) nil [9606 9629])
            ("CC_DEPRECATED_ATTRIBUTE" variable (:constant-flag t) nil [9779 9802])
            ("CC_FORMAT_PRINTF" variable (:constant-flag t) nil [10047 10063])
            ("CC_FORMAT_PRINTF_SIZE_T" variable (:constant-flag t) nil [10470 10493])
            ("CC_UNUSED" variable (:constant-flag t) nil [10534 10543]))          
      :file "CCPlatformMacros.h"
      :pointmax 10636
      :fsize 10635
      :lastmodtime '(22108 13180 0 0)
      :unmatched-syntax '((semantic-list 9137 . 9183) (punctuation 9135 . 9136) (punctuation 9134 . 9135))
      :lexical-table 
        '(("CREATE_FUNC" (spp-arg-list ("__TYPE__") 1609 . 1619) . 
              ((STATIC "static" 1622 . 1628) (symbol "__TYPE__" 1629 . 1637) (punctuation "*" 1637 . 1638) (symbol "create" 1639 . 1645) (semantic-list "()" 1645 . 1647) (semantic-list "{ \\
    __TYPE__ *pRet = new __TYPE__(); \\
    if (pRet && pRet->init()) \\
    { \\
        pRet->autorelease(); \\
        return pRet; \\
    } \\
    else \\
    { \\
        delete pRet; \\
        pRet = NULL; \\
        return NULL; \\
    } \\
}" 1650 . 1892)))
          ("CC_REBIND_INDICES_BUFFER" . ((number "1" 3202 . 3203)))
          ("NS_CC_BEGIN" . 
              ((NAMESPACE "namespace" 3364 . 3373) (symbol "cocos2d" 3374 . 3381) (open-paren "{" 3382 . 3383)))
          ("CC_SAFE_FREE" (spp-arg-list ("p") 7507 . 7510) . 
              ((DO "do" 7526 . 7528) (semantic-list "{ if(p) { free(p); (p) = 0; } }" 7529 . 7560) (WHILE "while" 7561 . 7566) (semantic-list "(0)" 7566 . 7569)))
          ("CC_SAFE_RELEASE" (spp-arg-list ("p") 7593 . 7596) . 
              ((DO "do" 7608 . 7610) (semantic-list "{ if(p) { (p)->release(); } }" 7611 . 7640) (WHILE "while" 7641 . 7646) (semantic-list "(0)" 7646 . 7649)))
          ("__CC_PLATFORM_MACROS_H__")
          ("CC_FORMAT_PRINTF" (spp-arg-list ("formatPos" "argPos") 10063 . 10082) . ((symbol "__attribute__" 10083 . 10096) (semantic-list "((__format__(printf, formatPos, argPos)))" 10096 . 10137)))
          ("CC_UNUSED" . ((symbol "__attribute__" 10544 . 10557) (semantic-list "((unused))" 10558 . 10568)))
          ("CC_PROPERTY_PASS_BY_REF" (spp-arg-list ("varType" "varName" "funName") 5065 . 5092) . 
              ((PROTECTED "protected" 5094 . 5103) (punctuation ":" 5103 . 5104) (symbol "varType" 5105 . 5112) (symbol "varName" 5113 . 5120) (punctuation ";" 5120 . 5121) (PUBLIC "public" 5123 . 5129) (punctuation ":" 5129 . 5130) (VIRTUAL "virtual" 5131 . 5138) (CONST "const" 5139 . 5144) (symbol "varType" 5145 . 5152) (punctuation "&" 5152 . 5153) (spp-symbol-merge ((symbol "get" 5154 . 5157) (symbol "funName" 5159 . 5166)) 5154 . 5166) (semantic-list "(void)" 5166 . 5172) (punctuation ";" 5172 . 5173) (PUBLIC "public" 5175 . 5181) (punctuation ":" 5181 . 5182) (VIRTUAL "virtual" 5183 . 5190) (VOID "void" 5191 . 5195) (spp-symbol-merge ((symbol "set" 5196 . 5199) (symbol "funName" 5201 . 5208)) 5196 . 5208) (semantic-list "(const varType& var)" 5208 . 5228) (punctuation ";" 5228 . 5229)))
          ("CC_SYNTHESIZE_PASS_BY_REF" (spp-arg-list ("varType" "varName" "funName") 6757 . 6784) . 
              ((PROTECTED "protected" 6786 . 6795) (punctuation ":" 6795 . 6796) (symbol "varType" 6797 . 6804) (symbol "varName" 6805 . 6812) (punctuation ";" 6812 . 6813) (PUBLIC "public" 6815 . 6821) (punctuation ":" 6821 . 6822) (VIRTUAL "virtual" 6823 . 6830) (CONST "const" 6831 . 6836) (symbol "varType" 6837 . 6844) (punctuation "&" 6844 . 6845) (spp-symbol-merge ((symbol "get" 6846 . 6849) (symbol "funName" 6851 . 6858)) 6846 . 6858) (semantic-list "(void)" 6858 . 6864) (CONST "const" 6865 . 6870) (semantic-list "{ return varName; }" 6871 . 6890) (PUBLIC "public" 6892 . 6898) (punctuation ":" 6898 . 6899) (VIRTUAL "virtual" 6900 . 6907) (VOID "void" 6908 . 6912) (spp-symbol-merge ((symbol "set" 6913 . 6916) (symbol "funName" 6918 . 6925)) 6913 . 6925) (semantic-list "(const varType& var)" 6925 . 6945) (semantic-list "{ varName = var; }" 6945 . 6963)))
          ("CC_SAFE_RETAIN" (spp-arg-list ("p") 7762 . 7765) . 
              ((DO "do" 7777 . 7779) (semantic-list "{ if(p) { (p)->retain(); } }" 7780 . 7808) (WHILE "while" 7809 . 7814) (semantic-list "(0)" 7814 . 7817)))
          ("CCLOGWARN" (spp-arg-list ("...") 8207 . 8212) . 
              ((DO "do" 8215 . 8217) (semantic-list "{}" 8218 . 8220) (WHILE "while" 8221 . 8226) (semantic-list "(0)" 8227 . 8230)))
          ("CC_DISABLE_COPY" (spp-arg-list ("Class") 9207 . 9214) . 
              ((PRIVATE "private" 9217 . 9224) (punctuation ":" 9224 . 9225) (symbol "Class" 9232 . 9237) (semantic-list "(const Class &)" 9237 . 9252) (punctuation "=" 9253 . 9254) (DELETE "delete" 9255 . 9261) (punctuation ";" 9261 . 9262) (symbol "Class" 9269 . 9274) (punctuation "&" 9275 . 9276) (OPERATOR "operator" 9276 . 9284) (punctuation "=" 9285 . 9286) (semantic-list "(const Class &)" 9286 . 9301) (punctuation "=" 9302 . 9303) (DELETE "delete" 9304 . 9310) (punctuation ";" 9310 . 9311)))
          ("CC_BREAK_IF" (spp-arg-list ("cond") 7837 . 7843) . 
              ((IF "if" 7855 . 7857) (semantic-list "(cond)" 7857 . 7863) (BREAK "break" 7864 . 7869)))
          ("__CCLOGWITHFUNCTION" (spp-arg-list ("s" "...") 7898 . 7906) . ((symbol "CCLog" 7913 . 7918) (semantic-list "(\"%s : %s\",__FUNCTION__, CCString::createWithFormat(s, ##__VA_ARGS__)->getCString())" 7918 . 8002)))
          ("NODE_FUNC" (spp-arg-list ("__TYPE__") 2104 . 2114) . 
              ((symbol "CC_DEPRECATED_ATTRIBUTE" 2117 . 2140) (STATIC "static" 2141 . 2147) (symbol "__TYPE__" 2148 . 2156) (punctuation "*" 2156 . 2157) (symbol "node" 2158 . 2162) (semantic-list "()" 2162 . 2164) (semantic-list "{ \\
    __TYPE__ *pRet = new __TYPE__(); \\
    if (pRet && pRet->init()) \\
    { \\
        pRet->autorelease(); \\
        return pRet; \\
    } \\
    else \\
    { \\
        delete pRet; \\
        pRet = NULL; \\
        return NULL; \\
    } \\
}" 2167 . 2409)))
          ("CC_ENABLE_CACHE_TEXTURE_DATA" . ((number "1" 2771 . 2772)))
          ("USING_NS_CC" . 
              ((USING "using" 3474 . 3479) (NAMESPACE "namespace" 3480 . 3489) (symbol "cocos2d" 3490 . 3497)))
          ("CC_SAFE_DELETE" (spp-arg-list ("p") 7340 . 7343) . 
              ((DO "do" 7355 . 7357) (semantic-list "{ if(p) { delete (p); (p) = 0; } }" 7358 . 7392) (WHILE "while" 7393 . 7398) (semantic-list "(0)" 7398 . 7401)))
          ("CC_SAFE_RELEASE_NULL" (spp-arg-list ("p") 7678 . 7681) . 
              ((DO "do" 7689 . 7691) (semantic-list "{ if(p) { (p)->release(); (p) = 0; } }" 7692 . 7730) (WHILE "while" 7731 . 7736) (semantic-list "(0)" 7736 . 7739)))
          ("LUALOG" (spp-arg-list ("...") 8929 . 8934))
          ("NS_CC_END" . ((close-paren "}" 3428 . 3429)))
          ("CC_PROPERTY_READONLY_PASS_BY_REF" (spp-arg-list ("varType" "varName" "funName") 4214 . 4241) . 
              ((PROTECTED "protected" 4243 . 4252) (punctuation ":" 4252 . 4253) (symbol "varType" 4254 . 4261) (symbol "varName" 4262 . 4269) (punctuation ";" 4269 . 4270) (PUBLIC "public" 4272 . 4278) (punctuation ":" 4278 . 4279) (VIRTUAL "virtual" 4280 . 4287) (CONST "const" 4288 . 4293) (symbol "varType" 4294 . 4301) (punctuation "&" 4301 . 4302) (spp-symbol-merge ((symbol "get" 4303 . 4306) (symbol "funName" 4308 . 4315)) 4303 . 4315) (semantic-list "(void)" 4315 . 4321) (punctuation ";" 4321 . 4322)))
          ("CC_PROPERTY" (spp-arg-list ("varType" "varName" "funName") 4882 . 4909) . 
              ((PROTECTED "protected" 4911 . 4920) (punctuation ":" 4920 . 4921) (symbol "varType" 4922 . 4929) (symbol "varName" 4930 . 4937) (punctuation ";" 4937 . 4938) (PUBLIC "public" 4940 . 4946) (punctuation ":" 4946 . 4947) (VIRTUAL "virtual" 4948 . 4955) (symbol "varType" 4956 . 4963) (spp-symbol-merge ((symbol "get" 4964 . 4967) (symbol "funName" 4969 . 4976)) 4964 . 4976) (semantic-list "(void)" 4976 . 4982) (punctuation ";" 4982 . 4983) (PUBLIC "public" 4985 . 4991) (punctuation ":" 4991 . 4992) (VIRTUAL "virtual" 4993 . 5000) (VOID "void" 5001 . 5005) (spp-symbol-merge ((symbol "set" 5006 . 5009) (symbol "funName" 5011 . 5018)) 5006 . 5018) (semantic-list "(varType var)" 5018 . 5031) (punctuation ";" 5031 . 5032)))
          ("CCLOGINFO" (spp-arg-list ("...") 8125 . 8130) . 
              ((DO "do" 8133 . 8135) (semantic-list "{}" 8136 . 8138) (WHILE "while" 8139 . 8144) (semantic-list "(0)" 8145 . 8148)))
          ("CC_DEPRECATED_ATTRIBUTE")
          ("CC_FORMAT_PRINTF_SIZE_T" . ((string "\"%08zX\"" 10494 . 10501)))
          ("CC_SYNTHESIZE" (spp-arg-list ("varType" "varName" "funName") 6530 . 6557) . 
              ((PROTECTED "protected" 6559 . 6568) (punctuation ":" 6568 . 6569) (symbol "varType" 6570 . 6577) (symbol "varName" 6578 . 6585) (punctuation ";" 6585 . 6586) (PUBLIC "public" 6588 . 6594) (punctuation ":" 6594 . 6595) (VIRTUAL "virtual" 6596 . 6603) (symbol "varType" 6604 . 6611) (spp-symbol-merge ((symbol "get" 6612 . 6615) (symbol "funName" 6617 . 6624)) 6612 . 6624) (semantic-list "(void)" 6624 . 6630) (CONST "const" 6631 . 6636) (semantic-list "{ return varName; }" 6637 . 6656) (PUBLIC "public" 6658 . 6664) (punctuation ":" 6664 . 6665) (VIRTUAL "virtual" 6666 . 6673) (VOID "void" 6674 . 6678) (spp-symbol-merge ((symbol "set" 6679 . 6682) (symbol "funName" 6684 . 6691)) 6679 . 6691) (semantic-list "(varType var)" 6691 . 6704) (semantic-list "{ varName = var; }" 6704 . 6722)))
          ("CC_PROPERTY_READONLY" (spp-arg-list ("varType" "varName" "funName") 4071 . 4098) . 
              ((PROTECTED "protected" 4100 . 4109) (punctuation ":" 4109 . 4110) (symbol "varType" 4111 . 4118) (symbol "varName" 4119 . 4126) (punctuation ";" 4126 . 4127) (PUBLIC "public" 4129 . 4135) (punctuation ":" 4135 . 4136) (VIRTUAL "virtual" 4137 . 4144) (symbol "varType" 4145 . 4152) (spp-symbol-merge ((symbol "get" 4153 . 4156) (symbol "funName" 4158 . 4165)) 4153 . 4165) (semantic-list "(void)" 4165 . 4171) (punctuation ";" 4171 . 4172)))
          ("CC_SYNTHESIZE_READONLY" (spp-arg-list ("varType" "varName" "funName") 5692 . 5719) . 
              ((PROTECTED "protected" 5721 . 5730) (punctuation ":" 5730 . 5731) (symbol "varType" 5732 . 5739) (symbol "varName" 5740 . 5747) (punctuation ";" 5747 . 5748) (PUBLIC "public" 5750 . 5756) (punctuation ":" 5756 . 5757) (VIRTUAL "virtual" 5758 . 5765) (symbol "varType" 5766 . 5773) (spp-symbol-merge ((symbol "get" 5774 . 5777) (symbol "funName" 5779 . 5786)) 5774 . 5786) (semantic-list "(void)" 5786 . 5792) (CONST "const" 5793 . 5798) (semantic-list "{ return varName; }" 5799 . 5818)))
          ("CC_SYNTHESIZE_READONLY_PASS_BY_REF" (spp-arg-list ("varType" "varName" "funName") 5862 . 5889) . 
              ((PROTECTED "protected" 5891 . 5900) (punctuation ":" 5900 . 5901) (symbol "varType" 5902 . 5909) (symbol "varName" 5910 . 5917) (punctuation ";" 5917 . 5918) (PUBLIC "public" 5920 . 5926) (punctuation ":" 5926 . 5927) (VIRTUAL "virtual" 5928 . 5935) (CONST "const" 5936 . 5941) (symbol "varType" 5942 . 5949) (punctuation "&" 5949 . 5950) (spp-symbol-merge ((symbol "get" 5951 . 5954) (symbol "funName" 5956 . 5963)) 5951 . 5963) (semantic-list "(void)" 5963 . 5969) (CONST "const" 5970 . 5975) (semantic-list "{ return varName; }" 5976 . 5995)))
          ("CCLOGERROR" (spp-arg-list ("...") 8167 . 8172) . 
              ((DO "do" 8174 . 8176) (semantic-list "{}" 8177 . 8179) (WHILE "while" 8180 . 8185) (semantic-list "(0)" 8186 . 8189)))
          ("CC_SYNTHESIZE_RETAIN" (spp-arg-list ("varType" "varName" "funName") 6993 . 7020) . 
              ((PRIVATE "private" 7026 . 7033) (punctuation ":" 7033 . 7034) (symbol "varType" 7035 . 7042) (symbol "varName" 7043 . 7050) (punctuation ";" 7050 . 7051) (PUBLIC "public" 7054 . 7060) (punctuation ":" 7060 . 7061) (VIRTUAL "virtual" 7062 . 7069) (symbol "varType" 7070 . 7077) (spp-symbol-merge ((symbol "get" 7078 . 7081) (symbol "funName" 7083 . 7090)) 7078 . 7090) (semantic-list "(void)" 7090 . 7096) (CONST "const" 7097 . 7102) (semantic-list "{ return varName; }" 7103 . 7122) (PUBLIC "public" 7125 . 7131) (punctuation ":" 7131 . 7132) (VIRTUAL "virtual" 7133 . 7140) (VOID "void" 7141 . 7145) (spp-symbol-merge ((symbol "set" 7146 . 7149) (symbol "funName" 7151 . 7158)) 7146 . 7158) (semantic-list "(varType var)" 7158 . 7171) (semantic-list "{ \\
    if (varName != var) \\
    { \\
        CC_SAFE_RETAIN(var); \\
        CC_SAFE_RELEASE(varName); \\
        varName = var; \\
    } \\
}" 7176 . 7315)))
          ("CC_SAFE_DELETE_ARRAY" (spp-arg-list ("p") 7430 . 7433) . 
              ((DO "do" 7438 . 7440) (semantic-list "{ if(p) { delete[] (p); (p) = 0; } }" 7441 . 7477) (WHILE "while" 7478 . 7483) (semantic-list "(0)" 7483 . 7486)))
          ("CCLOG" (spp-arg-list ("...") 8080 . 8085) . 
              ((DO "do" 8092 . 8094) (semantic-list "{}" 8095 . 8097) (WHILE "while" 8098 . 8103) (semantic-list "(0)" 8104 . 8107)))
          )
)
    (semanticdb-table "platform.h"
      :file "platform.h"
      :fsize 1833
      :lastmodtime '(21641 5426 0 0))
    (semanticdb-table "CCFileUtils.h"
      :file "CCFileUtils.h"
      :fsize 17696
      :lastmodtime '(21641 5426 0 0))
    (semanticdb-table "CCImage.h"
      :file "CCImage.h"
      :fsize 8218
      :lastmodtime '(21641 5426 0 0))
    (semanticdb-table "CCEGLViewProtocol.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("CCEGLViewProtocol.h" include nil nil [1 31])
            ("touch_dispatcher/CCTouchDispatcher.h" include nil nil [32 79])
            ("touch_dispatcher/CCTouch.h" include nil nil [80 117])
            ("CCDirector.h" include nil nil [118 141])
            ("cocoa/CCSet.h" include nil nil [142 166])
            ("cocoa/CCDictionary.h" include nil nil [167 198])
            ("cocoa/CCInteger.h" include nil nil [199 227])
            ("s_pTouches" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :default-value "{ NULL }"
                :type ("CCTouch" type (:type "class") nil nil))
                nil [242 296])
            ("s_indexBitsUsed" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "unsigned int")
                nil [297 337])
            ("s_TouchesIntergerDict" variable
               (:typemodifiers ("static")
                :type ("CCDictionary" type (:type "class") nil nil))
                nil [338 380])
            ("getUnUsedIndex" function
               (:typemodifiers ("static")
                :type "int")
                nil [382 679])
            ("removeUsedIndexBit" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("index" variable (:type "int") (reparse-symbol arg-sub-list) [712 722]))                  
                :type "void")
                nil [681 885])
            ("CCEGLViewProtocol" function
               (:constructor-flag t
                :parent "CCEGLViewProtocol"
                :type ("CCEGLViewProtocol" type (:type "class") nil nil))
                nil [887 1027])
            ("CCEGLViewProtocol" function
               (:destructor-flag t
                :parent "CCEGLViewProtocol"
                :type "void")
                nil [1029 1073])
            ("setDesignResolutionSize" function
               (:parent "CCEGLViewProtocol"
                :arguments 
                  ( ("width" variable (:type "float") (reparse-symbol arg-sub-list) [1123 1135])
                    ("height" variable (:type "float") (reparse-symbol arg-sub-list) [1136 1149])
                    ("resolutionPolicy" variable (:type ("ResolutionPolicy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1150 1184]))                  
                :type "void")
                nil [1075 2763])
            ("getDesignResolutionSize" function
               (:parent "CCEGLViewProtocol"
                :constant-flag t
                :type ("CCSize" type (:type "class") nil nil))
                nil [2765 2871])
            ("getFrameSize" function
               (:parent "CCEGLViewProtocol"
                :constant-flag t
                :type ("CCSize" type (:type "class") nil nil))
                nil [2873 2957])
            ("setFrameSize" function
               (:parent "CCEGLViewProtocol"
                :arguments 
                  ( ("width" variable (:type "float") (reparse-symbol arg-sub-list) [2996 3008])
                    ("height" variable (:type "float") (reparse-symbol arg-sub-list) [3009 3022]))                  
                :type "void")
                nil [2959 3101])
            ("getVisibleSize" function
               (:parent "CCEGLViewProtocol"
                :type ("CCSize" type (:type "class") nil nil))
                nil [3103 3375])
            ("getVisibleOrigin" function
               (:parent "CCEGLViewProtocol"
                :type ("CCPoint" type (:type "class") nil nil))
                nil [3377 3742])
            ("setTouchDelegate" function
               (:parent "CCEGLViewProtocol"
                :arguments 
                  ( ("pDelegate" variable
                       (:pointer 1
                        :type ("EGLTouchDelegate" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3785 3814]))                  
                :type "void")
                nil [3744 3847])
            ("setViewPortInPoints" function
               (:parent "CCEGLViewProtocol"
                :arguments 
                  ( ("x" variable (:type "float") (reparse-symbol arg-sub-list) [3893 3902])
                    ("y" variable (:type "float") (reparse-symbol arg-sub-list) [3903 3912])
                    ("w" variable (:type "float") (reparse-symbol arg-sub-list) [3913 3922])
                    ("h" variable (:type "float") (reparse-symbol arg-sub-list) [3923 3931]))                  
                :type "void")
                nil [3849 4153])
            ("setScissorInPoints" function
               (:parent "CCEGLViewProtocol"
                :arguments 
                  ( ("x" variable (:type "float") (reparse-symbol arg-sub-list) [4198 4207])
                    ("y" variable (:type "float") (reparse-symbol arg-sub-list) [4208 4217])
                    ("w" variable (:type "float") (reparse-symbol arg-sub-list) [4218 4227])
                    ("h" variable (:type "float") (reparse-symbol arg-sub-list) [4228 4236]))                  
                :type "void")
                nil [4155 4453])
            ("isScissorEnabled" function
               (:parent "CCEGLViewProtocol"
                :type "bool")
                nil [4455 4568])
            ("getScissorRect" function
               (:parent "CCEGLViewProtocol"
                :type ("CCRect" type (:type "class") nil nil))
                nil [4570 4902])
            ("setViewName" function
               (:parent "CCEGLViewProtocol"
                :arguments 
                  ( ("pszViewName" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4940 4964]))                  
                :type "void")
                nil [4904 5102])
            ("getViewName" function
               (:pointer 1
                :parent "CCEGLViewProtocol"
                :constant-flag t
                :type "char")
                nil [5104 5177])
            ("handleTouchesBegin" function
               (:parent "CCEGLViewProtocol"
                :arguments 
                  ( ("num" variable (:type "int") (reparse-symbol arg-sub-list) [5222 5230])
                    ("ids" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [5231 5241])
                    ("xs" variable
                       (:dereference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [5242 5253])
                    ("ys" variable
                       (:dereference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [5254 5265]))                  
                :type "void")
                nil [5179 6568])
            ("handleTouchesMove" function
               (:parent "CCEGLViewProtocol"
                :arguments 
                  ( ("num" variable (:type "int") (reparse-symbol arg-sub-list) [6612 6620])
                    ("ids" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [6621 6631])
                    ("xs" variable
                       (:dereference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [6632 6643])
                    ("ys" variable
                       (:dereference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [6644 6655]))                  
                :type "void")
                nil [6570 7661])
            ("getSetOfTouchesEndOrCancel" function
               (:parent "CCEGLViewProtocol"
                :arguments 
                  ( ("set" variable
                       (:reference 1
                        :type ("CCSet" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7714 7725])
                    ("num" variable (:type "int") (reparse-symbol arg-sub-list) [7726 7734])
                    ("ids" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [7735 7745])
                    ("xs" variable
                       (:dereference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [7746 7757])
                    ("ys" variable
                       (:dereference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [7758 7769]))                  
                :type "void")
                nil [7663 8982])
            ("handleTouchesEnd" function
               (:parent "CCEGLViewProtocol"
                :arguments 
                  ( ("num" variable (:type "int") (reparse-symbol arg-sub-list) [9025 9033])
                    ("ids" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [9034 9044])
                    ("xs" variable
                       (:dereference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [9045 9056])
                    ("ys" variable
                       (:dereference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [9057 9068]))                  
                :type "void")
                nil [8984 9185])
            ("handleTouchesCancel" function
               (:parent "CCEGLViewProtocol"
                :arguments 
                  ( ("num" variable (:type "int") (reparse-symbol arg-sub-list) [9231 9239])
                    ("ids" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [9240 9250])
                    ("xs" variable
                       (:dereference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [9251 9262])
                    ("ys" variable
                       (:dereference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [9263 9274]))                  
                :type "void")
                nil [9187 9395])
            ("getViewPortRect" function
               (:parent "CCEGLViewProtocol"
                :constant-flag t
                :type ("CCRect" type (:type "class") nil nil))
                nil [9397 9486])
            ("getScaleX" function
               (:parent "CCEGLViewProtocol"
                :type "float")
                nil [9488 9556])
            ("getScaleY" function
               (:parent "CCEGLViewProtocol"
                :type "float")
                nil [9558 9626]))          
      :file "CCEGLViewProtocol.cpp"
      :pointmax 9638
      :fsize 9637
      :lastmodtime '(21641 5426 0 0)
      :unmatched-syntax '((symbol 9628 . 9637) (symbol 229 . 240))))
  :file "!Users!huangyong!cocos2d-x-2.2.6-1!cocos2dx!platform!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
