;; Object libmajiang/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "libmajiang/"
  :tables
  (list
    (semanticdb-table "deck.h"
      :major-mode 'c++-mode
      :tags 
        '( ("_DECK_H_" variable (:constant-flag t) nil [26 34])
            ("vector" include (:system-flag t) nil [36 53])
            ("card.h" include nil nil [55 72])
            ("hole_cards.h" include nil nil [73 96])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [98 118])
            ("Deck" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [133 140])
                    ("Deck" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("Deck" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [145 152])
                    ("init" function
                       (:prototype-flag t
                        :arguments 
                          ( ("feng" variable (:type "int") (reparse-symbol arg-sub-list) [167 176])
                            ("gui" variable (:type "int") (reparse-symbol arg-sub-list) [177 185])
                            ("horse" variable (:type "int") (reparse-symbol arg-sub-list) [186 196]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [157 197])
                    ("fill" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [199 211])
                    ("empty" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [213 226])
                    ("size" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [228 245])
                    ("push" function
                       (:prototype-flag t
                        :arguments 
                          ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [259 269]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [249 270])
                    ("pop" function
                       (:prototype-flag t
                        :arguments 
                          ( ("card" variable
                               (:reference 1
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [281 292]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [272 293])
                    ("shuffle" function
                       (:prototype-flag t
                        :arguments 
                          ( ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [308 317]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [295 318])
                    ("get_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [342 363]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [322 364])
                    ("get_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [386 407])
                            ("card_type" variable (:type "int") (reparse-symbol arg-sub-list) [408 422]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [366 423])
                    ("get_next_card" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [447 468]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [428 469])
                    ("see_next_card" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [474 495])
                    ("change_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [520 541])
                            ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [542 550]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [497 551])
                    ("debug" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [553 566])
                    ("public" label nil (reparse-symbol classsubparts) [568 575])
                    ("cards" variable (:type ("vector" type
                         (:template-specifier 
                            ( ("Card" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [577 596])
                    ("private" label nil (reparse-symbol classsubparts) [598 606])
                    ("get_baozi_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [634 655]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [608 656])
                    ("get_shunjin_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [686 707]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [658 708])
                    ("get_jinhua_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [737 758]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [710 759])
                    ("get_shunzi_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [788 809]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [761 810])
                    ("get_duizi_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [838 859]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [812 860])
                    ("get_danpai_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [889 910]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [862 911])
                    ("get_teshu_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [939 960]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [913 961])
                    ("delete_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tmp" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("Card" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [981 1004]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [963 1005])
                    ("private" label nil (reparse-symbol classsubparts) [1007 1015])
                    ("has_feng" variable (:type "int") (reparse-symbol classsubparts) [1020 1033])
                    ("has_gui" variable (:type "int") (reparse-symbol classsubparts) [1038 1050])
                    ("horse_num" variable (:type "int") (reparse-symbol classsubparts) [1055 1069]))                  
                :type "class")
                nil [120 1072]))          
      :file "deck.h"
      :pointmax 1096
      :fsize 1095
      :lastmodtime '(22461 40165 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_DECK_H_")
          )
)
    (semanticdb-table "card_type.h"
      :major-mode 'c++-mode
      :tags 
        '( ("_CARD_TYPE_H_" variable (:constant-flag t) nil [31 44])
            ("CardType" type
               (:members 
                  ( ("CARD_TYPE_ERROR" variable
                       (:constant-flag t
                        :default-value (81 82)
                        :type "int")
                        (reparse-symbol enumsubparts) [63 82])
                    ("CARD_TYPE_BAOZI" variable
                       (:constant-flag t
                        :default-value (113 114)
                        :type "int")
                        (reparse-symbol enumsubparts) [95 114])
                    ("CARD_TYPE_SHUNJIN" variable
                       (:constant-flag t
                        :default-value (145 146)
                        :type "int")
                        (reparse-symbol enumsubparts) [125 146])
                    ("CARD_TYPE_JINHUA" variable
                       (:constant-flag t
                        :default-value (179 180)
                        :type "int")
                        (reparse-symbol enumsubparts) [160 180])
                    ("CARD_TYPE_SHUNZI" variable
                       (:constant-flag t
                        :default-value (210 211)
                        :type "int")
                        (reparse-symbol enumsubparts) [191 211])
                    ("CARD_TYPE_DUIZI" variable
                       (:constant-flag t
                        :default-value (243 244)
                        :type "int")
                        (reparse-symbol enumsubparts) [225 244])
                    ("CARD_TYPE_DANPAI" variable
                       (:constant-flag t
                        :default-value (274 275)
                        :type "int")
                        (reparse-symbol enumsubparts) [255 275])
                    ("CARD_TYPE_TESHU" variable
                       (:constant-flag t
                        :default-value (304 305)
                        :type "int")
                        (reparse-symbol enumsubparts) [286 305]))                  
                :type "enum")
                nil [46 323]))          
      :file "card_type.h"
      :pointmax 352
      :fsize 387
      :lastmodtime '(22461 37437 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_CARD_TYPE_H_")
          )
)
    (semanticdb-table "card.h"
      :major-mode 'c++-mode
      :tags 
        '( ("_CARD_H_" variable (:constant-flag t) nil [26 34])
            ("string" include (:system-flag t) nil [36 53])
            ("iostream" include (:system-flag t) nil [54 73])
            ("cstdio" include (:system-flag t) nil [74 91])
            ("vector" include (:system-flag t) nil [92 109])
            ("map" include (:system-flag t) nil [110 124])
            ("algorithm" include (:system-flag t) nil [125 145])
            ("card_type.h" include nil nil [147 169])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [171 191])
            ("Card" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [458 465])
                    ("Face" type
                       (:typedef ("" type
                             (:members 
                                ( ("One" variable
                                     (:constant-flag t
                                      :default-value (504 505)
                                      :type "int")
                                      (reparse-symbol enumsubparts) [498 505])
                                  ("Two" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [509 513])
                                  ("Three" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [516 522])
                                  ("Four" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [525 530])
                                  ("Five" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [533 538])
                                  ("Six" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [541 545])
                                  ("Seven" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [548 554])
                                  ("Eight" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [557 563])
                                  ("Nine" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [566 571])
                                  ("East" variable
                                     (:constant-flag t
                                      :default-value (581 582)
                                      :type "int")
                                      (reparse-symbol enumsubparts) [574 582])
                                  ("South" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [586 592])
                                  ("West" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [595 600])
                                  ("North" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [603 609])
                                  ("Zhong" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [612 618])
                                  ("Fa" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [621 624])
                                  ("Bai" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [627 636]))                                
                              :type "enum")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [471 641])
                    ("Suit" type
                       (:typedef ("" type
                             (:members 
                                ( ("TIAO" variable
                                     (:constant-flag t
                                      :default-value (820 821)
                                      :type "int")
                                      (reparse-symbol enumsubparts) [813 821])
                                  ("WAN" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [831 835])
                                  ("TONG" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [844 849])
                                  ("FENG" variable
                                     (:constant-flag t
                                      :type "int")
                                      (reparse-symbol enumsubparts) [858 868]))                                
                              :type "enum")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [786 873])
                    ("public" label nil (reparse-symbol classsubparts) [875 882])
                    ("face" variable (:type "int") (reparse-symbol classsubparts) [884 893])
                    ("value" variable (:type "int") (reparse-symbol classsubparts) [895 905])
                    ("suit" variable (:type "int") (reparse-symbol classsubparts) [910 919])
                    ("Card" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [922 929])
                    ("Card" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("val" variable (:type "int") (reparse-symbol arg-sub-list) [936 944]))                          
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [931 945])
                    ("set_value" function
                       (:prototype-flag t
                        :arguments 
                          ( ("val" variable (:type "int") (reparse-symbol arg-sub-list) [962 970]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [947 971])
                    ("get_card" function
                       (:prototype-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [974 997])
                    ("<" function
                       (:operator-flag t
                        :arguments 
                          ( ("c" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1016 1030]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1000 1193])
                    (">" function
                       (:operator-flag t
                        :arguments 
                          ( ("c" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1212 1226]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1196 1389])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("c" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1409 1423]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1392 1480])
                    ("compare" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1502 1516])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1517 1531]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1483 1976])
                    ("lesser_callback" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2007 2021])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2022 2036]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1979 2115])
                    ("greater_callback" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2147 2161])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2162 2176]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2118 2254])
                    ("sort_by_ascending" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("Card" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2287 2308]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2257 2365])
                    ("sort_by_descending" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("Card" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2399 2420]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2368 2478])
                    ("dump_cards" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("Card" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2504 2525])
                            ("str" variable
                               (:default-value "\"cards\""
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2526 2546]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2481 2749])
                    ("dump_cards" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("m" variable
                               (:reference 1
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil)
                                          ("Card" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2775 2798])
                            ("str" variable
                               (:default-value "\"cards\""
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2799 2819]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2752 3031]))                  
                :type "class")
                nil [445 3034]))          
      :file "card.h"
      :pointmax 3058
      :fsize 3057
      :lastmodtime '(22467 29666 0 0)
      :unmatched-syntax '((semantic-list 664 . 780) (ENUM 655 . 659) (TYPEDEF 647 . 654))
      :lexical-table 
        '(("_CARD_H_")
          )
)
    (semanticdb-table "card.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("face_symbols" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
 \"1万\", \"2万\", \"3万\", \"4万\", \"5万\", \"6万\", \"7万\", \"8万\", \"9万\",
 \"1筒\", \"2筒\", \"3筒\", \"4筒\", \"5筒\", \"6筒\", \"7筒\", \"8筒\", \"9筒\",
 \"1条\", \"2条\", \"3条\", \"4条\", \"5条\", \"6条\", \"7条\", \"8条\", \"9条\",
 \"东\", \"南\", \"西\", \"北\", \"中\", \"发\", \"白\"
}"
                :type ("string" type (:type "class") nil nil))
                nil [20 255])
            ("Card" function
               (:constructor-flag t
                :parent "Card"
                :type ("Card" type (:type "class") nil nil))
                nil [258 300])
            ("Card" function
               (:constructor-flag t
                :parent "Card"
                :arguments 
                  ( ("val" variable (:type "int") (reparse-symbol arg-sub-list) [313 321]))                  
                :type ("Card" type (:type "class") nil nil))
                nil [302 386])
            ("set_value" function
               (:parent "Card"
                :arguments 
                  ( ("val" variable (:type "int") (reparse-symbol arg-sub-list) [409 417]))                  
                :type "void")
                nil [388 485])
            ("get_card" function
               (:parent "Card"
                :type ("string" type (:type "class") nil nil))
                nil [487 590]))          
      :file "card.cc"
      :pointmax 591
      :fsize 658
      :lastmodtime '(22462 27544 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "deck.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("algorithm" include (:system-flag t) nil [1 21])
            ("deck.h" include nil nil [22 39])
            ("FENG_SIZE" variable (:constant-flag t) nil [49 58])
            ("card_arr" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
  0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
  0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19,
  0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29,
  0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37
}"
                :type "int")
                nil [61 300])
            ("Deck" function
               (:constructor-flag t
                :parent "Deck"
                :type ("Deck" type (:type "class") nil nil))
                nil [302 372])
            ("init" function
               (:parent "Deck"
                :arguments 
                  ( ("feng" variable (:type "int") (reparse-symbol arg-sub-list) [390 399])
                    ("gui" variable (:type "int") (reparse-symbol arg-sub-list) [400 408])
                    ("horse" variable (:type "int") (reparse-symbol arg-sub-list) [409 419]))                  
                :type "void")
                nil [374 486])
            ("fill" function
               (:parent "Deck"
                :type "void")
                nil [488 908])
            ("empty" function
               (:parent "Deck"
                :type "void")
                nil [910 948])
            ("size" function
               (:parent "Deck"
                :type "int")
                nil [950 998])
            ("push" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1016 1026]))                  
                :type "bool")
                nil [1000 1068])
            ("pop" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1085 1096]))                  
                :type "bool")
                nil [1070 1186])
            ("myrandom" function
               (:arguments 
                  ( ("i" variable (:type "int") (reparse-symbol arg-sub-list) [1201 1207]))                  
                :type "int")
                nil [1188 1236])
            ("shuffle" function
               (:parent "Deck"
                :arguments 
                  ( ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [1257 1266]))                  
                :type "bool")
                nil [1238 1377])
            ("get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1405 1426]))                  
                :type "void")
                nil [1379 1540])
            ("get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1568 1589])
                    ("card_type" variable (:type "int") (reparse-symbol arg-sub-list) [1590 1604]))                  
                :type "void")
                nil [1542 2168])
            ("change_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2199 2220])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [2221 2229]))                  
                :type "void")
                nil [2170 2371])
            ("delete_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("tmp" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2397 2420]))                  
                :type "void")
                nil [2373 2652])
            ("debug" function
               (:parent "Deck"
                :type "void")
                nil [2654 2702])
            ("get_next_card" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2729 2750]))                  
                :type "void")
                nil [2704 2846])
            ("see_next_card" function
               (:parent "Deck"
                :type "int")
                nil [2848 2935]))          
      :file "deck.cc"
      :pointmax 2936
      :fsize 2937
      :lastmodtime '(22462 27651 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("FENG_SIZE" . ((punctuation ";" 58 . 59)))
          )
)
    (semanticdb-table "hole_cards.h"
      :major-mode 'c++-mode
      :tags 
        '( ("_HOLE_CARDS_H_" variable (:constant-flag t) nil [32 46])
            ("vector" include (:system-flag t) nil [48 65])
            ("list" include (:system-flag t) nil [66 81])
            ("set" include (:system-flag t) nil [82 96])
            ("algorithm" include (:system-flag t) nil [97 117])
            ("card.h" include nil nil [119 136])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [138 158])
            ("HoleCards" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [178 185])
                    ("HoleCards" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [187 199])
                    ("init" function
                       (:prototype-flag t
                        :arguments 
                          ( ("duizi" variable (:type "int") (reparse-symbol arg-sub-list) [215 225])
                            ("ghost" variable (:type "int") (reparse-symbol arg-sub-list) [226 236]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [205 237])
                    ("add_card" function
                       (:prototype-flag t
                        :arguments 
                          ( ("c" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [254 261]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [240 262])
                    ("sort" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [265 277])
                    ("analysis" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [280 296])
                    ("compare" function
                       (:prototype-flag t
                        :arguments 
                          ( ("hc" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [311 325]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [299 326])
                    ("clear" function (:type "void") (reparse-symbol classsubparts) [329 572])
                    ("copy_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("Card" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [591 612]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [575 613])
                    ("copy_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [632 652]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [616 653])
                    ("handler_chu" function
                       (:prototype-flag t
                        :arguments 
                          ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [676 686]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [659 687])
                    ("handler_chi" function
                       (:prototype-flag t
                        :arguments 
                          ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [709 719])
                            ("pattern" variable
                               (:dereference 1
                                :type "int")
                                (reparse-symbol arg-sub-list) [720 735])
                            ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [736 745]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [692 746])
                    ("handler_peng" function
                       (:prototype-flag t
                        :arguments 
                          ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [769 779])
                            ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [780 789]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [751 790])
                    ("handler_gang" function
                       (:prototype-flag t
                        :arguments 
                          ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [813 823])
                            ("gang_flag" variable (:type "int") (reparse-symbol arg-sub-list) [824 838])
                            ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [839 848]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [795 849])
                    ("handler_ting" function
                       (:prototype-flag t
                        :arguments 
                          ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [872 882]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [854 883])
                    ("permit_ting" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [889 908])
                    ("permit_gang" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [913 932])
                    ("permit_gang" function
                       (:prototype-flag t
                        :arguments 
                          ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [954 964]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [937 965])
                    ("permit_peng" function
                       (:prototype-flag t
                        :arguments 
                          ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [987 997]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [970 998])
                    ("permit_chi" function
                       (:prototype-flag t
                        :arguments 
                          ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [1019 1029]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1003 1030])
                    ("permit_hu" function
                       (:prototype-flag t
                        :arguments 
                          ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [1050 1060]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1035 1061])
                    ("permit_hu" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [1066 1083])
                    ("has_card" function
                       (:prototype-flag t
                        :arguments 
                          ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [1103 1113]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1089 1114])
                    ("size" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1117 1134])
                    ("debug" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1136 1149])
                    ("cards" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("Card" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1152 1176])
                    ("oldcards" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("Card" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1181 1208])
                    ("discard_cards" variable (:type ("std::list" type
                         (:template-specifier 
                            ( ("Card" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1214 1244])
                    ("obsorb_cards" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("std::vector" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1249 1294])
                    ("hu_cards" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("Card" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1299 1326])
                    ("eat_cards" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("Card" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1332 1360])
                    ("gang_cards" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("Card" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1385 1414])
                    ("gang_flag" variable (:type "int") (reparse-symbol classsubparts) [1425 1439])
                    ("card_type" variable (:type "int") (reparse-symbol classsubparts) [1475 1489])
                    ("last_card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1494 1509])
                    ("ting_cards" variable (:type ("std::map" type
                         (:template-specifier 
                            ( ("int" type nil nil nil)
                              ("vector" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1514 1554])
                    ("hu_pair" variable (:type "int") (reparse-symbol classsubparts) [1560 1572])
                    ("has_ghost" variable (:type "int") (reparse-symbol classsubparts) [1577 1591])
                    ("private" label nil (reparse-symbol classsubparts) [1593 1601])
                    ("is_shunzi" function
                       (:prototype-flag t
                        :arguments 
                          ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1621 1632])
                            ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1633 1644])
                            ("card3" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1645 1656]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1606 1657])
                    ("is_same" function
                       (:prototype-flag t
                        :arguments 
                          ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1675 1686])
                            ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1687 1698]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1662 1699])
                    ("is_same" function
                       (:prototype-flag t
                        :arguments 
                          ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1717 1728])
                            ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1729 1740])
                            ("card3" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1741 1752]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1704 1753])
                    ("is_same" function
                       (:prototype-flag t
                        :arguments 
                          ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1771 1782])
                            ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1783 1794])
                            ("card3" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1795 1806])
                            ("card4" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1807 1818]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1758 1819])
                    ("is_complete" function
                       (:prototype-flag t
                        :arguments 
                          ( ("acards" variable
                               (:reference 1
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("Card" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1841 1862])
                            ("d1" variable (:type "int") (reparse-symbol arg-sub-list) [1863 1870])
                            ("d2" variable (:type "int") (reparse-symbol arg-sub-list) [1871 1878]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1824 1879])
                    ("is_complete" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("acards" variable
                               (:reference 1
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("Card" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1908 1929]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1884 1930]))                  
                :type "class")
                nil [160 1934]))          
      :file "hole_cards.h"
      :pointmax 1964
      :fsize 2033
      :lastmodtime '(22465 14131 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_HOLE_CARDS_H_")
          )
)
    (semanticdb-table "hole_cards.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("card_type.h" include nil nil [19 41])
            ("hole_cards.h" include nil nil [42 65])
            ("HoleCards" function
               (:constructor-flag t
                :parent "HoleCards"
                :type ("HoleCards" type (:type "class") nil nil))
                nil [379 485])
            ("init" function
               (:parent "HoleCards"
                :arguments 
                  ( ("duizi" variable (:type "int") (reparse-symbol arg-sub-list) [508 518])
                    ("ghost" variable (:type "int") (reparse-symbol arg-sub-list) [519 529]))                  
                :type "void")
                nil [487 577])
            ("add_card" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [604 614]))                  
                :type "void")
                nil [579 672])
            ("sort" function
               (:parent "HoleCards"
                :type "void")
                nil [674 733])
            ("analysis" function
               (:parent "HoleCards"
                :type "void")
                nil [735 3238])
            ("compare" function
               (:parent "HoleCards"
                :arguments 
                  ( ("hc" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3263 3277]))                  
                :type "int")
                nil [3240 3292])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3321 3342]))                  
                :type "void")
                nil [3294 3358])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3387 3407]))                  
                :type "void")
                nil [3360 3497])
            ("size" function
               (:parent "HoleCards"
                :type "int")
                nil [3499 3552])
            ("debug" function
               (:parent "HoleCards"
                :type "void")
                nil [3554 3667])
            ("handler_chu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [3697 3707]))                  
                :type "void")
                nil [3669 4048])
            ("handler_chi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [4078 4088])
                    ("pattern" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [4089 4104])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [4105 4114]))                  
                :type "void")
                nil [4050 5152])
            ("handler_peng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [5183 5193])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [5194 5203]))                  
                :type "void")
                nil [5154 6133])
            ("handler_gang" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [6164 6174])
                    ("gang_flag" variable (:type "int") (reparse-symbol arg-sub-list) [6175 6189])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [6190 6199]))                  
                :type "void")
                nil [6135 8198])
            ("permit_ting" function
               (:parent "HoleCards"
                :type "bool")
                nil [8200 8316])
            ("permit_gang" function
               (:parent "HoleCards"
                :type "bool")
                nil [8318 9670])
            ("permit_gang" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [9700 9710]))                  
                :type "bool")
                nil [9672 10354])
            ("permit_peng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [10384 10394]))                  
                :type "bool")
                nil [10356 10884])
            ("is_shunzi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10912 10923])
                    ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10924 10935])
                    ("card3" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10936 10947]))                  
                :type "bool")
                nil [10886 11195])
            ("is_same" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11221 11232])
                    ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11233 11244]))                  
                :type "bool")
                nil [11197 17520]))          
      :file "hole_cards.cc"
      :pointmax 17520
      :fsize 17661
      :lastmodtime '(22465 24006 0 0)
      :unmatched-syntax nil))
  :file "!usr!local!zjhapp!thmajiang!libmajiang!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
