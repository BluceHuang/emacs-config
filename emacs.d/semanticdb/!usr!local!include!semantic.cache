;; Object include/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "include/"
  :tables
  (list
    (semanticdb-table "ev++.h"
      :major-mode 'c-mode
      :tags 
        '( ("EVPP_H__" variable (:constant-flag t) nil [2124 2132])
            ("ev.h" include nil nil [2167 2183])
            ("EV_USE_STDEXCEPT" variable (:constant-flag t) nil [2226 2242])
            ("stdexcept" include (:system-flag t) nil [2274 2295])
            ("ev" type
               (:members 
                  ( ("tstamp" type
                       (:typedef ("ev_tstamp" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [2322 2347])
                    ("" type
                       (:members 
                          ( ("UNDEF" variable
                               (:constant-flag t
                                :default-value (2373 2381)
                                :type "int")
                                (reparse-symbol enumsubparts) [2362 2381])
                            ("NONE" variable
                               (:constant-flag t
                                :default-value (2398 2405)
                                :type "int")
                                (reparse-symbol enumsubparts) [2387 2405])
                            ("READ" variable
                               (:constant-flag t
                                :default-value (2422 2429)
                                :type "int")
                                (reparse-symbol enumsubparts) [2411 2429])
                            ("WRITE" variable
                               (:constant-flag t
                                :default-value (2446 2454)
                                :type "int")
                                (reparse-symbol enumsubparts) [2435 2454])
                            ("TIMER" variable
                               (:constant-flag t
                                :default-value (2520 2528)
                                :type "int")
                                (reparse-symbol enumsubparts) [2509 2528])
                            ("PERIODIC" variable
                               (:constant-flag t
                                :default-value (2545 2556)
                                :type "int")
                                (reparse-symbol enumsubparts) [2534 2556])
                            ("SIGNAL" variable
                               (:constant-flag t
                                :default-value (2573 2582)
                                :type "int")
                                (reparse-symbol enumsubparts) [2562 2582])
                            ("CHILD" variable
                               (:constant-flag t
                                :default-value (2599 2607)
                                :type "int")
                                (reparse-symbol enumsubparts) [2588 2607])
                            ("STAT" variable
                               (:constant-flag t
                                :default-value (2624 2631)
                                :type "int")
                                (reparse-symbol enumsubparts) [2613 2631])
                            ("IDLE" variable
                               (:constant-flag t
                                :default-value (2648 2655)
                                :type "int")
                                (reparse-symbol enumsubparts) [2637 2655])
                            ("CHECK" variable
                               (:constant-flag t
                                :default-value (2672 2680)
                                :type "int")
                                (reparse-symbol enumsubparts) [2661 2680])
                            ("PREPARE" variable
                               (:constant-flag t
                                :default-value (2697 2707)
                                :type "int")
                                (reparse-symbol enumsubparts) [2686 2707])
                            ("FORK" variable
                               (:constant-flag t
                                :default-value (2724 2731)
                                :type "int")
                                (reparse-symbol enumsubparts) [2713 2731])
                            ("ASYNC" variable
                               (:constant-flag t
                                :default-value (2748 2756)
                                :type "int")
                                (reparse-symbol enumsubparts) [2737 2756])
                            ("EMBED" variable
                               (:constant-flag t
                                :default-value (2773 2781)
                                :type "int")
                                (reparse-symbol enumsubparts) [2762 2781])
                            ("ERROR" variable
                               (:constant-flag t
                                :default-value (2853 2861)
                                :type "int")
                                (reparse-symbol enumsubparts) [2842 2861]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [2351 2866])
                    ("" type
                       (:members 
                          ( ("AUTO" variable
                               (:constant-flag t
                                :default-value (2895 2906)
                                :type "int")
                                (reparse-symbol enumsubparts) [2883 2906])
                            ("NOENV" variable
                               (:constant-flag t
                                :default-value (2924 2936)
                                :type "int")
                                (reparse-symbol enumsubparts) [2912 2936])
                            ("FORKCHECK" variable
                               (:constant-flag t
                                :default-value (2954 2970)
                                :type "int")
                                (reparse-symbol enumsubparts) [2942 2970])
                            ("SELECT" variable
                               (:constant-flag t
                                :default-value (2989 3005)
                                :type "int")
                                (reparse-symbol enumsubparts) [2977 3005])
                            ("POLL" variable
                               (:constant-flag t
                                :default-value (3023 3037)
                                :type "int")
                                (reparse-symbol enumsubparts) [3011 3037])
                            ("EPOLL" variable
                               (:constant-flag t
                                :default-value (3055 3070)
                                :type "int")
                                (reparse-symbol enumsubparts) [3043 3070])
                            ("KQUEUE" variable
                               (:constant-flag t
                                :default-value (3088 3104)
                                :type "int")
                                (reparse-symbol enumsubparts) [3076 3104])
                            ("DEVPOLL" variable
                               (:constant-flag t
                                :default-value (3122 3139)
                                :type "int")
                                (reparse-symbol enumsubparts) [3110 3139])
                            ("PORT" variable
                               (:constant-flag t
                                :default-value (3157 3171)
                                :type "int")
                                (reparse-symbol enumsubparts) [3145 3171]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [2870 3176])
                    ("" type
                       (:members 
                          ( ("NOWAIT" variable
                               (:constant-flag t
                                :default-value (3289 3301)
                                :type "int")
                                (reparse-symbol enumsubparts) [3278 3301])
                            ("ONCE" variable
                               (:constant-flag t
                                :default-value (3318 3328)
                                :type "int")
                                (reparse-symbol enumsubparts) [3307 3328]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [3180 3333])
                    ("how_t" type
                       (:members 
                          ( ("ONE" variable
                               (:constant-flag t
                                :default-value (3362 3373)
                                :type "int")
                                (reparse-symbol enumsubparts) [3356 3373])
                            ("ALL" variable
                               (:constant-flag t
                                :default-value (3385 3396)
                                :type "int")
                                (reparse-symbol enumsubparts) [3379 3396]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [3337 3401])
                    ("bad_loop" type
                       (:superclasses 
                          ( ("std::runtime_error" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("bad_loop" function
                               (:constructor-flag t
                                :type ("bad_loop" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [3501 3619]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [3405 3631])
                    ("EV_AX" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3796 3801])
                    ("EV_AX_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3812 3818])
                    ("loop_ref" type
                       (:members 
                          ( ("loop_ref" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("EV_P" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3863 3868]))                                  
                                :type ("loop_ref" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [3853 3935])
                            ("==" function
                               (:operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("loop_ref" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3959 3981]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3941 4095])
                            ("!=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("loop_ref" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4119 4141]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4101 4254])
                            ("run" function
                               (:arguments 
                                  ( ("flags" variable
                                       (:default-value "0"
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [4926 4939]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4916 4981])
                            ("break_loop" function
                               (:arguments 
                                  ( ("how" variable
                                       (:default-value "ONE"
                                        :type ("how_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5004 5019]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4987 5070])
                            ("post_fork" function (:type "void") (reparse-symbol classsubparts) [5076 5142])
                            ("backend" function (:type "unsigned int") (reparse-symbol classsubparts) [5148 5231])
                            ("now" function (:type ("tstamp" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5237 5306])
                            ("ref" function (:type "void") (reparse-symbol classsubparts) [5312 5366])
                            ("unref" function (:type "void") (reparse-symbol classsubparts) [5372 5430])
                            ("once" function
                               (:arguments 
                                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [5936 5943])
                                    ("events" variable (:type "int") (reparse-symbol arg-sub-list) [5944 5955])
                                    ("timeout" variable (:type ("tstamp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5956 5971])
                                    ("cb" function
                                       (:function-pointer t
                                        :arguments 
                                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [5983 5987])
                                            ("" variable
                                               (:pointer 1
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [5988 5995]))                                          
                                        :type "void")
                                        nil nil)
                                    ("arg" variable
                                       (:pointer 1
                                        :default-value "0"
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [5997 6010]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [5925 6085])
                            ("once" function
                               (:template 
                                  ( ("K" type (:type "class") nil nil)
                                    ("void" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [6171 6178])
                                    ("events" variable (:type "int") (reparse-symbol arg-sub-list) [6179 6190])
                                    ("timeout" variable (:type ("tstamp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6191 6206])
                                    ("object" variable
                                       (:pointer 1
                                        :type ("K" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6207 6217]))                                  )
                                (reparse-symbol classsubparts) [6114 6305])
                            ("once" function
                               (:template 
                                  ( ("K" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [6381 6388])
                                    ("events" variable (:type "int") (reparse-symbol arg-sub-list) [6389 6400])
                                    ("timeout" variable (:type ("tstamp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6401 6416])
                                    ("object" variable
                                       (:pointer 1
                                        :type ("K" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6417 6427]))                                  )
                                (reparse-symbol classsubparts) [6348 6524])
                            ("method_thunk" function
                               (:template 
                                  ( ("K" type (:type "class") nil nil)
                                    ("void" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("revents" variable (:type "int") (reparse-symbol arg-sub-list) [6602 6614])
                                    ("arg" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [6615 6625]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [6530 6695])
                            ("once" function
                               (:template 
                                  ( ("K" type (:type "class") nil nil)
                                    ("void" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [6790 6797])
                                    ("events" variable (:type "int") (reparse-symbol arg-sub-list) [6798 6809])
                                    ("timeout" variable (:type ("tstamp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6810 6825])
                                    ("object" variable
                                       (:pointer 1
                                        :type ("K" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6826 6836]))                                  )
                                (reparse-symbol classsubparts) [6736 6931])
                            ("method_noargs_thunk" function
                               (:template 
                                  ( ("K" type (:type "class") nil nil)
                                    ("void" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("revents" variable (:type "int") (reparse-symbol arg-sub-list) [7013 7025])
                                    ("arg" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [7026 7036]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [6937 7099])
                            ("once" function
                               (:template 
                                  ( ("void" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [7179 7186])
                                    ("events" variable (:type "int") (reparse-symbol arg-sub-list) [7187 7198])
                                    ("timeout" variable (:type ("tstamp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7199 7214]))                                  )
                                (reparse-symbol classsubparts) [7138 7293])
                            ("simpler_func_thunk" function
                               (:template 
                                  ( ("void" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("revents" variable (:type "int") (reparse-symbol arg-sub-list) [7361 7373])
                                    ("arg" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [7374 7384]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [7299 7427])
                            ("once" function
                               (:template 
                                  ( ("void" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [7505 7512])
                                    ("events" variable (:type "int") (reparse-symbol arg-sub-list) [7513 7524])
                                    ("timeout" variable (:type ("tstamp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7525 7540]))                                  )
                                (reparse-symbol classsubparts) [7467 7620])
                            ("simplest_func_thunk" function
                               (:template 
                                  ( ("void" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("revents" variable (:type "int") (reparse-symbol arg-sub-list) [7686 7698])
                                    ("arg" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [7699 7709]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [7626 7745])
                            ("feed_fd_event" function
                               (:arguments 
                                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [7771 7778])
                                    ("revents" variable (:type "int") (reparse-symbol arg-sub-list) [7779 7791]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7751 7857])
                            ("feed_signal_event" function
                               (:arguments 
                                  ( ("signum" variable (:type "int") (reparse-symbol arg-sub-list) [7887 7898]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7863 7963]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [3829 8024])
                    ("default_loop" type
                       (:superclasses 
                          ( ("loop_ref" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("default_loop" function
                               (:throws ("bad_loop")
                                :constructor-flag t
                                :arguments 
                                  ( ("flags" variable
                                       (:default-value "AUTO"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [8508 8533]))                                  
                                :type ("default_loop" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [8494 8762])
                            ("private" label nil (reparse-symbol classsubparts) [8766 8774])
                            ("default_loop" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("default_loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8793 8814]))                                  
                                :type ("default_loop" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [8779 8815])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("default_loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8846 8867]))                                  
                                :type ("default_loop" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8820 8868]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [8455 8873])
                    ("get_default_loop" function
                       (:typemodifiers ("inline")
                        :type ("loop_ref" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [8877 9018])
                    ("EV_PX" variable (:constant-flag t) (reparse-symbol namespacesubparts) [9174 9179])
                    ("EV_PX_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [9190 9196])
                    ("base" type
                       (:template 
                          ( ("ev_watcher" type (:type "class") nil nil)
                            ("watcher" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("base" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("EV_PX" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9432 9438]))                                  
                                :type ("base" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [9426 9539])
                            ("set_" function
                               (:arguments 
                                  ( ("data" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [9556 9573])
                                    ("cb" function
                                       (:function-pointer t
                                        :arguments 
                                          ( ("ev_watcher" variable (:type ("EV_P_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9585 9603])
                                            ("" variable (:type ("w" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9603 9605])
                                            ("revents" variable (:type "int") (reparse-symbol arg-sub-list) [9606 9618]))                                          
                                        :type "void")
                                        nil nil))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [9545 9728])
                            ("set" function
                               (:template 
                                  ( ("void" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("data" variable
                                       (:pointer 1
                                        :default-value "0"
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [9817 9831]))                                  )
                                (reparse-symbol classsubparts) [9759 9898])
                            ("function_thunk" function
                               (:template 
                                  ( ("void" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("ev_watcher" variable (:type ("EV_P_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9980 9998])
                                    ("" variable (:type ("w" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9998 10000])
                                    ("revents" variable (:type "int") (reparse-symbol arg-sub-list) [10001 10013]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [9904 10087])
                            ("set" function
                               (:template 
                                  ( ("K" type (:type "class") nil nil)
                                    ("void" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("object" variable
                                       (:pointer 1
                                        :type ("K" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10184 10194]))                                  )
                                (reparse-symbol classsubparts) [10116 10261])
                            ("set" function
                               (:template 
                                  ( ("K" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("object" variable
                                       (:pointer 1
                                        :type ("K" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10336 10346]))                                  )
                                (reparse-symbol classsubparts) [10304 10422])
                            ("method_thunk" function
                               (:template 
                                  ( ("K" type (:type "class") nil nil)
                                    ("void" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("ev_watcher" variable (:type ("EV_P_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10512 10530])
                                    ("" variable (:type ("w" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10530 10532])
                                    ("revents" variable (:type "int") (reparse-symbol arg-sub-list) [10533 10545]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [10428 10647])
                            ("set" function
                               (:template 
                                  ( ("K" type (:type "class") nil nil)
                                    ("void" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("object" variable
                                       (:pointer 1
                                        :type ("K" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10734 10744]))                                  )
                                (reparse-symbol classsubparts) [10681 10818])
                            ("method_noargs_thunk" function
                               (:template 
                                  ( ("K" type (:type "class") nil nil)
                                    ("void" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("ev_watcher" variable (:type ("EV_P_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10900 10918])
                                    ("" variable (:type ("w" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10918 10920])
                                    ("revents" variable (:type "int") (reparse-symbol arg-sub-list) [10921 10933]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [10824 11000])
                            ("()" function
                               (:operator-flag t
                                :arguments 
                                  ( ("events" variable
                                       (:default-value "EV_UNDEF"
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [11023 11044]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11006 11171])
                            ("is_active" function (:type "bool") (reparse-symbol classsubparts) [11177 11288])
                            ("is_pending" function (:type "bool") (reparse-symbol classsubparts) [11294 11407])
                            ("feed_event" function
                               (:arguments 
                                  ( ("revents" variable (:type "int") (reparse-symbol arg-sub-list) [11430 11442]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11413 11533]))                          
                        :superclasses 
                          ( ("ev_watcher" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [9207 11538])
                    ("now" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("" variable (:type ("EV_P" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11561 11566]))                          
                        :type ("tstamp" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [11542 11609])
                    ("delay" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("interval" variable (:type ("tstamp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11632 11648]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [11613 11690])
                    ("version_major" function
                       (:typemodifiers ("inline")
                        :type "int")
                        (reparse-symbol namespacesubparts) [11694 11770])
                    ("version_minor" function
                       (:typemodifiers ("inline")
                        :type "int")
                        (reparse-symbol namespacesubparts) [11774 11850])
                    ("supported_backends" function
                       (:typemodifiers ("inline")
                        :type "unsigned int")
                        (reparse-symbol namespacesubparts) [11854 11949])
                    ("recommended_backends" function
                       (:typemodifiers ("inline")
                        :type "unsigned int")
                        (reparse-symbol namespacesubparts) [11953 12052])
                    ("embeddable_backends" function
                       (:typemodifiers ("inline")
                        :type "unsigned int")
                        (reparse-symbol namespacesubparts) [12056 12153])
                    ("set_allocator" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [12184 12195]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [12157 12271])
                    ("set_syserr_cb" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("cb" function
                               (:function-pointer t
                                :arguments 
                                  ( ("msg" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [12313 12329]))                                  
                                :type "void")
                                nil nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [12275 12383])
                    ("EV_CONSTRUCT" variable (:constant-flag t) (reparse-symbol namespacesubparts) [12795 12807])
                    ("EV_BEGIN_WATCHER" variable (:constant-flag t) (reparse-symbol namespacesubparts) [13185 13201])
                    ("EV_END_WATCHER" variable (:constant-flag t) (reparse-symbol namespacesubparts) [15800 15814]))                  
                :type "namespace")
                nil [2304 20438]))          
      :file "ev++.h"
      :pointmax 20448
      :fsize 20447
      :lastmodtime '(21889 26905 560561 730000)
      :unmatched-syntax '((semantic-list 17047 . 17061) (semantic-list 16436 . 17047) (punctuation ">" 16436 . 16467) (symbol "timer" 16436 . 16467) (punctuation "," 16436 . 16467) (symbol "ev_timer" 16436 . 16467) (punctuation "<" 16436 . 16467) (symbol "base" 16436 . 16467) (punctuation ":" 16436 . 16467) (symbol "timer" 16436 . 16467) ...)
      :lexical-table 
        '(("EV_USE_STDEXCEPT" . ((number "1" 2243 . 2244)))
          ("EVPP_H__")
          )
)
    (semanticdb-table "ev.h"
      :major-mode 'c-mode
      :tags 
        '( ("EV_H_" variable (:constant-flag t) nil [2127 2132])
            ("EV_CPP" variable (:constant-flag t) nil [2162 2168])
            ("EV_THROW" variable (:constant-flag t) nil [2215 2223]))          
      :file "ev.h"
      :pointmax 28956
      :fsize 28955
      :lastmodtime '(21889 26905 560561 730000)
      :unmatched-syntax '((EXTERN "extern" 2241 . 28946))
      :lexical-table 
        '(("EV_MINPRI" . ((semantic-list "(EV_FEATURE_CONFIG ? -2 : 0)" 3010 . 3038)))
          ("EV_ASYNC_ENABLE" . ((symbol "EV_FEATURE_WATCHERS" 4005 . 4024)))
          ("EV_PROTOTYPES" . ((number "1" 6104 . 6105)))
          ("EV_COMMON" . 
              ((VOID "void" 7778 . 7782) (punctuation "*" 7783 . 7784) (symbol "data" 7784 . 7788) (punctuation ";" 7788 . 7789)))
          ("ev_fork_set" (spp-arg-list ("ev") 22047 . 22051))
          ("ev_signal_init" (spp-arg-list ("ev" "cb" "signum") 22677 . 22691) . 
              ((DO "do" 22700 . 22702) (semantic-list "{ ev_init ((ev), (cb)); ev_signal_set ((ev), (signum)); }" 22703 . 22760) (WHILE "while" 22761 . 22766) (semantic-list "(0)" 22767 . 22770)))
          ("ev_prepare_init" (spp-arg-list ("ev" "cb") 23139 . 23146) . 
              ((DO "do" 23161 . 23163) (semantic-list "{ ev_init ((ev), (cb)); ev_prepare_set ((ev)); }" 23164 . 23212) (WHILE "while" 23213 . 23218) (semantic-list "(0)" 23219 . 23222)))
          ("EV_FEATURE_WATCHERS" . ((semantic-list "((EV_FEATURES) & 16)" 2773 . 2793)))
          ("EV_FEATURE_BACKENDS" . ((semantic-list "((EV_FEATURES) & 32)" 2822 . 2842)))
          ("EV_P_")
          ("EV_CB_DECLARE" (spp-arg-list ("type") 7842 . 7848) . 
              ((VOID "void" 7849 . 7853) (semantic-list "(*cb)" 7854 . 7859) (semantic-list "(EV_P_ struct type *w, int revents)" 7859 . 7894) (punctuation ";" 7894 . 7895)))
          ("EV_WATCHER" (spp-arg-list ("type") 9032 . 9038) . 
              ((INT "int" 9045 . 9048) (symbol "active" 9049 . 9055) (punctuation ";" 9055 . 9056) (INT "int" 9077 . 9080) (symbol "pending" 9081 . 9088) (punctuation ";" 9088 . 9089) (symbol "EV_DECL_PRIORITY" 9110 . 9126) (symbol "EV_COMMON" 9146 . 9155) (symbol "EV_CB_DECLARE" 9172 . 9185) (semantic-list "(type)" 9186 . 9192)))
          ("ev_child_set" (spp-arg-list ("ev" "pid_" "trace_") 21464 . 21480) . 
              ((DO "do" 21489 . 21491) (semantic-list "{ (ev)->pid = (pid_); (ev)->flags = !!(trace_); }" 21492 . 21541) (WHILE "while" 21542 . 21547) (semantic-list "(0)" 21548 . 21551)))
          ("ev_cleanup_set" (spp-arg-list ("ev") 22137 . 22141))
          ("ev_child_init" (spp-arg-list ("ev" "cb" "pid" "trace") 22792 . 22809) . 
              ((DO "do" 22816 . 22818) (semantic-list "{ ev_init ((ev), (cb)); ev_child_set ((ev),(pid),(trace)); }" 22819 . 22879) (WHILE "while" 22880 . 22885) (semantic-list "(0)" 22886 . 22889)))
          ("ev_cleanup_init" (spp-arg-list ("ev" "cb") 23568 . 23575) . 
              ((DO "do" 23590 . 23592) (semantic-list "{ ev_init ((ev), (cb)); ev_cleanup_set ((ev)); }" 23593 . 23641) (WHILE "while" 23642 . 23647) (semantic-list "(0)" 23648 . 23651)))
          ("EV_PERIODIC_ENABLE" . ((symbol "EV_FEATURE_WATCHERS" 3250 . 3269)))
          ("EV_INLINE" . ((STATIC "static" 5885 . 5891)))
          ("ev_check_set" (spp-arg-list ("ev") 21875 . 21879))
          ("ev_timer_init" (spp-arg-list ("ev" "cb" "after" "repeat") 22427 . 22447) . 
              ((DO "do" 22451 . 22453) (semantic-list "{ ev_init ((ev), (cb)); ev_timer_set ((ev),(after),(repeat)); }" 22454 . 22517) (WHILE "while" 22518 . 22523) (semantic-list "(0)" 22524 . 22527)))
          ("EV_H_")
          ("EV_MULTIPLICITY" . ((symbol "EV_FEATURE_CONFIG" 3169 . 3186)))
          ("EV_PREPARE_ENABLE" . ((symbol "EV_FEATURE_WATCHERS" 3406 . 3425)))
          ("EV_FORK_ENABLE" . ((symbol "EV_FEATURE_WATCHERS" 3633 . 3652)))
          ("EV_DEFAULT_UC_")
          ("EV_API_DECL" . ((EXTERN "extern" 5976 . 5982)))
          ("ev_embed_set" (spp-arg-list ("ev" "other_") 21962 . 21973) . 
              ((DO "do" 21987 . 21989) (semantic-list "{ (ev)->other = (other_); }" 21990 . 22017) (WHILE "while" 22018 . 22023) (semantic-list "(0)" 22024 . 22027)))
          ("ev_periodic_init" (spp-arg-list ("ev" "cb" "ofs" "ival" "rcb") 22552 . 22572) . 
              ((DO "do" 22573 . 22575) (semantic-list "{ ev_init ((ev), (cb)); ev_periodic_set ((ev),(ofs),(ival),(rcb)); }" 22576 . 22644) (WHILE "while" 22645 . 22650) (semantic-list "(0)" 22651 . 22654)))
          ("EVUNLOOP_ONE" . ((symbol "EVBREAK_ONE" 28208 . 28219)))
          ("EV_DEFAULT_UC")
          ("EV_VERSION_MINOR" . ((number "15" 6247 . 6249)))
          ("EV_CB_INVOKE" (spp-arg-list ("watcher" "revents") 7945 . 7962) . 
              ((semantic-list "(watcher)" 7963 . 7972) (punctuation "-" 7972 . 7973) (punctuation ">" 7973 . 7974) (symbol "cb" 7974 . 7976) (semantic-list "(EV_A_ (watcher), (revents))" 7977 . 8005)))
          ("ev_idle_set" (spp-arg-list ("ev") 21700 . 21704))
          ("ev_check_init" (spp-arg-list ("ev" "cb") 23244 . 23251) . 
              ((DO "do" 23268 . 23270) (semantic-list "{ ev_init ((ev), (cb)); ev_check_set ((ev)); }" 23271 . 23317) (WHILE "while" 23318 . 23323) (semantic-list "(0)" 23324 . 23327)))
          ("ev_signal_set" (spp-arg-list ("ev" "signum_") 21377 . 21389) . 
              ((DO "do" 21401 . 21403) (semantic-list "{ (ev)->signum = (signum_); }" 21404 . 21433) (WHILE "while" 21434 . 21439) (semantic-list "(0)" 21440 . 21443)))
          ("ev_prepare_set" (spp-arg-list ("ev") 21790 . 21794))
          ("EVLOOP_NONBLOCK" . ((symbol "EVRUN_NOWAIT" 28091 . 28103)))
          ("EV_CHILD_ENABLE" . ((symbol "EV_FEATURE_WATCHERS" 3921 . 3940)))
          ("ev_set_cb" (spp-arg-list ("ev" "cb_") 24574 . 24582) . 
              ((symbol "ev_cb" 24601 . 24606) (semantic-list "(ev)" 24607 . 24611) (punctuation "=" 24612 . 24613) (semantic-list "(cb_)" 24614 . 24619)))
          ("EV_CHECK_ENABLE" . ((symbol "EV_FEATURE_WATCHERS" 3483 . 3502)))
          ("EV_IDLE_ENABLE" . ((symbol "EV_FEATURE_WATCHERS" 3558 . 3577)))
          ("ev_embed_init" (spp-arg-list ("ev" "cb" "other") 23349 . 23362) . 
              ((DO "do" 23373 . 23375) (semantic-list "{ ev_init ((ev), (cb)); ev_embed_set ((ev),(other)); }" 23376 . 23430) (WHILE "while" 23431 . 23436) (semantic-list "(0)" 23437 . 23440)))
          ("ev_cb" (spp-arg-list ("ev") 24061 . 24065) . 
              ((semantic-list "(ev)" 24093 . 24097) (punctuation "-" 24097 . 24098) (punctuation ">" 24098 . 24099) (symbol "cb" 24099 . 24101)))
          ("ev_set_priority" (spp-arg-list ("ev" "pri") 24226 . 24234) . ((semantic-list "((ev), (pri))" 24247 . 24260)))
          ("EV_SIGNAL_ENABLE" . ((symbol "EV_FEATURE_WATCHERS" 3793 . 3812)))
          ("EV_ATOMIC_T" . ((symbol "sig_atomic_t" 4534 . 4546) (VOLATILE "volatile" 4547 . 4555)))
          ("EV_A_")
          ("EV_DEFAULT_")
          ("EV_WATCHER_LIST" (spp-arg-list ("type") 9231 . 9237) . 
              ((symbol "EV_WATCHER" 9244 . 9254) (semantic-list "(type)" 9255 . 9261) (STRUCT "struct" 9269 . 9275) (symbol "ev_watcher_list" 9276 . 9291) (punctuation "*" 9292 . 9293) (symbol "next" 9293 . 9297) (punctuation ";" 9297 . 9298)))
          ("ev_async_set" (spp-arg-list ("ev") 22222 . 22226))
          ("ev_io_init" (spp-arg-list ("ev" "cb" "fd" "events") 22308 . 22325) . 
              ((DO "do" 22335 . 22337) (semantic-list "{ ev_init ((ev), (cb)); ev_io_set ((ev),(fd),(events)); }" 22338 . 22395) (WHILE "while" 22396 . 22401) (semantic-list "(0)" 22402 . 22405)))
          ("ev_is_pending" (spp-arg-list ("ev") 23779 . 23783) . ((semantic-list "(0 + ((ev_watcher *)(void *)(ev))->pending)" 23803 . 23846)))
          ("ev_is_active" (spp-arg-list ("ev") 23930 . 23934) . ((semantic-list "(0 + ((ev_watcher *)(void *)(ev))->active)" 23955 . 23997)))
          ("ev_priority" (spp-arg-list ("ev") 24159 . 24163) . ((semantic-list "((ev), EV_MINPRI)" 24184 . 24201)))
          ("ev_periodic_at" (spp-arg-list ("ev") 24481 . 24485) . ((semantic-list "(+((ev_watcher_time *)(ev))->at)" 24504 . 24536)))
          ("EVUNLOOP_ALL" . ((symbol "EVBREAK_ALL" 28246 . 28257)))
          ("EV_FEATURE_DATA" . ((semantic-list "((EV_FEATURES) &  2)" 2626 . 2646)))
          ("EV_FEATURE_CONFIG" . ((semantic-list "((EV_FEATURES) &  4)" 2675 . 2695)))
          ("EV_WATCHER_TIME" (spp-arg-list ("type") 9337 . 9343) . 
              ((symbol "EV_WATCHER" 9350 . 9360) (semantic-list "(type)" 9361 . 9367) (symbol "ev_tstamp" 9375 . 9384) (symbol "at" 9385 . 9387) (punctuation ";" 9387 . 9388)))
          ("ev_stat_set" (spp-arg-list ("ev" "path_" "interval_") 21571 . 21591) . 
              ((DO "do" 21597 . 21599) (semantic-list "{ (ev)->path = (path_); (ev)->interval = (interval_); (ev)->wd = -2; }" 21600 . 21670) (WHILE "while" 21671 . 21676) (semantic-list "(0)" 21677 . 21680)))
          ("ev_async_init" (spp-arg-list ("ev" "cb") 23673 . 23680) . 
              ((DO "do" 23697 . 23699) (semantic-list "{ ev_init ((ev), (cb)); ev_async_set ((ev)); }" 23700 . 23746) (WHILE "while" 23747 . 23752) (semantic-list "(0)" 23753 . 23756)))
          ("EVLOOP_ONESHOT" . ((symbol "EVRUN_ONCE" 28130 . 28140)))
          ("EV_FEATURES" . ((number "0x7f" 2528 . 2532)))
          ("EV_FEATURE_API" . ((semantic-list "((EV_FEATURES) &  8)" 2724 . 2744)))
          ("EV_A")
          ("EV_DEFAULT")
          ("ev_init" (spp-arg-list ("ev" "cb_") 20781 . 20789) . 
              ((DO "do" 20790 . 20792) (semantic-list "{			\\
  ((ev_watcher *)(void *)(ev))->active  =	\\
  ((ev_watcher *)(void *)(ev))->pending = 0;	\\
  ev_set_priority ((ev), 0);			\\
  ev_set_cb ((ev), cb_);			\\
}" 20793 . 20953) (WHILE "while" 20954 . 20959) (semantic-list "(0)" 20960 . 20963)))
          ("ev_timer_set" (spp-arg-list ("ev" "after_" "repeat_") 21105 . 21124) . 
              ((DO "do" 21130 . 21132) (semantic-list "{ ((ev_watcher_time *)(ev))->at = (after_); (ev)->repeat = (repeat_); }" 21133 . 21204) (WHILE "while" 21205 . 21210) (semantic-list "(0)" 21211 . 21214)))
          ("ev_periodic_set" (spp-arg-list ("ev" "ofs_" "ival_" "rcb_") 21238 . 21258) . 
              ((DO "do" 21260 . 21262) (semantic-list "{ (ev)->offset = (ofs_); (ev)->interval = (ival_); (ev)->reschedule_cb = (rcb_); }" 21263 . 21345) (WHILE "while" 21346 . 21351) (semantic-list "(0)" 21352 . 21355)))
          ("ev_idle_init" (spp-arg-list ("ev" "cb") 23032 . 23039) . 
              ((DO "do" 23057 . 23059) (semantic-list "{ ev_init ((ev), (cb)); ev_idle_set ((ev)); }" 23060 . 23105) (WHILE "while" 23106 . 23111) (semantic-list "(0)" 23112 . 23115)))
          ("EVUNLOOP_CANCEL" . ((symbol "EVBREAK_CANCEL" 28167 . 28181)))
          ("EV_COMPAT3" . ((number "1" 2411 . 2412)))
          ("EV_FEATURE_OS" . ((semantic-list "((EV_FEATURES) & 64)" 2871 . 2891)))
          ("EV_CB" (spp-arg-list ("type" "name") 8058 . 8069) . 
              ((VOID "void" 8070 . 8074) (symbol "name" 8075 . 8079) (semantic-list "(EV_P_ struct ev_ ## type *w, int revents)" 8080 . 8122)))
          ("EV_DECL_PRIORITY")
          ("ev_fork_init" (spp-arg-list ("ev" "cb") 23461 . 23468) . 
              ((DO "do" 23486 . 23488) (semantic-list "{ ev_init ((ev), (cb)); ev_fork_set ((ev)); }" 23489 . 23534) (WHILE "while" 23535 . 23540) (semantic-list "(0)" 23541 . 23544)))
          ("EV_CPP" (spp-arg-list ("x") 2168 . 2171) . ((symbol "x" 2172 . 2173)))
          ("EV_THROW" . ((symbol "EV_CPP" 2224 . 2230) (semantic-list "(throw())" 2230 . 2239)))
          ("EV_FEATURE_CODE" . ((semantic-list "((EV_FEATURES) &  1)" 2577 . 2597)))
          ("EV_MAXPRI" . ((semantic-list "(EV_FEATURE_CONFIG ? +2 : 0)" 3083 . 3111)))
          ("EV_STAT_ENABLE" . ((symbol "EV_FEATURE_WATCHERS" 3325 . 3344)))
          ("EV_CLEANUP_ENABLE" . ((symbol "EV_FEATURE_WATCHERS" 3714 . 3733)))
          ("EV_WALK_ENABLE" . ((number "0" 4157 . 4158)))
          ("EV_P" . ((VOID "void" 5555 . 5559)))
          ("EV_VERSION_MAJOR" . ((number "4" 6220 . 6221)))
          ("ev_io_set" (spp-arg-list ("ev" "fd_" "events_") 20982 . 20998) . 
              ((DO "do" 21010 . 21012) (semantic-list "{ (ev)->fd = (fd_); (ev)->events = (events_) | EV__IOFDSET; }" 21013 . 21074) (WHILE "while" 21075 . 21080) (semantic-list "(0)" 21081 . 21084)))
          ("ev_stat_init" (spp-arg-list ("ev" "cb" "path" "interval") 22910 . 22931) . 
              ((DO "do" 22935 . 22937) (semantic-list "{ ev_init ((ev), (cb)); ev_stat_set ((ev),(path),(interval)); }" 22938 . 23001) (WHILE "while" 23002 . 23007) (semantic-list "(0)" 23008 . 23011)))
          )
))
  :file "!usr!local!include!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
