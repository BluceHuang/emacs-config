;; Object libmajiang/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "libmajiang/"
  :tables
  (list
    (semanticdb-table "hole_cards.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("card_type.h" include nil nil [19 41])
            ("hole_cards.h" include nil nil [42 65])
            ("HoleCards::card_types" variable (:type ("std::priority_queue" type
                 (:template-specifier 
                    ( ("CardTypePriority" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [378 438])
            ("HoleCards::card_types_back" variable (:type ("std::priority_queue" type
                 (:template-specifier 
                    ( ("CardTypePriority" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [439 504])
            ("HoleCards" function
               (:constructor-flag t
                :parent "HoleCards"
                :type ("HoleCards" type (:type "class") nil nil))
                nil [506 696])
            ("init" function
               (:parent "HoleCards"
                :arguments 
                  ( ("duizi" variable (:type "int") (reparse-symbol arg-sub-list) [719 729])
                    ("ghost" variable (:type "int") (reparse-symbol arg-sub-list) [730 740])
                    ("gh_card" variable (:type "int") (reparse-symbol arg-sub-list) [741 753])
                    ("feng" variable (:type "int") (reparse-symbol arg-sub-list) [754 763]))                  
                :type "void")
                nil [698 858])
            ("add_card" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [885 895]))                  
                :type "void")
                nil [860 953])
            ("sort" function
               (:parent "HoleCards"
                :type "void")
                nil [955 1014])
            ("analysis" function
               (:parent "HoleCards"
                :type "void")
                nil [1016 3954])
            ("compare" function
               (:parent "HoleCards"
                :arguments 
                  ( ("hc" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3979 3993]))                  
                :type "int")
                nil [3956 4008])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4037 4058]))                  
                :type "void")
                nil [4010 4074])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4103 4123]))                  
                :type "void")
                nil [4076 4213])
            ("size" function
               (:parent "HoleCards"
                :type "int")
                nil [4215 4268])
            ("debug" function
               (:parent "HoleCards"
                :type "void")
                nil [4270 4383])
            ("handler_chu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [4413 4423]))                  
                :type "void")
                nil [4385 4764])
            ("handler_chi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [4794 4804])
                    ("pattern" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [4805 4820])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [4821 4830]))                  
                :type "void")
                nil [4766 5889])
            ("handler_peng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [5920 5930])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [5931 5940]))                  
                :type "void")
                nil [5891 6950])
            ("handler_gang" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [6981 6991])
                    ("gang_flag" variable (:type "int") (reparse-symbol arg-sub-list) [6992 7006])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [7007 7016]))                  
                :type "void")
                nil [6952 9276])
            ("permit_ting" function
               (:parent "HoleCards"
                :type "bool")
                nil [9278 9394])
            ("permit_gang" function
               (:parent "HoleCards"
                :type "bool")
                nil [9396 10976])
            ("permit_gang" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [11006 11016]))                  
                :type "bool")
                nil [10978 11719])
            ("permit_peng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [11749 11759]))                  
                :type "bool")
                nil [11721 12249])
            ("is_shunzi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card1" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12277 12289])
                    ("card2" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12290 12302])
                    ("card3" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12303 12315]))                  
                :type "bool")
                nil [12251 14091])
            ("is_same" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14117 14128])
                    ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14129 14140]))                  
                :type "bool")
                nil [14093 14345])
            ("is_same" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14371 14382])
                    ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14383 14394])
                    ("card3" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14395 14406]))                  
                :type "bool")
                nil [14347 14543])
            ("has_card" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [14829 14839])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [14840 14849]))                  
                :type "bool")
                nil [14804 15431])
            ("permit_hu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [15459 15469]))                  
                :type "bool")
                nil [15433 16717])
            ("permit_hu" function
               (:parent "HoleCards"
                :type "bool")
                nil [16719 17902])
            ("permit_chi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [17931 17941]))                  
                :type "bool")
                nil [17904 19386])
            ("is_complete" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [19416 19436])
                    ("mhole_cards" variable
                       (:pointer 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("std::vector" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [19437 19482]))                  
                :type "bool")
                nil [19388 24648])
            ("is_complete" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [24678 24698])
                    ("d1" variable (:type "int") (reparse-symbol arg-sub-list) [24699 24706])
                    ("d2" variable (:type "int") (reparse-symbol arg-sub-list) [24707 24714])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [24715 24724]))                  
                :type "bool")
                nil [24650 25545])
            ("handler_ting" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [25575 25585]))                  
                :type "int")
                nil [25547 26106])
            ("normal_cards_analysis" function
               (:parent "HoleCards"
                :arguments 
                  ( ("newcards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26146 26169])
                    ("value" variable (:type "int") (reparse-symbol arg-sub-list) [26170 26180])
                    ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26181 26192]))                  
                :type "bool")
                nil [26108 27018])
            ("hu_cards_analysis" function
               (:parent "HoleCards"
                :arguments 
                  ( ("newcards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [27054 27077]))                  
                :type "bool")
                nil [27020 29503])
            ("ghost_cards_analysis" function
               (:parent "HoleCards"
                :arguments 
                  ( ("newcards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29542 29565])
                    ("value" variable (:type "int") (reparse-symbol arg-sub-list) [29566 29576])
                    ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29577 29588]))                  
                :type "bool")
                nil [29505 31949])
            ("analysis" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31982 31992]))                  
                :type "void")
                nil [31957 33431])
            ("analysis_card_type" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [33468 33478]))                  
                :type "void")
                nil [33433 34275])
            ("is_duidui_hu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [34306 34327]))                  
                :type "bool")
                nil [34277 35463])
            ("is_peng_peng_hu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [35497 35518]))                  
                :type "bool")
                nil [35465 35939])
            ("is_shi_san_yao" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [35972 35993]))                  
                :type "bool")
                nil [35941 36900])
            ("register_type_handler" function
               (:parent "HoleCards"
                :arguments 
                  ( ("type" variable (:type "int") (reparse-symbol arg-sub-list) [36940 36949])
                    ("priority" variable (:type "int") (reparse-symbol arg-sub-list) [36950 36963]))                  
                :type "void")
                nil [36902 37063])
            ("clear_type_handler" function
               (:parent "HoleCards"
                :type "void")
                nil [37065 37254])
            ("handler_card_type_call" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [37295 37316]))                  
                :type "bool")
                nil [37256 43248])
            ("is_haohua_qi_xiao_dui" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [43296 43317]))                  
                :type "bool")
                nil [43258 43890])
            ("is_shuang_haohua_qi_xiao_dui" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [43946 43967]))                  
                :type "bool")
                nil [43901 44540])
            ("is_san_haohua_qi_xiao_dui" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [44593 44614]))                  
                :type "bool")
                nil [44551 45237])
            ("is_xiao_san_yuan" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [45279 45300]))                  
                :type "bool")
                nil [45246 47145])
            ("is_da_san_yuan" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [47185 47206]))                  
                :type "bool")
                nil [47154 48656])
            ("is_xiao_si_xi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [48695 48716]))                  
                :type "bool")
                nil [48665 50502])
            ("is_da_si_xi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [50539 50560]))                  
                :type "bool")
                nil [50511 52188])
            ("is_yao_jiu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [52223 52244]))                  
                :type "bool")
                nil [52196 53165])
            ("is_hun_yao_jiu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [53205 53226]))                  
                :type "bool")
                nil [53174 54410])
            ("is_qing_yao_jiu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [54451 54472]))                  
                :type "bool")
                nil [54419 55497])
            ("is_jiu_lian_bao_deng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [55544 55565]))                  
                :type "bool")
                nil [55507 56614])
            ("is_hun_peng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [56650 56671]))                  
                :type "bool")
                nil [56622 56810])
            ("is_qing_peng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [56847 56868]))                  
                :type "bool")
                nil [56818 57008])
            ("is_zi_yi_se" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [57044 57065]))                  
                :type "bool")
                nil [57016 57803])
            ("is_quan_qiu_ren" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [57844 57865]))                  
                :type "bool")
                nil [57812 57970])
            ("is_qing_yi_se" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [58009 58030]))                  
                :type "bool")
                nil [57979 58906])
            ("is_hun_yi_se" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [58944 58965]))                  
                :type "bool")
                nil [58915 59974])
            ("is_ping_hu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [60013 60034]))                  
                :type "bool")
                nil [59986 60538])
            ("is_ji_hu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [60577 60598]))                  
                :type "bool")
                nil [60552 60711])
            ("is_shi_ba_luo_han" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [60754 60775]))                  
                :type "bool")
                nil [60720 60856])
            ("set_shi_san_yao" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "bool") (reparse-symbol arg-sub-list) [60890 60901]))                  
                :type "void")
                nil [60858 60937])
            ("set_si_ghost" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "bool") (reparse-symbol arg-sub-list) [60968 60979]))                  
                :type "void")
                nil [60939 61012])
            ("set_ghost" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [61040 61050]))                  
                :type "void")
                nil [61014 61078]))          
      :file "hole_cards.cc"
      :pointmax 61079
      :fsize 62150
      :lastmodtime '(22833 2585 0 0)
      :unmatched-syntax nil))
  :file "!usr!local!fmapp!hzmajiang!libmajiang!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
