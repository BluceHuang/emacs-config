;; Object libzjh/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "libzjh/"
  :tables
  (list
    (semanticdb-table "deck.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("algorithm" include (:system-flag t) nil [1 21])
            ("deck.h" include nil nil [22 39])
            ("card_type.h" include nil nil [40 62])
            ("card_arr" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
    0x01, 0x02, 0x03, 0x04,
    0x05, 0x06
}"
                :type "int")
                nil [64 135])
            ("fill" function
               (:parent "Deck"
                :type "void")
                nil [137 372])
            ("empty" function
               (:parent "Deck"
                :type "void")
                nil [374 412])
            ("size" function
               (:parent "Deck"
                :type "int")
                nil [414 462])
            ("push" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [480 490]))                  
                :type "bool")
                nil [464 532])
            ("pop" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [549 560]))                  
                :type "bool")
                nil [534 650])
            ("myrandom" function
               (:arguments 
                  ( ("i" variable (:type "int") (reparse-symbol arg-sub-list) [665 671]))                  
                :type "int")
                nil [652 700])
            ("shuffle" function
               (:parent "Deck"
                :arguments 
                  ( ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [721 730]))                  
                :type "bool")
                nil [702 841])
            ("get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [869 890]))                  
                :type "void")
                nil [843 1003])
            ("get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1031 1052])
                    ("card_type" variable (:type "int") (reparse-symbol arg-sub-list) [1053 1067]))                  
                :type "void")
                nil [1005 1364])
            ("change_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1395 1416])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1417 1425]))                  
                :type "void")
                nil [1366 1619])
            ("delete_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("tmp" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1646 1669]))                  
                :type "void")
                nil [1622 1905])
            ("debug" function
               (:parent "Deck"
                :type "void")
                nil [1907 1955]))          
      :file "deck.cc"
      :pointmax 1956
      :fsize 1955
      :lastmodtime '(22037 57221 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "card.h"
      :file "card.h"
      :fsize 2433
      :lastmodtime '(22037 57221 0 0)))
  :file "!usr!local!zjhapp!yuxiaxie!src!yuxiaxie!libzjh!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
