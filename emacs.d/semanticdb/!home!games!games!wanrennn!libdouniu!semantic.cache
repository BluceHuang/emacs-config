;; Object libdouniu/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "libdouniu/"
  :tables
  (list
    (semanticdb-table "deck.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("algorithm" include (:system-flag t) nil [1 21])
            ("deck.h" include nil nil [22 39])
            ("card_arr" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
0x01, 0x11, 0x21, 0x31,		//A 14 
0x02, 0x12, 0x22, 0x32,		//2 15
0x03, 0x13, 0x23, 0x33,		//3 3
0x04, 0x14, 0x24, 0x34,		//4 4
0x05, 0x15, 0x25, 0x35,		//5 5
0x06, 0x16, 0x26, 0x36,		//6 6
0x07, 0x17, 0x27, 0x37,		//7 7
0x08, 0x18, 0x28, 0x38,		//8 8
0x09, 0x19, 0x29, 0x39,		//9 9
0x0A, 0x1A, 0x2A, 0x3A,		//10 10
0x0B, 0x1B, 0x2B, 0x3B,		//J 11
0x0C, 0x1C, 0x2C, 0x3C,		//Q 12
0x0D, 0x1D, 0x2D, 0x3D,		//K 13
}"
                :type "int")
                nil [41 480])
            ("fill" function
               (:parent "Deck"
                :type "void")
                nil [482 590])
            ("empty" function
               (:parent "Deck"
                :type "void")
                nil [592 630])
            ("count" function
               (:parent "Deck"
                :type "int")
                nil [632 681])
            ("push" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [699 709]))                  
                :type "bool")
                nil [683 751])
            ("pop" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [768 779]))                  
                :type "bool")
                nil [753 871])
            ("shuffle" function
               (:parent "Deck"
                :arguments 
                  ( ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [892 901]))                  
                :type "bool")
                nil [873 994])
            ("get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1022 1043]))                  
                :type "void")
                nil [996 1157])
            ("change_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1188 1196])
                    ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1197 1218]))                  
                :type "void")
                nil [1159 1361])
            ("has_hole_cards" function
               (:parent "Deck"
                :type "bool")
                nil [1363 1492])
            ("debug" function
               (:parent "Deck"
                :type "void")
                nil [1494 1542]))          
      :file "deck.cc"
      :pointmax 1543
      :fsize 1542
      :lastmodtime '(21901 16805 254274 486000)
      :unmatched-syntax nil)
    (semanticdb-table "deck.h"
      :file "deck.h"
      :fsize 465
      :lastmodtime '(21901 16805 253274 473000)))
  :file "!home!games!games!wanrennn!libdouniu!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
