;; Object libdouniu/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "libdouniu/"
  :tables
  (list
    (semanticdb-table "hole_cards.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("card_type.h" include nil nil [19 41])
            ("hole_cards.h" include nil nil [42 65])
            ("card_type_str" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
	(char *)\"CARD_TYPE_NONNIU\",
	(char *)\"CARD_TYPE_NIUDING\",
	(char *)\"CARD_TYPE_NIUER\",
	(char *)\"CARD_TYPE_NIUSAN\",
	(char *)\"CARD_TYPE_NIUSI\",
	(char *)\"CARD_TYPE_NIUWU\",
	(char *)\"CARD_TYPE_NIULIU\",
	(char *)\"CARD_TYPE_NIUQI\",
	(char *)\"CARD_TYPE_NIUBA\",
	(char *)\"CARD_TYPE_NIUJIU\",
	(char *)\"CARD_TYPE_NIUNIU\",
	(char *)\"CARD_TYPE_ZHADAN\",
    (char *)\"CARD_TYPE_JINNIU\",
	(char *)\"CARD_TYPE_WUXIAONIU\"
}"
                :type "char")
                nil [67 516])
            ("HoleCards" function
               (:constructor-flag t
                :parent "HoleCards"
                :type ("HoleCards" type (:type "class") nil nil))
                nil [518 572])
            ("add_card" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [599 609]))                  
                :type "void")
                nil [574 667])
            ("sort" function
               (:parent "HoleCards"
                :type "void")
                nil [669 729])
            ("analysis" function
               (:parent "HoleCards"
                :type "void")
                nil [731 4547])
            ("compare" function
               (:parent "HoleCards"
                :arguments 
                  ( ("hc" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4572 4586]))                  
                :type "int")
                nil [4549 4896])
            ("qsort_compare" function
               (:parent "HoleCards"
                :arguments 
                  ( ("pCards1" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [4927 4947])
                    ("pCards2" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [4948 4968]))                  
                :type "int")
                nil [4898 5194])
            ("compare" function
               (:parent "HoleCards"
                :arguments 
                  ( ("cards1" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5220 5238])
                    ("cards2" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5239 5257]))                  
                :type "bool")
                nil [5196 5405])
            ("set_card_type" function
               (:parent "HoleCards"
                :arguments 
                  ( ("type" variable (:type "int") (reparse-symbol arg-sub-list) [5437 5446]))                  
                :type "void")
                nil [5407 5469])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5498 5519]))                  
                :type "void")
                nil [5471 5535])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5564 5584]))                  
                :type "void")
                nil [5537 5674])
            ("debug" function
               (:parent "HoleCards"
                :type "void")
                nil [5676 5829])
            ("delete_card" function
               (:parent "HoleCards"
                :type "void")
                nil [5831 5911]))          
      :file "hole_cards.cc"
      :pointmax 5912
      :fsize 5911
      :lastmodtime '(22242 29621 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "card.h"
      :major-mode 'c++-mode
      :tags 
        '( ("_CARD_H_" variable (:constant-flag t) nil [26 34])
            ("string" include (:system-flag t) nil [36 53])
            ("iostream" include (:system-flag t) nil [54 73])
            ("cstdio" include (:system-flag t) nil [74 91])
            ("vector" include (:system-flag t) nil [92 109])
            ("map" include (:system-flag t) nil [110 124])
            ("algorithm" include (:system-flag t) nil [125 145])
            ("card_type.h" include nil nil [147 169])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [171 191])
            ("Card" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [875 882])
                    ((((0) "Face")) type (:superclasses ("" type (:members (("Ace" variable (:constant-flag t :default-value (907 908) :type "int") (reparse-symbol enumsubparts) [901 908]) ("Two" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [912 916]) ("Three" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [919 925]) ("Four" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [928 933]) ("Five" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [936 941]) ("Six" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [944 948]) ("Seven" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [951 957]) ("Eight" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [960 966]) ("Nine" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [969 974]) ("Ten" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [977 981]) ("Jack" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [984 989]) ("Queen" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [992 998]) ("King" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [1001 1006]) ("FirstFace" variable (:constant-flag t :default-value (1022 1025) :type "int") (reparse-symbol enumsubparts) [1010 1025]) ("LastFace" variable (:constant-flag t :default-value (1040 1044) :type "int") (reparse-symbol enumsubparts) [1029 1044])) :type "enum") nil nil) :type "typedef") (reparse-symbol classsubparts) [884 1053])
                    ((((0) "Suit")) type (:superclasses ("" type (:members (("Diamonds" variable (:constant-flag t :default-value (1085 1086) :type "int") (reparse-symbol enumsubparts) [1074 1086]) ("Clubs" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [1090 1096]) ("Hearts" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [1099 1106]) ("Spades" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [1109 1116]) ("FirstSuit" variable (:constant-flag t :default-value (1134 1142) :type "int") (reparse-symbol enumsubparts) [1122 1142]) ("LastSuit" variable (:constant-flag t :default-value (1157 1163) :type "int") (reparse-symbol enumsubparts) [1146 1163])) :type "enum") nil nil) :type "typedef") (reparse-symbol classsubparts) [1057 1172])
                    ((("face" 0 nil nil nil)) variable (:type "int") (reparse-symbol classsubparts) [1176 1185])
                    ((("suit" 0 nil nil nil)) variable (:type "int") (reparse-symbol classsubparts) [1187 1196])
                    ((("value" 0 nil nil nil)) variable (:type "int") (reparse-symbol classsubparts) [1200 1210])
                    ((("point" 0 nil nil nil)) variable (:type "int") (reparse-symbol classsubparts) [1212 1222])
                    ("Card" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1226 1233])
                    ("get_card" function
                       (:prototype-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1279 1302]))                  
                :type "class")
                nil [862 2882]))          
      :file "card.h"
      :pointmax 2906
      :fsize 2921
      :lastmodtime '(22081 38961 0 0)
      :unmatched-syntax '((semantic-list 2669 . 2879) (semantic-list 2621 . 2667) (symbol 2611 . 2621) (VOID 2606 . 2610) (STATIC 2599 . 2605) (semantic-list 2394 . 2595) (semantic-list 2348 . 2392) (symbol 2338 . 2348) (VOID 2333 . 2337) (STATIC 2326 . 2332) (semantic-list 2266 . 2322) (semantic-list 2242 . 2264) (symbol 2224 . 2242) (VOID 2219 . 2223) (STATIC 2212 . 2218) (semantic-list 2153 . 2208) (semantic-list 2129 . 2151) (symbol 2112 . 2129) (VOID 2107 . 2111) (STATIC 2100 . 2106) (semantic-list 2020 . 2096) (semantic-list 1988 . 2018) (symbol 1972 . 1988) (BOOL 1967 . 1971) (STATIC 1960 . 1966) (semantic-list 1879 . 1956) (semantic-list 1847 . 1877) (symbol 1832 . 1847) (BOOL 1827 . 1831) (STATIC 1820 . 1826) (semantic-list 1565 . 1817) (semantic-list 1533 . 1563) (symbol 1526 . 1533) (INT 1522 . 1525) (STATIC 1515 . 1521) (punctuation 1510 . 1511) (semantic-list 1482 . 1510) (CONST 1476 . 1481) (semantic-list 1460 . 1475) (punctuation 1458 . 1459) (punctuation 1457 . 1458) (OPERATOR 1448 . 1456) (BOOL 1443 . 1447) (punctuation 1440 . 1441) (semantic-list 1413 . 1440) (CONST 1407 . 1412) (semantic-list 1391 . 1406) (punctuation 1388 . 1389) (OPERATOR 1379 . 1387) (BOOL 1374 . 1378) (punctuation 1371 . 1372) (semantic-list 1344 . 1371) (CONST 1339 . 1344) (semantic-list 1323 . 1338) (punctuation 1320 . 1321) (OPERATOR 1311 . 1319) (BOOL 1306 . 1310) (punctuation 1274 . 1275) (semantic-list 1265 . 1274) (symbol 1256 . 1265) (VOID 1251 . 1255) (punctuation 1248 . 1249) (semantic-list 1239 . 1248) (symbol 1235 . 1239))
      :lexical-table 
        '(("_CARD_H_")
          )
)
    (semanticdb-table "card_type.h"
      :major-mode 'c++-mode
      :tags 
        '( ("_CARD_TYPE_H_" variable (:constant-flag t) nil [31 44])
            ("CardType" type
               (:members 
                  ( ("CARD_TYPE_NONNIU" variable
                       (:constant-flag t
                        :default-value (86 87)
                        :type "int")
                        (reparse-symbol enumsubparts) [63 87])
                    ("CARD_TYPE_NIUDING" variable
                       (:constant-flag t
                        :default-value (120 121)
                        :type "int")
                        (reparse-symbol enumsubparts) [97 121])
                    ("CARD_TYPE_NIUER" variable
                       (:constant-flag t
                        :default-value (147 148)
                        :type "int")
                        (reparse-symbol enumsubparts) [124 148])
                    ("CARD_TYPE_NIUSAN" variable
                       (:constant-flag t
                        :default-value (174 175)
                        :type "int")
                        (reparse-symbol enumsubparts) [151 175])
                    ("CARD_TYPE_NIUSI" variable
                       (:constant-flag t
                        :default-value (201 202)
                        :type "int")
                        (reparse-symbol enumsubparts) [178 202])
                    ("CARD_TYPE_NIUWU" variable
                       (:constant-flag t
                        :default-value (228 229)
                        :type "int")
                        (reparse-symbol enumsubparts) [205 229])
                    ("CARD_TYPE_NIULIU" variable
                       (:constant-flag t
                        :default-value (255 256)
                        :type "int")
                        (reparse-symbol enumsubparts) [232 256])
                    ("CARD_TYPE_NIUQI" variable
                       (:constant-flag t
                        :default-value (282 283)
                        :type "int")
                        (reparse-symbol enumsubparts) [259 283])
                    ("CARD_TYPE_NIUBA" variable
                       (:constant-flag t
                        :default-value (309 310)
                        :type "int")
                        (reparse-symbol enumsubparts) [286 310])
                    ("CARD_TYPE_NIUJIU" variable
                       (:constant-flag t
                        :default-value (334 335)
                        :type "int")
                        (reparse-symbol enumsubparts) [313 335])
                    ("CARD_TYPE_NIUNIU" variable
                       (:constant-flag t
                        :default-value (359 361)
                        :type "int")
                        (reparse-symbol enumsubparts) [338 361])
                    ("CARD_TYPE_ZHADAN" variable
                       (:constant-flag t
                        :default-value (388 390)
                        :type "int")
                        (reparse-symbol enumsubparts) [367 390])
                    ("CARD_TYPE_JINNIU" variable
                       (:constant-flag t
                        :default-value (414 416)
                        :type "int")
                        (reparse-symbol enumsubparts) [393 416])
                    ("CARD_TYPE_WUXIAONIU" variable
                       (:constant-flag t
                        :default-value (443 445)
                        :type "int")
                        (reparse-symbol enumsubparts) [419 445])
                    ("CARD_TYPE_XIAONIU" variable
                       (:constant-flag t
                        :default-value (475 477)
                        :type "int")
                        (reparse-symbol enumsubparts) [452 477]))                  
                :type "enum")
                nil [46 489])
            ("CardRatio" type
               (:members 
                  ( ("CARD_RATIO_LESS" variable
                       (:constant-flag t
                        :default-value (530 531)
                        :type "int")
                        (reparse-symbol enumsubparts) [509 531])
                    ("CARD_RATIO_QI" variable
                       (:constant-flag t
                        :default-value (558 559)
                        :type "int")
                        (reparse-symbol enumsubparts) [537 559])
                    ("CARD_RATIO_NIUBA" variable
                       (:constant-flag t
                        :default-value (583 584)
                        :type "int")
                        (reparse-symbol enumsubparts) [562 584])
                    ("CARD_RATIO_NIUJIU" variable
                       (:constant-flag t
                        :default-value (608 609)
                        :type "int")
                        (reparse-symbol enumsubparts) [587 609])
                    ("CARD_RATIO_NIUNIU" variable
                       (:constant-flag t
                        :default-value (633 634)
                        :type "int")
                        (reparse-symbol enumsubparts) [612 634])
                    ("CARD_RATIO_ZHADAN" variable
                       (:constant-flag t
                        :default-value (658 659)
                        :type "int")
                        (reparse-symbol enumsubparts) [637 659])
                    ("CARD_RATIO_JINNIU" variable
                       (:constant-flag t
                        :default-value (686 687)
                        :type "int")
                        (reparse-symbol enumsubparts) [665 687])
                    ("CARD_RATIO_WUXIAONIU" variable
                       (:constant-flag t
                        :default-value (714 715)
                        :type "int")
                        (reparse-symbol enumsubparts) [690 715])
                    ("CARD_RATIO_MAX" variable
                       (:constant-flag t
                        :default-value (736 756)
                        :type "int")
                        (reparse-symbol enumsubparts) [719 756]))                  
                :type "enum")
                nil [491 760]))          
      :file "card_type.h"
      :pointmax 789
      :fsize 802
      :lastmodtime '(22242 29414 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_CARD_TYPE_H_")
          )
)
    (semanticdb-table "hole_cards.h"
      :major-mode 'c++-mode
      :tags 
        '( ("_HOLE_CARDS_H_" variable (:constant-flag t) nil [32 46])
            ("vector" include (:system-flag t) nil [48 65])
            ("algorithm" include (:system-flag t) nil [66 86])
            ("card.h" include nil nil [88 105])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [107 127])
            ("HoleCards" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [147 154])
                    ("HoleCards" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [156 168])
                    ("delete_card" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [200 219])
                    ("sort" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [223 235])
                    ("analysis" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [239 255])
                    ("clear" function (:type "void") (reparse-symbol classsubparts) [322 392])
                    ("debug" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [478 491])
                    ((("cards" 0 nil nil nil)) variable (:type ("std::vector" type (:template-specifier (("Card" type nil nil nil)) :type "class") nil nil)) (reparse-symbol classsubparts) [630 654])
                    ((("kicker" 0 nil nil nil)) variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol classsubparts) [656 668])
                    ((("oldcards" 0 nil nil nil)) variable (:type ("std::vector" type (:template-specifier (("Card" type nil nil nil)) :type "class") nil nil)) (reparse-symbol classsubparts) [670 697])
                    ((("card_type" 0 nil nil nil)) variable (:type "int") (reparse-symbol classsubparts) [701 715])
                    ((("ratio" 0 nil nil nil)) variable (:type "int") (reparse-symbol classsubparts) [717 727]))                  
                :type "class")
                nil [129 730]))          
      :file "hole_cards.h"
      :pointmax 760
      :fsize 759
      :lastmodtime '(22081 38961 0 0)
      :unmatched-syntax '((punctuation 626 . 627) (semantic-list 584 . 626) (symbol 571 . 584) (INT 567 . 570) (STATIC 560 . 566) (punctuation 554 . 555) (semantic-list 516 . 554) (symbol 509 . 516) (BOOL 504 . 508) (STATIC 497 . 503) (punctuation 474 . 475) (semantic-list 453 . 474) (symbol 443 . 453) (VOID 438 . 442) (punctuation 434 . 435) (semantic-list 412 . 434) (symbol 402 . 412) (VOID 397 . 401) (punctuation 392 . 393) (punctuation 318 . 319) (semantic-list 308 . 318) (symbol 295 . 308) (VOID 290 . 294) (punctuation 285 . 286) (semantic-list 270 . 285) (symbol 263 . 270) (INT 259 . 262) (punctuation 193 . 194) (semantic-list 185 . 193) (symbol 177 . 185) (VOID 172 . 176))
      :lexical-table 
        '(("_HOLE_CARDS_H_")
          )
)
    (semanticdb-table "test.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("deck.h" include nil nil [19 36])
            ("hole_cards.h" include nil nil [37 60])
            ("string.h" include (:system-flag t) nil [61 80])
            ("map" include (:system-flag t) nil [81 95])
            ("sys/time.h" include (:system-flag t) nil [96 117])
            ("cardmap" variable (:type ("map" type
                 (:template-specifier 
                    ( ("string" type nil nil nil)
                      ("int" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [120 145])
            ("card_type_str" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
	(char *)\"CARD_TYPE_NONNIU\",
	(char *)\"CARD_TYPE_NIUDING\",
	(char *)\"CARD_TYPE_NIUER\",
	(char *)\"CARD_TYPE_NIUSAN\",
	(char *)\"CARD_TYPE_NIUSI\",
	(char *)\"CARD_TYPE_NIUWU\",
	(char *)\"CARD_TYPE_NIULIU\",
	(char *)\"CARD_TYPE_NIUQI\",
	(char *)\"CARD_TYPE_NIUBA\",
	(char *)\"CARD_TYPE_NIUJIU\",
	(char *)\"CARD_TYPE_NIUNIU\",
    (char *)\"CARD_TYPE_ZHADAN\",
	(char *)\"CARD_TYPE_JINNIU\",	
	(char *)\"CARD_TYPE_WUXIAONIU\"
}"
                :type "char")
                nil [147 597])
            ("vcard_ratio" variable
               (:dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
	CARD_RATIO_LESS,
    CARD_RATIO_LESS,
    CARD_RATIO_LESS,
    CARD_RATIO_LESS,
    CARD_RATIO_LESS,
    CARD_RATIO_LESS,
    CARD_RATIO_LESS,
    CARD_RATIO_QI,
	CARD_RATIO_NIUBA,
	CARD_RATIO_NIUJIU,
	CARD_RATIO_NIUNIU,
	CARD_RATIO_ZHADAN,
    CARD_RATIO_JINNIU,
	CARD_RATIO_WUXIAONIU,
}"
                :type "int")
                nil [599 924])
            ("initCardMap" function (:type "void") nil [1607 3050])
            ("testzhatan" function (:type "void") nil [3052 3750])
            ("testwuhuaniu" function (:type "void") nil [3752 4513])
            ("testzhadan1" function (:type "void") nil [4516 5351])
            ("count_type_num" function (:type "void") nil [5354 7410])
            ("test_shuffle" function (:type "void") nil [7413 9576])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [9587 9596])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [9597 9610]))                  
                :type "int")
                nil [9578 13059]))          
      :file "test.cc"
      :pointmax 13061
      :fsize 13995
      :lastmodtime '(22081 38961 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "deck.h"
      :major-mode 'c++-mode
      :tags 
        '( ("_DECK_H_" variable (:constant-flag t) nil [26 34])
            ("vector" include (:system-flag t) nil [36 53])
            ("card.h" include nil nil [55 72])
            ("hole_cards.h" include nil nil [73 96])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [98 118])
            ("tagWinStatus" type
               (:members 
                  ( ("WIN_STATU_ALL_WIN" variable
                       (:constant-flag t
                        :default-value (172 173)
                        :type "int")
                        (reparse-symbol enumsubparts) [152 173])
                    ("WIN_STATU_ALL_LOSE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [179 198])
                    ("WIN_STATU_ONE_WIN1" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [203 222])
                    ("WIN_STATU_ONE_WIN2" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [227 246])
                    ("WIN_STATU_ONE_WIN3" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [251 270])
                    ("WIN_STATU_ONE_WIN4" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [275 294])
                    ("WIN_STATU_TWO_WIN12" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [299 319])
                    ("WIN_STATU_TWO_WIN13" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [324 344])
                    ("WIN_STATU_TWO_WIN14" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [349 369])
                    ("WIN_STATU_TWO_WIN23" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [374 394])
                    ("WIN_STATU_TWO_WIN24" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [399 419])
                    ("WIN_STATU_TWO_WIN34" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [424 444])
                    ("WIN_STATU_THREE_WIN123" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [449 472])
                    ("WIN_STATU_THREE_WIN124" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [477 500])
                    ("WIN_STATU_THREE_WIN134" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [505 528])
                    ("WIN_STATU_THREE_WIN234" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [533 556])
                    ("WIN_STATU_SIZE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [562 578]))                  
                :type "enum")
                nil [120 588])
            ("WinStatus" type
               (:typedef ("tagWinStatus" type (:type "enum") nil nil)
                :type "typedef")
                nil [120 588])
            ("Deck" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [603 610])
                    ("fill" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [612 624])
                    ("empty" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [626 639])
                    ("count" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [641 659])
                    ("push" function
                       (:prototype-flag t
                        :arguments 
                          ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [673 683]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [663 684])
                    ("pop" function
                       (:prototype-flag t
                        :arguments 
                          ( ("card" variable
                               (:reference 1
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [695 706]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [686 707])
                    ("shuffle" function
                       (:prototype-flag t
                        :arguments 
                          ( ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [722 731]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [709 732])
                    ("get_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [755 776]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [736 777])
                    ("change_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [802 810])
                            ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [811 832]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [779 833])
                    ("has_hole_cards" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [838 860])
                    ("get_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [885 906])
                            ("type" variable (:type "int") (reparse-symbol arg-sub-list) [907 916]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [866 917])
                    ("re_generate_spec" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:pointer 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [943 964])
                            ("win_orders" variable
                               (:reference 1
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [965 989]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [922 990])
                    ("re_get_hole_cards_bycomp" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1024 1045])
                            ("compHoles" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1046 1067])
                            ("type" variable (:type "int") (reparse-symbol arg-sub-list) [1068 1077]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [995 1078])
                    ("re_get_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1105 1126])
                            ("type" variable (:type "int") (reparse-symbol arg-sub-list) [1127 1136]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1083 1137])
                    ("get_has_niu_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1170 1191]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1143 1192])
                    ("get_no_niu_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1223 1244]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1197 1245])
                    ("get_niu_jiu_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1277 1298]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1250 1299])
                    ("get_niu_ba_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1330 1351]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1304 1352])
                    ("get_niu_qi_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1383 1404]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1357 1405])
                    ("get_niu_liu_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1437 1458]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1410 1459])
                    ("get_niu_wu_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1490 1511]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1464 1512])
                    ("get_niu_si_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1543 1564]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1517 1565])
                    ("get_niu_san_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1597 1618]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1570 1619])
                    ("get_niu_er_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1650 1671]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1624 1672])
                    ("get_niu_ding_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1705 1726]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1677 1727])
                    ("get_niu_niu_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1759 1780]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1732 1781])
                    ("get_zhadan_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1812 1833]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1786 1834])
                    ("get_wuhuaniu_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1867 1888]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1839 1889])
                    ("get_wuxiaoniu_hole_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1923 1944]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1894 1945])
                    ("debug" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1948 1961])
                    ("public" label nil (reparse-symbol classsubparts) [1964 1971])
                    ("cards" variable (:type ("vector" type
                         (:template-specifier 
                            ( ("Card" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1973 1992])
                    ("private" label nil (reparse-symbol classsubparts) [1994 2002])
                    ("deck_random" function
                       (:prototype-flag t
                        :arguments 
                          ( ("begin" variable (:type "int") (reparse-symbol arg-sub-list) [2023 2033])
                            ("end" variable (:type "int") (reparse-symbol arg-sub-list) [2034 2042]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2007 2043])
                    ("delete_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tmp" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("Card" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2066 2089]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2048 2090])
                    ("get_hole_type_cards" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2119 2140])
                            ("type" variable (:type "int") (reparse-symbol arg-sub-list) [2141 2150]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2095 2151])
                    ("has_niu" function
                       (:prototype-flag t
                        :arguments 
                          ( ("holecards" variable
                               (:reference 1
                                :type ("HoleCards" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2169 2190]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2156 2191]))                  
                :type "class")
                nil [590 2195]))          
      :file "deck.h"
      :pointmax 2219
      :fsize 2218
      :lastmodtime '(22174 3276 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_DECK_H_")
          )
)
    (semanticdb-table "deck.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("numeric" include (:system-flag t) nil [1 19])
            ("algorithm" include (:system-flag t) nil [20 40])
            ("deck.h" include nil nil [41 58])
            ("card_arr" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
    0x01, 0x11, 0x21, 0x31,		//A 14 
    0x02, 0x12, 0x22, 0x32,		//2 15
    0x03, 0x13, 0x23, 0x33,		//3 3
    0x04, 0x14, 0x24, 0x34,		//4 4
    0x05, 0x15, 0x25, 0x35,		//5 5
    0x06, 0x16, 0x26, 0x36,		//6 6
    0x07, 0x17, 0x27, 0x37,		//7 7
    0x08, 0x18, 0x28, 0x38,		//8 8
    0x09, 0x19, 0x29, 0x39,		//9 9
    0x0A, 0x1A, 0x2A, 0x3A,		//10 10
    0x0B, 0x1B, 0x2B, 0x3B,		//J 11
    0x0C, 0x1C, 0x2C, 0x3C,		//Q 12
    0x0D, 0x1D, 0x2D, 0x3D,		//K 13
}"
                :type "int")
                nil [60 551])
            ("fill" function
               (:parent "Deck"
                :type "void")
                nil [553 661])
            ("empty" function
               (:parent "Deck"
                :type "void")
                nil [663 701])
            ("count" function
               (:parent "Deck"
                :type "int")
                nil [703 752])
            ("push" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [770 780]))                  
                :type "bool")
                nil [754 822])
            ("pop" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [839 850]))                  
                :type "bool")
                nil [824 942])
            ("shuffle" function
               (:parent "Deck"
                :arguments 
                  ( ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [963 972]))                  
                :type "bool")
                nil [944 1065])
            ("get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1092 1113]))                  
                :type "int")
                nil [1067 1300])
            ("change_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1331 1339])
                    ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1340 1361]))                  
                :type "void")
                nil [1302 1504])
            ("has_hole_cards" function
               (:parent "Deck"
                :type "bool")
                nil [1506 1635])
            ("debug" function
               (:parent "Deck"
                :type "void")
                nil [1637 1685])
            ("get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1712 1733])
                    ("type" variable (:type "int") (reparse-symbol arg-sub-list) [1734 1743]))                  
                :type "int")
                nil [1687 3177])
            ("get_has_niu_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3212 3233]))                  
                :type "int")
                nil [3179 3351])
            ("get_no_niu_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3385 3406]))                  
                :type "int")
                nil [3353 3473])
            ("get_niu_jiu_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3508 3529]))                  
                :type "int")
                nil [3475 3594])
            ("get_niu_ba_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3628 3649]))                  
                :type "int")
                nil [3596 3713])
            ("get_niu_qi_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3747 3768]))                  
                :type "int")
                nil [3715 3832])
            ("get_niu_liu_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3867 3888]))                  
                :type "int")
                nil [3834 3953])
            ("get_niu_wu_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3987 4008]))                  
                :type "int")
                nil [3955 4072])
            ("get_niu_si_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4106 4127]))                  
                :type "int")
                nil [4074 4191])
            ("get_niu_san_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4226 4247]))                  
                :type "int")
                nil [4193 4312])
            ("get_niu_er_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4346 4367]))                  
                :type "int")
                nil [4314 4431])
            ("get_niu_ding_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4467 4488]))                  
                :type "int")
                nil [4433 4554])
            ("get_zhadan_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4588 4609]))                  
                :type "int")
                nil [4556 7890])
            ("get_wuhuaniu_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7926 7947]))                  
                :type "int")
                nil [7892 9495])
            ("get_wuxiaoniu_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9532 9553]))                  
                :type "int")
                nil [9497 11339])
            ("get_niu_niu_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11374 11395]))                  
                :type "int")
                nil [11341 11460])
            ("deck_random" function
               (:parent "Deck"
                :arguments 
                  ( ("begin" variable (:type "int") (reparse-symbol arg-sub-list) [11484 11494])
                    ("end" variable (:type "int") (reparse-symbol arg-sub-list) [11495 11503]))                  
                :type "int")
                nil [11462 11577])
            ("delete_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("tmp" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11603 11626]))                  
                :type "void")
                nil [11579 11999])
            ("get_hole_type_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12031 12052])
                    ("type" variable (:type "int") (reparse-symbol arg-sub-list) [12053 12062]))                  
                :type "int")
                nil [12001 14053])
            ("has_niu" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14074 14095]))                  
                :type "bool")
                nil [14055 14752])
            ("re_generate_spec" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:pointer 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14781 14802])
                    ("win_orders" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [14803 14827]))                  
                :type "int")
                nil [14754 15132])
            ("re_get_hole_cards_bycomp" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15169 15190])
                    ("compHoles" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15191 15212])
                    ("type" variable (:type "int") (reparse-symbol arg-sub-list) [15213 15222]))                  
                :type "int")
                nil [15134 17286])
            ("re_get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17317 17338])
                    ("type" variable (:type "int") (reparse-symbol arg-sub-list) [17339 17348]))                  
                :type "int")
                nil [17289 19316]))          
      :file "deck.cc"
      :pointmax 19318
      :fsize 20038
      :lastmodtime '(22174 62422 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "card.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("face_symbols" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
	'A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K'
}"
                :type "char")
                nil [20 118])
            ("suit_symbols" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
	'd', 'c', 'h', 's'
}"
                :type "char")
                nil [120 173])
            ("Card" function
               (:constructor-flag t
                :parent "Card"
                :type ("Card" type (:type "class") nil nil))
                nil [175 225])
            ("Card" function
               (:constructor-flag t
                :parent "Card"
                :arguments 
                  ( ("val" variable (:type "int") (reparse-symbol arg-sub-list) [238 246]))                  
                :type ("Card" type (:type "class") nil nil))
                nil [227 488])
            ("set_value" function
               (:parent "Card"
                :arguments 
                  ( ("val" variable (:type "int") (reparse-symbol arg-sub-list) [511 519]))                  
                :type "void")
                nil [490 695])
            ("get_card" function
               (:parent "Card"
                :type ("string" type (:type "class") nil nil))
                nil [697 928]))          
      :file "card.cc"
      :pointmax 929
      :fsize 928
      :lastmodtime '(22081 38961 0 0)
      :unmatched-syntax nil))
  :file "!usr!local!app!wanren!src!wanrennn!libdouniu!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
