;; Object libzjh/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "libzjh/"
  :tables
  (list
    (semanticdb-table "deck.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("algorithm" include (:system-flag t) nil [1 21])
            ("deck.h" include nil nil [22 39])
            ("card_arr" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{ 0x01, 0x11, 0x21, 0x31,		//A 14
		0x02, 0x12, 0x22, 0x32,		//2 15
		0x03, 0x13, 0x23, 0x33,		//3 3
		0x04, 0x14, 0x24, 0x34,		//4 4
		0x05, 0x15, 0x25, 0x35,		//5 5
		0x06, 0x16, 0x26, 0x36,		//6 6
		0x07, 0x17, 0x27, 0x37,		//7 7
		0x08, 0x18, 0x28, 0x38,		//8 8
		0x09, 0x19, 0x29, 0x39,		//9 9
		0x0A, 0x1A, 0x2A, 0x3A,		//10 10
		0x0B, 0x1B, 0x2B, 0x3B,		//J 11
		0x0C, 0x1C, 0x2C, 0x3C,		//Q 12
		0x0D, 0x1D, 0x2D, 0x3D,		//K 13
		}"
                :type "int")
                nil [41 505])
            ("fill" function
               (:parent "Deck"
                :type "void")
                nil [507 615])
            ("empty" function
               (:parent "Deck"
                :type "void")
                nil [617 655])
            ("size" function
               (:parent "Deck"
                :type "int")
                nil [657 705])
            ("push" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [723 733]))                  
                :type "bool")
                nil [707 775])
            ("pop" function
               (:parent "Deck"
                :arguments 
                  ( ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [792 803]))                  
                :type "bool")
                nil [777 893])
            ("myrandom" function
               (:arguments 
                  ( ("i" variable (:type "int") (reparse-symbol arg-sub-list) [908 914]))                  
                :type "int")
                nil [895 943])
            ("shuffle" function
               (:parent "Deck"
                :arguments 
                  ( ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [964 973]))                  
                :type "bool")
                nil [945 1084])
            ("get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1112 1133]))                  
                :type "void")
                nil [1086 1246])
            ("get_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1274 1295])
                    ("card_type" variable (:type "int") (reparse-symbol arg-sub-list) [1296 1310]))                  
                :type "void")
                nil [1248 1820])
            ("change_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1851 1872])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1873 1881]))                  
                :type "void")
                nil [1822 2023])
            ("get_baozi_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2057 2078]))                  
                :type "void")
                nil [2025 2457])
            ("get_shunjin_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2493 2514]))                  
                :type "void")
                nil [2459 3012])
            ("get_jinhua_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3047 3068]))                  
                :type "void")
                nil [3014 3568])
            ("get_shunzi_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3603 3624]))                  
                :type "void")
                nil [3570 4180])
            ("get_duizi_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4214 4235]))                  
                :type "void")
                nil [4182 5120])
            ("get_danpai_hole_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("holecards" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5155 5176]))                  
                :type "void")
                nil [5122 5964])
            ("delete_cards" function
               (:parent "Deck"
                :arguments 
                  ( ("tmp" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5990 6013]))                  
                :type "void")
                nil [5966 6249])
            ("debug" function
               (:parent "Deck"
                :type "void")
                nil [6251 6299]))          
      :file "deck.cc"
      :pointmax 6300
      :fsize 6299
      :lastmodtime '(21969 33340 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "card.h"
      :file "card.h"
      :fsize 2725
      :lastmodtime '(21969 33340 0 0))
    (semanticdb-table "deck.h"
      :file "deck.h"
      :fsize 901
      :lastmodtime '(21969 33340 0 0))
    (semanticdb-table "hole_cards.h"
      :file "hole_cards.h"
      :fsize 539
      :lastmodtime '(21969 33340 0 0))
    (semanticdb-table "hole_cards.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("card_type.h" include nil nil [19 41])
            ("hole_cards.h" include nil nil [42 65])
            ("card_type_str" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{ (char *) \"CARD_TYPE_ERROR\",
		(char *) \"CARD_TYPE_BAOZI\",
		(char *) \"CARD_TYPE_SHUNJIN\",
		(char *) \"CARD_TYPE_JINHUA\",
		(char *) \"CARD_TYPE_SHUNZI\",
		(char *) \"CARD_TYPE_DUIZI\",
		(char *) \"CARD_TYPE_DANPAI\",
		(char *) \"CARD_TYPE_TESHU\" }"
                :type "char")
                nil [67 350])
            ("HoleCards" function
               (:constructor-flag t
                :parent "HoleCards"
                :type ("HoleCards" type (:type "class") nil nil))
                nil [352 409])
            ("add_card" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [436 446]))                  
                :type "void")
                nil [411 474])
            ("sort" function
               (:parent "HoleCards"
                :type "void")
                nil [476 536])
            ("analysis" function
               (:parent "HoleCards"
                :type "void")
                nil [538 2259])
            ("compare" function
               (:parent "HoleCards"
                :arguments 
                  ( ("hc" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2284 2298]))                  
                :type "int")
                nil [2261 2930])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2959 2980]))                  
                :type "void")
                nil [2932 2996])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3025 3045]))                  
                :type "void")
                nil [2998 3135])
            ("size" function
               (:parent "HoleCards"
                :type "int")
                nil [3137 3190])
            ("debug" function
               (:parent "HoleCards"
                :type "void")
                nil [3192 3301]))          
      :file "hole_cards.cc"
      :pointmax 3302
      :fsize 3301
      :lastmodtime '(21969 33340 0 0)
      :unmatched-syntax nil))
  :file "!usr!local!app!bullRaces!src!bullraces!libzjh!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
