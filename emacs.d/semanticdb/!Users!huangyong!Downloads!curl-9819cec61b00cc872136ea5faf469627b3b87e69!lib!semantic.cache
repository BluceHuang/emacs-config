;; Object lib/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lib/"
  :tables
  (list
    (semanticdb-table "getinfo.c"
      :major-mode 'c-mode
      :tags 
        '( ("curl_setup.h" include nil nil [1028 1051])
            ("curl/curl.h" include (:system-flag t) nil [1053 1075])
            ("urldata.h" include nil nil [1077 1097])
            ("getinfo.h" include nil nil [1098 1118])
            ("vtls/vtls.h" include nil nil [1120 1142])
            ("connect.h" include nil nil [1143 1163])
            ("progress.h" include nil nil [1192 1213])
            ("curl_memory.h" include nil nil [1256 1280])
            ("memdebug.h" include nil nil [1281 1302])
            ("Curl_initinfo" function
               (:arguments 
                  ( ("data" variable
                       (:pointer 1
                        :type ("SessionHandle" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1454 1481]))                  
                :type ("CURLcode" type (:type "class") nil nil))
                nil [1431 2193])
            ("getinfo_char" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("data" variable
                       (:pointer 1
                        :type ("SessionHandle" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2224 2251])
                    ("info" variable (:type ("CURLINFO" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2252 2266])
                    ("param_charp" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [2296 2315]))                  
                :type ("CURLcode" type (:type "class") nil nil))
                nil [2195 3743])
            ("getinfo_long" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("data" variable
                       (:pointer 1
                        :type ("SessionHandle" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3774 3801])
                    ("info" variable (:type ("CURLINFO" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3802 3816])
                    ("param_longp" variable
                       (:pointer 1
                        :type "long")
                        (reparse-symbol arg-sub-list) [3846 3864]))                  
                :type ("CURLcode" type (:type "class") nil nil))
                nil [3745 6276])
            ("getinfo_double" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("data" variable
                       (:pointer 1
                        :type ("SessionHandle" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6309 6336])
                    ("info" variable (:type ("CURLINFO" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6337 6351])
                    ("param_doublep" variable
                       (:pointer 1
                        :type "double")
                        (reparse-symbol arg-sub-list) [6383 6405]))                  
                :type ("CURLcode" type (:type "class") nil nil))
                nil [6278 7843])
            ("getinfo_slist" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("data" variable
                       (:pointer 1
                        :type ("SessionHandle" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7875 7902])
                    ("info" variable (:type ("CURLINFO" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7903 7917])
                    ("param_slistp" variable
                       (:pointer 2
                        :type ("curl_slist" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7948 7981]))                  
                :type ("CURLcode" type (:type "class") nil nil))
                nil [7845 10364])
            ("getinfo_socket" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("data" variable
                       (:pointer 1
                        :type ("SessionHandle" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10397 10424])
                    ("info" variable (:type ("CURLINFO" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10425 10439])
                    ("param_socketp" variable
                       (:pointer 1
                        :type ("curl_socket_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10471 10500]))                  
                :type ("CURLcode" type (:type "class") nil nil))
                nil [10366 10684])
            ("Curl_getinfo" function
               (:arguments 
                  ( ("data" variable
                       (:pointer 1
                        :type ("SessionHandle" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10708 10735])
                    ("info" variable (:type ("CURLINFO" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10736 10750])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [10751 10755]))                  
                :type ("CURLcode" type (:type "class") nil nil))
                nil [10686 11956]))          
      :file "getinfo.c"
      :pointmax 11957
      :fsize 11956
      :lastmodtime '(22257 27396 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "version.c"
      :major-mode 'c-mode
      :tags 
        '( ("curl_setup.h" include nil nil [1028 1051])
            ("curl/curl.h" include (:system-flag t) nil [1053 1075])
            ("urldata.h" include nil nil [1076 1096])
            ("vtls/vtls.h" include nil nil [1097 1119])
            ("http2.h" include nil nil [1120 1138])
            ("curl_printf.h" include nil nil [1139 1163])
            ("CURL_LIBSSH2_VERSION" variable (:constant-flag t) nil [1829 1849])
            ("Curl_version_init" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1897 1902]))                  
                :type "void")
                nil [1874 1903])
            ("Curl_version_init" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2069 2074]))                  
                :type "void")
                nil [2046 2134])
            ("curl_version" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2155 2160]))                  
                :type "char")
                nil [2136 4363])
            ("protocols" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
#ifndef CURL_DISABLE_DICT
  \"dict\",
#endif
#ifndef CURL_DISABLE_FILE
  \"file\",
#endif
#ifndef CURL_DISABLE_FTP
  \"ftp\",
#endif
#if defined(USE_SSL) && !defined(CURL_DISABLE_FTP)
  \"ftps\",
#endif
#ifndef CURL_DISABLE_GOPHER
  \"gopher\",
#endif
#ifndef CURL_DISABLE_HTTP
  \"http\",
#endif
#if defined(USE_SSL) && !defined(CURL_DISABLE_HTTP)
  \"https\",
#endif
#ifndef CURL_DISABLE_IMAP
  \"imap\",
#endif
#if defined(USE_SSL) && !defined(CURL_DISABLE_IMAP)
  \"imaps\",
#endif
#ifndef CURL_DISABLE_LDAP
  \"ldap\",
#if !defined(CURL_DISABLE_LDAPS) && \\
    ((defined(USE_OPENLDAP) && defined(USE_SSL)) || \\
     (!defined(USE_OPENLDAP) && defined(HAVE_LDAP_SSL)))
  \"ldaps\",
#endif
#endif
#ifndef CURL_DISABLE_POP3
  \"pop3\",
#endif
#if defined(USE_SSL) && !defined(CURL_DISABLE_POP3)
  \"pop3s\",
#endif
#ifdef USE_LIBRTMP
  \"rtmp\",
#endif
#ifndef CURL_DISABLE_RTSP
  \"rtsp\",
#endif
#ifdef USE_LIBSSH2
  \"scp\",
#endif
#ifdef USE_LIBSSH2
  \"sftp\",
#endif
#if !defined(CURL_DISABLE_SMB) && defined(USE_NTLM) && \\
   (CURL_SIZEOF_CURL_OFF_T > 4) && \\
   (!defined(USE_WINDOWS_SSPI) || defined(USE_WIN32_CRYPTO))
  \"smb\",
#  ifdef USE_SSL
  \"smbs\",
#  endif
#endif
#ifndef CURL_DISABLE_SMTP
  \"smtp\",
#endif
#if defined(USE_SSL) && !defined(CURL_DISABLE_SMTP)
  \"smtps\",
#endif
#ifndef CURL_DISABLE_TELNET
  \"telnet\",
#endif
#ifndef CURL_DISABLE_TFTP
  \"tftp\",
#endif

  NULL
}"
                :type "char")
                nil [4545 5948])
            ("version_info" variable
               (:typemodifiers ("static")
                :default-value "{
  CURLVERSION_NOW,
  LIBCURL_VERSION,
  LIBCURL_VERSION_NUM,
  OS, /* as found by configure or set by hand at build-time */
  0 /* features is 0 by default */
#ifdef ENABLE_IPV6
  | CURL_VERSION_IPV6
#endif
#ifdef USE_SSL
  | CURL_VERSION_SSL
#endif
#ifdef USE_NTLM
  | CURL_VERSION_NTLM
#endif
#if !defined(CURL_DISABLE_HTTP) && defined(USE_NTLM) && \\
  defined(NTLM_WB_ENABLED)
  | CURL_VERSION_NTLM_WB
#endif
#ifdef USE_SPNEGO
  | CURL_VERSION_SPNEGO
#endif
#ifdef USE_KERBEROS5
  | CURL_VERSION_KERBEROS5
#endif
#ifdef HAVE_GSSAPI
  | CURL_VERSION_GSSAPI
#endif
#ifdef USE_WINDOWS_SSPI
  | CURL_VERSION_SSPI
#endif
#ifdef HAVE_LIBZ
  | CURL_VERSION_LIBZ
#endif
#ifdef DEBUGBUILD
  | CURL_VERSION_DEBUG
#endif
#ifdef CURLDEBUG
  | CURL_VERSION_CURLDEBUG
#endif
#ifdef CURLRES_ASYNCH
  | CURL_VERSION_ASYNCHDNS
#endif
#if (CURL_SIZEOF_CURL_OFF_T > 4) && \\
    ( (SIZEOF_OFF_T > 4) || defined(USE_WIN32_LARGE_FILES) )
  | CURL_VERSION_LARGEFILE
#endif
#if defined(CURL_DOES_CONVERSIONS)
  | CURL_VERSION_CONV
#endif
#if defined(USE_TLS_SRP)
  | CURL_VERSION_TLSAUTH_SRP
#endif
#if defined(USE_NGHTTP2)
  | CURL_VERSION_HTTP2
#endif
#if defined(USE_UNIX_SOCKETS)
  | CURL_VERSION_UNIX_SOCKETS
#endif
#if defined(USE_LIBPSL)
  | CURL_VERSION_PSL
#endif
  ,
  NULL, /* ssl_version */
  0,    /* ssl_version_num, this is kept at zero */
  NULL, /* zlib_version */
  protocols,
  NULL, /* c-ares version */
  0,    /* c-ares version numerical */
  NULL, /* libidn version */
  0,    /* iconv version */
  NULL, /* ssh lib version */
}"
                :type ("curl_version_info_data" type (:type "class") nil nil))
                nil [5950 7528])
            ("curl_version_info" function
               (:pointer 1
                :arguments 
                  ( ("stamp" variable (:type ("CURLversion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7572 7590]))                  
                :type ("curl_version_info_data" type (:type "class") nil nil))
                nil [7530 8981]))          
      :file "version.c"
      :pointmax 8982
      :fsize 8981
      :lastmodtime '(22257 27396 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("CURL_LIBSSH2_VERSION" . ((symbol "LIBSSH2_VERSION" 1850 . 1865)))
          )
))
  :file "!Users!huangyong!Downloads!curl-9819cec61b00cc872136ea5faf469627b3b87e69!lib!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
