;; Object libmajiang/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "libmajiang/"
  :tables
  (list
    (semanticdb-table "hole_cards.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("card_type.h" include nil nil [19 41])
            ("hole_cards.h" include nil nil [42 65])
            ("HoleCards" function
               (:constructor-flag t
                :parent "HoleCards"
                :type ("HoleCards" type (:type "class") nil nil))
                nil [378 508])
            ("init" function
               (:parent "HoleCards"
                :arguments 
                  ( ("duizi" variable (:type "int") (reparse-symbol arg-sub-list) [531 541])
                    ("ghost" variable (:type "int") (reparse-symbol arg-sub-list) [542 552]))                  
                :type "void")
                nil [510 600])
            ("add_card" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [627 637]))                  
                :type "void")
                nil [602 695])
            ("sort" function
               (:parent "HoleCards"
                :type "void")
                nil [697 756])
            ("analysis" function
               (:parent "HoleCards"
                :type "void")
                nil [758 3762])
            ("compare" function
               (:parent "HoleCards"
                :arguments 
                  ( ("hc" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3787 3801]))                  
                :type "int")
                nil [3764 3816])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3845 3866]))                  
                :type "void")
                nil [3818 3882])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3911 3931]))                  
                :type "void")
                nil [3884 4021])
            ("size" function
               (:parent "HoleCards"
                :type "int")
                nil [4023 4076])
            ("debug" function
               (:parent "HoleCards"
                :type "void")
                nil [4078 4191])
            ("handler_chu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [4221 4231]))                  
                :type "void")
                nil [4193 4572])
            ("handler_chi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [4602 4612])
                    ("pattern" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [4613 4628])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [4629 4638]))                  
                :type "void")
                nil [4574 5697])
            ("handler_peng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [5728 5738])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [5739 5748]))                  
                :type "void")
                nil [5699 6720])
            ("handler_gang" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [6751 6761])
                    ("gang_flag" variable (:type "int") (reparse-symbol arg-sub-list) [6762 6776])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [6777 6786]))                  
                :type "void")
                nil [6722 8854])
            ("permit_ting" function
               (:parent "HoleCards"
                :type "bool")
                nil [8856 8972])
            ("permit_gang" function
               (:parent "HoleCards"
                :type "bool")
                nil [8974 10337])
            ("permit_gang" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [10367 10377]))                  
                :type "bool")
                nil [10339 11020])
            ("permit_peng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [11050 11060]))                  
                :type "bool")
                nil [11022 11550])
            ("is_shunzi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11578 11589])
                    ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11590 11601])
                    ("card3" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11602 11613]))                  
                :type "bool")
                nil [11552 12993])
            ("is_same" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13019 13030])
                    ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13031 13042]))                  
                :type "bool")
                nil [12995 13251])
            ("is_same" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13277 13288])
                    ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13289 13300])
                    ("card3" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13301 13312]))                  
                :type "bool")
                nil [13253 13449])
            ("has_card" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [13734 13744])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [13745 13754]))                  
                :type "bool")
                nil [13709 14402])
            ("permit_hu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [14430 14440]))                  
                :type "bool")
                nil [14404 16136])
            ("permit_hu" function
               (:parent "HoleCards"
                :type "bool")
                nil [16138 16992])
            ("permit_chi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [17021 17031]))                  
                :type "bool")
                nil [16994 18508])
            ("is_complete" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [18538 18559]))                  
                :type "bool")
                nil [18510 22225])
            ("is_complete" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [22255 22276])
                    ("d1" variable (:type "int") (reparse-symbol arg-sub-list) [22277 22284])
                    ("d2" variable (:type "int") (reparse-symbol arg-sub-list) [22285 22292]))                  
                :type "bool")
                nil [22227 22670])
            ("handler_ting" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [22700 22710]))                  
                :type "int")
                nil [22672 23231])
            ("normal_cards_analysis" function
               (:parent "HoleCards"
                :arguments 
                  ( ("newcards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [23271 23294])
                    ("value" variable (:type "int") (reparse-symbol arg-sub-list) [23295 23305])
                    ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23306 23317]))                  
                :type "bool")
                nil [23233 23982])
            ("ghost_cards_analysis" function
               (:parent "HoleCards"
                :arguments 
                  ( ("newcards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [24021 24044])
                    ("value" variable (:type "int") (reparse-symbol arg-sub-list) [24045 24055])
                    ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24056 24067]))                  
                :type "bool")
                nil [23984 25744])
            ("analysis" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25777 25787]))                  
                :type "void")
                nil [25752 27405])
            ("analysis_card_type" function
               (:parent "HoleCards"
                :arguments 
                  ( ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [27442 27451]))                  
                :type "void")
                nil [27407 32378]))          
      :file "hole_cards.cc"
      :pointmax 32379
      :fsize 32734
      :lastmodtime '(22602 44740 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "card.h"
      :file "card.h"
      :fsize 3612
      :lastmodtime '(22587 53543 0 0)))
  :file "!usr!local!fmapp!lzmajiang!libmajiang!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
