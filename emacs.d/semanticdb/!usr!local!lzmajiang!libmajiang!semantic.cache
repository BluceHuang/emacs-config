;; Object libmajiang/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "libmajiang/"
  :tables
  (list
    (semanticdb-table "hole_cards.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("card.h" include nil nil [1 18])
            ("card_type.h" include nil nil [19 41])
            ("hole_cards.h" include nil nil [42 65])
            ("HoleCards" function
               (:constructor-flag t
                :parent "HoleCards"
                :type ("HoleCards" type (:type "class") nil nil))
                nil [378 508])
            ("init" function
               (:parent "HoleCards"
                :arguments 
                  ( ("duizi" variable (:type "int") (reparse-symbol arg-sub-list) [531 541])
                    ("ghost" variable (:type "int") (reparse-symbol arg-sub-list) [542 552]))                  
                :type "void")
                nil [510 600])
            ("add_card" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [627 637]))                  
                :type "void")
                nil [602 695])
            ("sort" function
               (:parent "HoleCards"
                :type "void")
                nil [697 756])
            ("analysis" function
               (:parent "HoleCards"
                :type "void")
                nil [758 3762])
            ("compare" function
               (:parent "HoleCards"
                :arguments 
                  ( ("hc" variable
                       (:reference 1
                        :type ("HoleCards" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3787 3801]))                  
                :type "int")
                nil [3764 3816])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3845 3866]))                  
                :type "void")
                nil [3818 3882])
            ("copy_cards" function
               (:parent "HoleCards"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3911 3931]))                  
                :type "void")
                nil [3884 4021])
            ("size" function
               (:parent "HoleCards"
                :type "int")
                nil [4023 4076])
            ("debug" function
               (:parent "HoleCards"
                :type "void")
                nil [4078 4191])
            ("handler_chu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [4221 4231]))                  
                :type "void")
                nil [4193 4572])
            ("handler_chi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [4602 4612])
                    ("pattern" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [4613 4628])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [4629 4638]))                  
                :type "void")
                nil [4574 5697])
            ("handler_peng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [5728 5738])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [5739 5748]))                  
                :type "void")
                nil [5699 6720])
            ("handler_gang" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [6751 6761])
                    ("gang_flag" variable (:type "int") (reparse-symbol arg-sub-list) [6762 6776])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [6777 6786]))                  
                :type "void")
                nil [6722 8854])
            ("permit_ting" function
               (:parent "HoleCards"
                :type "bool")
                nil [8856 8972])
            ("permit_gang" function
               (:parent "HoleCards"
                :type "bool")
                nil [8974 10337])
            ("permit_gang" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [10367 10377]))                  
                :type "bool")
                nil [10339 11020])
            ("permit_peng" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [11050 11060]))                  
                :type "bool")
                nil [11022 11550])
            ("is_shunzi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11578 11589])
                    ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11590 11601])
                    ("card3" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11602 11613]))                  
                :type "bool")
                nil [11552 12993])
            ("is_same" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13019 13030])
                    ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13031 13042]))                  
                :type "bool")
                nil [12995 13251])
            ("is_same" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card1" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13277 13288])
                    ("card2" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13289 13300])
                    ("card3" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13301 13312]))                  
                :type "bool")
                nil [13253 13449])
            ("has_card" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [13735 13745]))                  
                :type "bool")
                nil [13710 13946])
            ("permit_hu" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [13974 13984]))                  
                :type "bool")
                nil [13948 15680])
            ("permit_hu" function
               (:parent "HoleCards"
                :type "bool")
                nil [15682 16536])
            ("permit_chi" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [16565 16575]))                  
                :type "bool")
                nil [16538 17953])
            ("is_complete" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [17983 18004]))                  
                :type "bool")
                nil [17955 21658])
            ("is_complete" function
               (:parent "HoleCards"
                :arguments 
                  ( ("acards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [21688 21709])
                    ("d1" variable (:type "int") (reparse-symbol arg-sub-list) [21710 21717])
                    ("d2" variable (:type "int") (reparse-symbol arg-sub-list) [21718 21725]))                  
                :type "bool")
                nil [21660 22103])
            ("handler_ting" function
               (:parent "HoleCards"
                :arguments 
                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [22133 22143]))                  
                :type "int")
                nil [22105 22664])
            ("normal_cards_analysis" function
               (:parent "HoleCards"
                :arguments 
                  ( ("newcards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [22704 22727])
                    ("value" variable (:type "int") (reparse-symbol arg-sub-list) [22728 22738])
                    ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22739 22750]))                  
                :type "bool")
                nil [22666 23415])
            ("ghost_cards_analysis" function
               (:parent "HoleCards"
                :arguments 
                  ( ("newcards" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Card" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [23454 23477])
                    ("value" variable (:type "int") (reparse-symbol arg-sub-list) [23478 23488])
                    ("card" variable
                       (:reference 1
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23489 23500]))                  
                :type "bool")
                nil [23417 25177])
            ("analysis" function
               (:parent "HoleCards"
                :arguments 
                  ( ("card" variable (:type ("Card" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25210 25220]))                  
                :type "void")
                nil [25185 26838])
            ("analysis_card_type" function
               (:parent "HoleCards"
                :arguments 
                  ( ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [26875 26884]))                  
                :type "void")
                nil [26840 31104]))          
      :file "hole_cards.cc"
      :pointmax 31105
      :fsize 31460
      :lastmodtime '(22589 29336 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "card.h"
      :file "card.h"
      :fsize 3612
      :lastmodtime '(22587 53543 0 0))
    (semanticdb-table "deck.h"
      :file "deck.h"
      :fsize 1188
      :lastmodtime '(22587 53543 0 0))
    (semanticdb-table "card_type.h"
      :major-mode 'c++-mode
      :tags 
        '( ("_CARD_TYPE_H_" variable (:constant-flag t) nil [31 44])
            ("CardType" type
               (:members 
                  ( ("CARD_TYPE_ERROR" variable
                       (:constant-flag t
                        :default-value (81 82)
                        :type "int")
                        (reparse-symbol enumsubparts) [63 82])
                    ("CARD_TYPE_PING_HU" variable
                       (:constant-flag t
                        :default-value (115 116)
                        :type "int")
                        (reparse-symbol enumsubparts) [95 116])
                    ("CARD_TYPE_PENG_HU" variable
                       (:constant-flag t
                        :default-value (151 152)
                        :type "int")
                        (reparse-symbol enumsubparts) [131 152])
                    ("CARD_TYPE_QING_YI_SE" variable
                       (:constant-flag t
                        :default-value (181 182)
                        :type "int")
                        (reparse-symbol enumsubparts) [158 182])
                    ("CARD_TYPE_QI_XIAO_DUI" variable
                       (:constant-flag t
                        :default-value (222 223)
                        :type "int")
                        (reparse-symbol enumsubparts) [198 223])
                    ("CARD_TYPE_QI_DA_DUI" variable
                       (:constant-flag t
                        :default-value (259 260)
                        :type "int")
                        (reparse-symbol enumsubparts) [237 260])
                    ("CARD_TYPE_PENG_YI_SE" variable
                       (:constant-flag t
                        :default-value (295 296)
                        :type "int")
                        (reparse-symbol enumsubparts) [272 296]))                  
                :type "enum")
                nil [46 310]))          
      :file "card_type.h"
      :pointmax 339
      :fsize 376
      :lastmodtime '(22587 53543 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_CARD_TYPE_H_")
          )
))
  :file "!usr!local!lzmajiang!libmajiang!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
